format 222
"resolver" // jdk1.8::com::sun::org::apache::xml::internal::resolver
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/resolver/"
  java_package "com.sun.org.apache.xml.internal.resolver"
  classview 165378 "resolver"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 737026 "CatalogManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "CatalogManager provides an interface to the catalog properties.

<p>Properties can come from two places: from system properties or
from a <i>CatalogManager.properties</i> file. This class provides a transparent
interface to both, with system properties preferred over property file values.</p>

<p>The following table summarizes the properties:</p>

<table border=\"1\">
<thead>
<tr>
<td>System Property</td>
<td>CatalogManager.properties<br/>Property</td>
<td>Description</td>
</tr>
</thead>
<tbody>
<tr>
<td>xml.catalog.ignoreMissing</td>
<td>&#160;</td>
<td>If true, a missing <i>CatalogManager.properties</i> file or missing properties
within that file will not generate warning messages. See also the
<i>ignoreMissingProperties</i> method.</td>
</tr>

<tr>
<td>xml.catalog.files</td>
<td>catalogs</td>
<td>The <emph>semicolon-delimited</emph> list of catalog files.</td>
</tr>

<tr>
<td>&#160;</td>
<td>relative-catalogs</td>
<td>If false, relative catalog URIs are made absolute with respect to the base URI of
the <i>CatalogManager.properties</i> file. This setting only applies to catalog
URIs obtained from the <i>catalogs</i> property <emph>in the</emph>
<i>CatalogManager.properties</i> file</td>
</tr>

<tr>
<td>xml.catalog.verbosity</td>
<td>verbosity</td>
<td>If non-zero, the Catalog classes will print informative and debugging messages.
The higher the number, the more messages.</td>
</tr>

<tr>
<td>xml.catalog.prefer</td>
<td>prefer</td>
<td>Which identifier is preferred, \"public\" or \"system\"?</td>
</tr>

<tr>
<td>xml.catalog.staticCatalog</td>
<td>static-catalog</td>
<td>Should a single catalog be constructed for all parsing, or should a different
catalog be created for each parser?</td>
</tr>

<tr>
<td>xml.catalog.allowPI</td>
<td>allow-oasis-xml-catalog-pi</td>
<td>If the source document contains \"oasis-xml-catalog\" processing instructions,
should they be used?</td>
</tr>

<tr>
<td>xml.catalog.className</td>
<td>catalog-class-name</td>
<td>If you're using the convenience classes
<tt>com.sun.org.apache.xml.internal.resolver.tools.*</tt>), this setting
allows you to specify an alternate class name to use for the underlying
catalog.</td>
</tr>
</tbody>
</table>

@see Catalog

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

@version 1.0
"
      classrelation 2397698 // pFiles (<unidirectional association>)
	relation 2397698 --->
	  a role_name "pFiles" init_value " \"xml.catalog.files\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2397698 // pFiles (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2397826 // pVerbosity (<unidirectional association>)
	relation 2397826 --->
	  a role_name "pVerbosity" init_value " \"xml.catalog.verbosity\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2397826 // pVerbosity (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2397954 // pPrefer (<unidirectional association>)
	relation 2397954 --->
	  a role_name "pPrefer" init_value " \"xml.catalog.prefer\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2397954 // pPrefer (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2398082 // pStatic (<unidirectional association>)
	relation 2398082 --->
	  a role_name "pStatic" init_value " \"xml.catalog.staticCatalog\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398082 // pStatic (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2398210 // pAllowPI (<unidirectional association>)
	relation 2398210 --->
	  a role_name "pAllowPI" init_value " \"xml.catalog.allowPI\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398210 // pAllowPI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2398338 // pClassname (<unidirectional association>)
	relation 2398338 --->
	  a role_name "pClassname" init_value " \"xml.catalog.className\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398338 // pClassname (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2398466 // pIgnoreMissing (<unidirectional association>)
	relation 2398466 --->
	  a role_name "pIgnoreMissing" init_value " \"xml.catalog.ignoreMissing\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398466 // pIgnoreMissing (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2398594 // staticManager (<unidirectional association>)
	relation 2398594 --->
	  a role_name "staticManager" init_value " new CatalogManager()" class_relation private
	    comment " A static CatalogManager instance for sharing 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398594 // staticManager (<unidirectional association>)
	  b parent class_ref 737026 // CatalogManager
      end

      classrelation 2398722 // bResolver (<unidirectional association>)
	relation 2398722 --->
	  a role_name "bResolver" init_value " new BootstrapResolver()" private
	    comment " The bootstrap resolver to use when loading XML Catalogs. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398722 // bResolver (<unidirectional association>)
	  b parent class_ref 748418 // BootstrapResolver
      end

      attribute 1175298 "ignoreMissingProperties"
	private explicit_type "boolean"
	init_value " (SecuritySupport.getSystemProperty(pIgnoreMissing) != null
       || SecuritySupport.getSystemProperty(pFiles) != null)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag to ignore missing property files and/or properties 
"
      end

      classrelation 2398850 // resources (<unidirectional association>)
	relation 2398850 --->
	  a role_name "resources" private
	    comment " Holds the resources after they are loaded from the file. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398850 // resources (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      classrelation 2398978 // propertyFile (<unidirectional association>)
	relation 2398978 --->
	  a role_name "propertyFile" init_value " \"CatalogManager.properties\"" private
	    comment " The name of the CatalogManager properties file. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2398978 // propertyFile (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2399106 // propertyFileURI (<unidirectional association>)
	relation 2399106 --->
	  a role_name "propertyFileURI" init_value " null" private
	    comment " The location of the propertyFile 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2399106 // propertyFileURI (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 2399234 // defaultCatalogFiles (<unidirectional association>)
	relation 2399234 --->
	  a role_name "defaultCatalogFiles" init_value " \"./xcatalog\"" private
	    comment " Default catalog files list. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2399234 // defaultCatalogFiles (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2399362 // catalogFiles (<unidirectional association>)
	relation 2399362 --->
	  a role_name "catalogFiles" init_value " null" private
	    comment " Current catalog files list. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2399362 // catalogFiles (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1175426 "fromPropertiesFile"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Did the catalogFiles come from the properties file? 
"
      end

      attribute 1175554 "defaultVerbosity"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default verbosity level if there is no property setting for it. 
"
      end

      classrelation 2399490 // verbosity (<unidirectional association>)
	relation 2399490 --->
	  a role_name "verbosity" init_value " null" private
	    comment " Current verbosity level. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2399490 // verbosity (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      attribute 1175682 "defaultPreferPublic"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default preference setting. 
"
      end

      classrelation 2399618 // preferPublic (<unidirectional association>)
	relation 2399618 --->
	  a role_name "preferPublic" init_value " null" private
	    comment " Current preference setting. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2399618 // preferPublic (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      attribute 1175810 "defaultUseStaticCatalog"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default setting of the static catalog flag. 
"
      end

      classrelation 2399746 // useStaticCatalog (<unidirectional association>)
	relation 2399746 --->
	  a role_name "useStaticCatalog" init_value " null" private
	    comment " Current setting of the static catalog flag. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2399746 // useStaticCatalog (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 2399874 // staticCatalog (<unidirectional association>)
	relation 2399874 --->
	  a role_name "staticCatalog" init_value " null" class_relation private
	    comment " The static catalog used by this manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2399874 // staticCatalog (<unidirectional association>)
	  b parent class_ref 737154 // Catalog
      end

      attribute 1175938 "defaultOasisXMLCatalogPI"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default setting of the oasisXMLCatalogPI flag. 
"
      end

      classrelation 2400002 // oasisXMLCatalogPI (<unidirectional association>)
	relation 2400002 --->
	  a role_name "oasisXMLCatalogPI" init_value " null" private
	    comment " Current setting of the oasisXMLCatalogPI flag. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2400002 // oasisXMLCatalogPI (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      attribute 1176066 "defaultRelativeCatalogs"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default setting of the relativeCatalogs flag. 
"
      end

      classrelation 2400130 // relativeCatalogs (<unidirectional association>)
	relation 2400130 --->
	  a role_name "relativeCatalogs" init_value " null" private
	    comment " Current setting of the relativeCatalogs flag. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2400130 // relativeCatalogs (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 2400258 // catalogClassName (<unidirectional association>)
	relation 2400258 --->
	  a role_name "catalogClassName" init_value " null" private
	    comment " Current catalog class name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2400258 // catalogClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1176194 "useServicesMechanism"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether implementation parts should use
  service loader (or similar).
Note the default value (false) is the safe option..

"
      end

      classrelation 2400386 // debug (<unidirectional association>)
	relation 2400386 --->
	  a role_name "debug" init_value " null" public
	    comment " The manager's debug object. Used for printing debugging messages.

<p>This field is public so that objects that have access to this
CatalogManager can use this debug object.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2400386 // debug (<unidirectional association>)
	  b parent class_ref 748546 // Debug
      end

      operation 5259522 "CatalogManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor. "
      end

      operation 5259650 "CatalogManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "propertyFile" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor that specifies an explicit property file. "
      end

      operation 5259778 "init"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5259906 "setBootstrapResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 748418 // BootstrapResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the bootstrap resolver."
      end

      operation 5260034 "getBootstrapResolver"
	public return_type class_ref 748418 // BootstrapResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get the bootstrap resolver."
      end

      operation 5260162 "readProperties"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load the properties from the propertyFile and build the
resources from it.
"
      end

      operation 5260290 "getStaticManager"
	class_operation public return_type class_ref 737026 // CatalogManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allow access to the static CatalogManager
"
      end

      operation 5260418 "getIgnoreMissingProperties"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "How are missing properties handled?

<p>If true, missing or unreadable property files will
not be reported. Otherwise, a message will be sent to System.err.
</p>
"
      end

      operation 5260546 "setIgnoreMissingProperties"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ignore" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "How should missing properties be handled?

<p>If ignore is true, missing or unreadable property files will
not be reported. Otherwise, a message will be sent to System.err.
</p>
"
      end

      operation 5260674 "ignoreMissingProperties"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ignore" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "How are missing properties handled?

<p>If ignore is true, missing or unreadable property files will
not be reported. Otherwise, a message will be sent to System.err.
</p>

@deprecated No longer static; use get/set methods.
"
      end

      operation 5260802 "queryVerbosity"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the verbosity setting from the properties.

@return The verbosity level from the propertyFile or the
defaultVerbosity.
"
      end

      operation 5260930 "getVerbosity"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "What is the current verbosity?
"
      end

      operation 5261058 "setVerbosity"
	public explicit_return_type "void"
	nparams 1
	  param in name "verbosity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current verbosity.
"
      end

      operation 5261186 "verbosity"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "What is the current verbosity?

@deprecated No longer static; use get/set methods.
"
      end

      operation 5261314 "queryRelativeCatalogs"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the relativeCatalogs setting from the properties.

@return The relativeCatalogs setting from the propertyFile or the
defaultRelativeCatalogs.
"
      end

      operation 5261442 "getRelativeCatalogs"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the relativeCatalogs setting.

<p>This property is used when the catalogFiles property is
interrogated. If true, then relative catalog entry file names
are returned. If false, relative catalog entry file names are
made absolute with respect to the properties file before returning
them.</p>

<p>This property <emph>only applies</emph> when the catalog files
come from a properties file. If they come from a system property or
the default list, they are never considered relative. (What would
they be relative to?)</p>

<p>In the properties, a value of 'yes', 'true', or '1' is considered
true, anything else is false.</p>

@return The relativeCatalogs setting from the propertyFile or the
defaultRelativeCatalogs.
"
      end

      operation 5261570 "setRelativeCatalogs"
	public explicit_return_type "void"
	nparams 1
	  param inout name "relative" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the relativeCatalogs setting.

@see #getRelativeCatalogs()
"
      end

      operation 5261698 "relativeCatalogs"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the relativeCatalogs setting.

@deprecated No longer static; use get/set methods.
"
      end

      operation 5261826 "queryCatalogFiles"
	private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the list of catalog files from the properties.

@return A semicolon delimited list of catlog file URIs
"
      end

      operation 5261954 "getCatalogFiles"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current list of catalog files.

@return A vector of the catalog file names or null if no catalogs
are available in the properties.
"
      end

      operation 5262082 "setCatalogFiles"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fileList" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the list of catalog files.
"
      end

      operation 5262210 "catalogFiles"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current list of catalog files.

@return A vector of the catalog file names or null if no catalogs
are available in the properties.

@deprecated No longer static; use get/set methods.
"
      end

      operation 5262338 "queryPreferPublic"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the preferPublic setting from the properties.

<p>In the properties, a value of 'public' is true,
anything else is false.</p>

@return True if prefer is public or the
defaultPreferSetting.
"
      end

      operation 5262466 "getPreferPublic"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current prefer public setting.

@return True if public identifiers are preferred.
"
      end

      operation 5262594 "setPreferPublic"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preferPublic" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the prefer public setting.
"
      end

      operation 5262722 "preferPublic"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current prefer public setting.

@return True if public identifiers are preferred.

@deprecated No longer static; use get/set methods.
"
      end

      operation 5262850 "queryUseStaticCatalog"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the static-catalog setting from the properties.

<p>In the properties, a value of 'yes', 'true', or '1' is considered
true, anything else is false.</p>

@return The static-catalog setting from the propertyFile or the
defaultUseStaticCatalog.
"
      end

      operation 5262978 "getUseStaticCatalog"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current use static catalog setting.
"
      end

      operation 5263106 "setUseStaticCatalog"
	public explicit_return_type "void"
	nparams 1
	  param inout name "useStatic" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the use static catalog setting.
"
      end

      operation 5263234 "staticCatalog"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current use static catalog setting.

@deprecated No longer static; use get/set methods.
"
      end

      operation 5263362 "getPrivateCatalog"
	public return_type class_ref 737154 // Catalog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a new catalog instance.

This method always returns a new instance of the underlying catalog class.
"
      end

      operation 5263490 "getCatalog"
	public return_type class_ref 737154 // Catalog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a catalog instance.

If this manager uses static catalogs, the same static catalog will
always be returned. Otherwise a new catalog will be returned.
"
      end

      operation 5263618 "queryAllowOasisXMLCatalogPI"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain the oasisXMLCatalogPI setting from the properties.</p>

<p>In the properties, a value of 'yes', 'true', or '1' is considered
true, anything else is false.</p>

@return The oasisXMLCatalogPI setting from the propertyFile or the
defaultOasisXMLCatalogPI.
"
      end

      operation 5263746 "getAllowOasisXMLCatalogPI"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current XML Catalog PI setting.
"
      end

      operation 5263874 "useServicesMechanism"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5264002 "setAllowOasisXMLCatalogPI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowPI" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the XML Catalog PI setting
"
      end

      operation 5264130 "allowOasisXMLCatalogPI"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current XML Catalog PI setting.

@deprecated No longer static; use get/set methods.
"
      end

      operation 5264258 "queryCatalogClassName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the Catalog class name setting from the properties.

"
      end

      operation 5264386 "getCatalogClassName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current Catalog class name.
"
      end

      operation 5264514 "setCatalogClassName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the Catalog class name.
"
      end

      operation 5264642 "catalogClassName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current Catalog class name.

@deprecated No longer static; use get/set methods.
"
      end
    end

    class 737154 "Catalog"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents OASIS Open Catalog files.

<p>This class implements the semantics of OASIS Open Catalog files
(defined by
<a href=\"http://www.oasis-open.org/html/a401.htm\">OASIS Technical
Resolution 9401:1997 (Amendment 2 to TR 9401)</a>).</p>

<p>The primary purpose of the Catalog is to associate resources in the
document with local system identifiers. Some entities
(document types, XML entities, and notations) have names and all of them
can have either public or system identifiers or both. (In XML, only a
notation can have a public identifier without a system identifier, but
the methods implemented in this class obey the Catalog semantics
from the SGML
days when system identifiers were optional.)</p>

<p>The system identifiers returned by the resolution methods in this
class are valid, i.e. usable by, and in fact constructed by, the
<tt>java.net.URL</tt> class. Unfortunately, this class seems to behave in
somewhat non-standard ways and the system identifiers returned may
not be directly usable in a browser or filesystem context.

<p>This class recognizes all of the Catalog entries defined in
TR9401:1997:</p>

<ul>
<li><b>BASE</b>
changes the base URI for resolving relative system identifiers. The
initial base URI is the URI of the location of the catalog (which is,
in turn, relative to the location of the current working directory
at startup, as returned by the <tt>user.dir</tt> system property).</li>
<li><b>CATALOG</b>
processes other catalog files. An included catalog occurs logically
at the end of the including catalog.</li>
<li><b>DELEGATE_PUBLIC</b>
specifies alternate catalogs for some public identifiers. The delegated
catalogs are not loaded until they are needed, but they are cached
once loaded.</li>
<li><b>DELEGATE_SYSTEM</b>
specifies alternate catalogs for some system identifiers. The delegated
catalogs are not loaded until they are needed, but they are cached
once loaded.</li>
<li><b>DELEGATE_URI</b>
specifies alternate catalogs for some URIs. The delegated
catalogs are not loaded until they are needed, but they are cached
once loaded.</li>
<li><b>REWRITE_SYSTEM</b>
specifies alternate prefix for a system identifier.</li>
<li><b>REWRITE_URI</b>
specifies alternate prefix for a URI.</li>
<li><b>SYSTEM_SUFFIX</b>
maps any system identifier that ends with a particular suffix to another
system identifier.</li>
<li><b>URI_SUFFIX</b>
maps any URI that ends with a particular suffix to another URI.</li>
<li><b>DOCTYPE</b>
associates the names of root elements with URIs. (In other words, an XML
processor might infer the doctype of an XML document that does not include
a doctype declaration by looking for the DOCTYPE entry in the
catalog which matches the name of the root element of the document.)</li>
<li><b>DOCUMENT</b>
provides a default document.</li>
<li><b>DTDDECL</b>
recognized and silently ignored. Not relevant for XML.</li>
<li><b>ENTITY</b>
associates entity names with URIs.</li>
<li><b>LINKTYPE</b>
recognized and silently ignored. Not relevant for XML.</li>
<li><b>NOTATION</b>
associates notation names with URIs.</li>
<li><b>OVERRIDE</b>
changes the override behavior. Initial behavior is set by the
system property <tt>xml.catalog.override</tt>. The default initial
behavior is 'YES', that is, entries in the catalog override
system identifiers specified in the document.</li>
<li><b>PUBLIC</b>
maps a public identifier to a system identifier.</li>
<li><b>SGMLDECL</b>
recognized and silently ignored. Not relevant for XML.</li>
<li><b>SYSTEM</b>
maps a system identifier to another system identifier.</li>
<li><b>URI</b>
maps a URI to another URI.</li>
</ul>

<p>Note that BASE entries are treated as described by RFC2396. In
particular, this has the counter-intuitive property that after a BASE
entry identifing \"http://example.com/a/b/c\" as the base URI,
the relative URI \"foo\" is resolved to the absolute URI
\"http://example.com/a/b/foo\". You must provide the trailing slash if
you do not want the final component of the path to be discarded as a
filename would in a URI for a resource: \"http://example.com/a/b/c/\".
</p>

<p>Note that subordinate catalogs (all catalogs except the first,
including CATALOG and DELEGATE* catalogs) are only loaded if and when
they are required.</p>

<p>This class relies on classes which implement the CatalogReader
interface to actually load catalog files. This allows the catalog
semantics to be implemented for TR9401 text-based catalogs, XML
catalogs, or any number of other storage formats.</p>

<p>Additional catalogs may also be loaded with the
{@link #parseCatalog} method.</p>
</dd>
</dl>

<p><b>Change Log:</b></p>
<dl>
<dt>2.0</dt>
<dd><p>Rewrite to use CatalogReaders.</p></dd>
<dt>1.1</dt>
<dd><p>Allow quoted components in <tt>xml.catalog.files</tt>
so that URLs containing colons can be used on Unix.
The string passed to <tt>xml.catalog.files</tt> can now have the form:</p>
<pre>
unquoted-path-with-no-sep-chars:\"double-quoted path with or without sep chars\":'single-quoted path with or without sep chars'
</pre>
<p>(Where \":\" is the separater character in this example.)</p>
<p>If an unquoted path contains an embedded double or single quote
character, no special processig is performed on that character. No
path can contain separater characters, double, and single quotes
simultaneously.</p>
<p>Fix bug in calculation of BASE entries: if
a catalog contains multiple BASE entries, each is relative to the preceding
base, not the default base URI of the catalog.</p>
</dd>
<dt>1.0.1</dt>
<dd><p>Fixed a bug in the calculation of the list of subordinate catalogs.
This bug caused an infinite loop where parsing would alternately process
two catalogs indefinitely.</p>
</dd>
</dl>

@see CatalogReader
@see CatalogEntry

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

@version 1.0

<p>Derived from public domain code originally published by Arbortext,
Inc.</p>
"
      attribute 1171330 "BASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"BASE\", 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The BASE Catalog Entry type. 
"
      end

      attribute 1171458 "CATALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"CATALOG\", 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The CATALOG Catalog Entry type. 
"
      end

      attribute 1171586 "DOCUMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"DOCUMENT\", 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The DOCUMENT Catalog Entry type. 
"
      end

      attribute 1171714 "OVERRIDE"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"OVERRIDE\", 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The OVERRIDE Catalog Entry type. 
"
      end

      attribute 1171842 "SGMLDECL"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"SGMLDECL\", 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The SGMLDECL Catalog Entry type. 
"
      end

      attribute 1171970 "DELEGATE_PUBLIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"DELEGATE_PUBLIC\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The DELEGATE_PUBLIC Catalog Entry type. 
"
      end

      attribute 1172098 "DELEGATE_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"DELEGATE_SYSTEM\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The DELEGATE_SYSTEM Catalog Entry type. 
"
      end

      attribute 1172226 "DELEGATE_URI"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"DELEGATE_URI\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The DELEGATE_URI Catalog Entry type. 
"
      end

      attribute 1172354 "DOCTYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"DOCTYPE\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The DOCTYPE Catalog Entry type. 
"
      end

      attribute 1172482 "DTDDECL"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"DTDDECL\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The DTDDECL Catalog Entry type. 
"
      end

      attribute 1172610 "ENTITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"ENTITY\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The ENTITY Catalog Entry type. 
"
      end

      attribute 1172738 "LINKTYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"LINKTYPE\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The LINKTYPE Catalog Entry type. 
"
      end

      attribute 1172866 "NOTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"NOTATION\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The NOTATION Catalog Entry type. 
"
      end

      attribute 1172994 "PUBLIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"PUBLIC\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The PUBLIC Catalog Entry type. 
"
      end

      attribute 1173122 "SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"SYSTEM\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The SYSTEM Catalog Entry type. 
"
      end

      attribute 1173250 "URI"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"URI\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The URI Catalog Entry type. 
"
      end

      attribute 1173378 "REWRITE_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"REWRITE_SYSTEM\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The REWRITE_SYSTEM Catalog Entry type. 
"
      end

      attribute 1173506 "REWRITE_URI"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"REWRITE_URI\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The REWRITE_URI Catalog Entry type. 
"
      end

      attribute 1173634 "SYSTEM_SUFFIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"SYSTEM_SUFFIX\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The SYSTEM_SUFFIX Catalog Entry type. 
"
      end

      attribute 1173762 "URI_SUFFIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"URI_SUFFIX\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The URI_SUFFIX Catalog Entry type. 
"
      end

      classrelation 2395650 // base (<unidirectional association>)
	relation 2395650 --->
	  a role_name "base" protected
	    comment "
The base URI for relative system identifiers in the catalog.
This may be changed by BASE entries in the catalog.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2395650 // base (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 2395778 // catalogCwd (<unidirectional association>)
	relation 2395778 --->
	  a role_name "catalogCwd" protected
	    comment " The base URI of the Catalog file currently being parsed. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2395778 // catalogCwd (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 2395906 // catalogEntries (<unidirectional association>)
	relation 2395906 --->
	  a role_name "catalogEntries" init_value " new Vector()" protected
	    comment " The catalog entries currently known to the system. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2395906 // catalogEntries (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1173890 "default_override"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The default initial override setting. 
"
      end

      classrelation 2396034 // catalogManager (<unidirectional association>)
	relation 2396034 --->
	  a role_name "catalogManager" init_value " CatalogManager.getStaticManager()" protected
	    comment " The catalog manager in use for this instance. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2396034 // catalogManager (<unidirectional association>)
	  b parent class_ref 737026 // CatalogManager
      end

      classrelation 2396162 // catalogFiles (<unidirectional association>)
	relation 2396162 --->
	  a role_name "catalogFiles" init_value " new Vector()" protected
	    comment "
A vector of catalog files to be loaded.

<p>This list is initially established by
<code>loadSystemCatalogs</code> when
it parses the system catalog list, but CATALOG entries may
contribute to it during the course of parsing.</p>

@see #loadSystemCatalogs
@see #localCatalogFiles

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2396162 // catalogFiles (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2396290 // localCatalogFiles (<unidirectional association>)
	relation 2396290 --->
	  a role_name "localCatalogFiles" init_value " new Vector()" protected
	    comment "
A vector of catalog files constructed during processing of
CATALOG entries in the current catalog.

<p>This two-level system is actually necessary to correctly implement
the semantics of the CATALOG entry. If one catalog file includes
another with a CATALOG entry, the included catalog logically
occurs <i>at the end</i> of the including catalog, and after any
preceding CATALOG entries. In other words, the CATALOG entry
cannot insert anything into the middle of a catalog file.</p>

<p>When processing reaches the end of each catalog files, any
elements on this vector are added to the front of the
<code>catalogFiles</code> vector.</p>

@see #catalogFiles

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2396290 // localCatalogFiles (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2396418 // catalogs (<unidirectional association>)
	relation 2396418 --->
	  a role_name "catalogs" init_value " new Vector()" protected
	    comment "
A vector of Catalogs.

<p>The semantics of Catalog resolution are such that each
catalog is effectively a list of Catalogs (in other words,
a recursive list of Catalog instances).</p>

<p>Catalogs that are processed as the result of CATALOG or
DELEGATE* entries are subordinate to the catalog that contained
them, but they may in turn have subordinate catalogs.</p>

<p>Catalogs are only loaded when they are needed, so this vector
initially contains a list of Catalog filenames (URLs). If, during
processing, one of these catalogs has to be loaded, the resulting
Catalog object is placed in the vector, effectively caching it
for the next query.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2396418 // catalogs (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2396546 // localDelegate (<unidirectional association>)
	relation 2396546 --->
	  a role_name "localDelegate" init_value " new Vector()" protected
	    comment "
A vector of DELEGATE* Catalog entries constructed during
processing of the Catalog.

<p>This two-level system has two purposes; first, it allows
us to sort the DELEGATE* entries by the length of the partial
public identifier so that a linear search encounters them in
the correct order and second, it puts them all at the end of
the Catalog.</p>

<p>When processing reaches the end of each catalog file, any
elements on this vector are added to the end of the
<code>catalogEntries</code> vector. This assures that matching
PUBLIC keywords are encountered before DELEGATE* entries.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2396546 // localDelegate (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2396674 // readerMap (<unidirectional association>)
	relation 2396674 --->
	  a role_name "readerMap" init_value " new HashMap<>()" protected
	    comment "
A hash of CatalogReaders.

<p>This hash maps MIME types to elements in the readerArr
vector. This allows the Catalog to quickly locate the reader
for a particular MIME type.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2396674 // readerMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2396802 // readerArr (<unidirectional association>)
	relation 2396802 --->
	  a role_name "readerArr" init_value " new Vector()" protected
	    comment "
A vector of CatalogReaders.

<p>This vector contains all of the readers in the order that they
were added. In the event that a catalog is read from a file, where
the MIME type is unknown, each reader is attempted in turn until
one succeeds.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2396802 // readerArr (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 5252738 "Catalog"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty Catalog.

<p>The constructor interrogates the relevant system properties
using the default (static) CatalogManager
and initializes the catalog data structures.</p>
"
      end

      operation 5252866 "Catalog"
	public explicit_return_type ""
	nparams 1
	  param inout name "manager" type class_ref 737026 // CatalogManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty Catalog with a specific CatalogManager.

<p>The constructor interrogates the relevant system properties
using the specified Catalog Manager
and initializes the catalog data structures.</p>
"
      end

      operation 5252994 "getCatalogManager"
	public return_type class_ref 737026 // CatalogManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the CatalogManager used by this catalog.

"
      end

      operation 5253122 "setCatalogManager"
	public explicit_return_type "void"
	nparams 1
	  param inout name "manager" type class_ref 737026 // CatalogManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establish the CatalogManager used by this catalog.

"
      end

      operation 5253250 "setupReaders"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Setup readers.
"
      end

      operation 5253378 "addReader"
	public explicit_return_type "void"
	nparams 2
	  param inout name "mimeType" type class_ref 128130 // String
	  param inout name "reader" type class_ref 748034 // CatalogReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new CatalogReader to the Catalog.

<p>This method allows you to add a new CatalogReader to the
catalog. The reader will be associated with the specified mimeType.
You can only have one reader per mimeType.</p>

<p>In the absence of a mimeType (e.g., when reading a catalog
directly from a file on the local system), the readers are attempted
in the order that you add them to the Catalog.</p>

<p>Note that subordinate catalogs (created by CATALOG or
DELEGATE* entries) get a copy of the set of readers present in
the primary catalog when they are created. Readers added subsequently
will not be available. For this reason, it is best to add all
of the readers before the first call to parse a catalog.</p>

@param mimeType The MIME type associated with this reader.
@param reader The CatalogReader to use.
"
      end

      operation 5253506 "copyReaders"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "newCatalog" type class_ref 737154 // Catalog
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the reader list from the current Catalog to a new Catalog.

<p>This method is used internally when constructing a new catalog.
It copies the current reader associations over to the new catalog.
</p>

@param newCatalog The new Catalog.
"
      end

      operation 5253634 "newCatalog"
	protected return_type class_ref 737154 // Catalog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new Catalog object.

<p>This method constructs a new instance of the running Catalog
class (which might be a subtype of com.sun.org.apache.xml.internal.resolver.Catalog).
All new catalogs are managed by the same CatalogManager.
</p>

<p>N.B. All Catalog subtypes should call newCatalog() to construct
a new Catalog. Do not simply use \"new Subclass()\" since that will
confuse future subclasses.</p>
"
      end

      operation 5253762 "getCurrentBase"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current base URI.
"
      end

      operation 5253890 "getDefaultOverride"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default override setting associated with this
catalog.

<p>All catalog files loaded by this catalog will have the
initial override setting specified by this default.</p>
"
      end

      operation 5254018 "loadSystemCatalogs"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load the system catalog files.

<p>The method adds all of the
catalogs specified in the <tt>xml.catalog.files</tt> property
to the Catalog list.</p>

@throws MalformedURLException  One of the system catalogs is
identified with a filename that is not a valid URL.
@throws IOException One of the system catalogs cannot be read.
"
      end

      operation 5254146 "parseCatalog"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a catalog file, augmenting internal data structures.

@param fileName The filename of the catalog file to process

@throws MalformedURLException The fileName cannot be turned into
a valid URL.
@throws IOException Error reading catalog file.
"
      end

      operation 5254274 "parseCatalog"
	public explicit_return_type "void"
	nparams 2
	  param inout name "mimeType" type class_ref 128130 // String
	  param inout name "is" type class_ref 146434 // InputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 748162 // CatalogException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a catalog file, augmenting internal data structures.

<p>Catalogs retrieved over the net may have an associated MIME type.
The MIME type can be used to select an appropriate reader.</p>

@param mimeType The MIME type of the catalog file.
@param is The InputStream from which the catalog should be read

@throws CatalogException Failed to load catalog
mimeType.
@throws IOException Error reading catalog file.
"
      end

      operation 5254402 "parseCatalog"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aUrl" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a catalog document, augmenting internal data structures.

<p>This method supports catalog files stored in jar files: e.g.,
jar:file:///path/to/filename.jar!/path/to/catalog.xml\". That URI
doesn't survive transmogrification through the URI processing that
the parseCatalog(String) performs and passing it as an input stream
doesn't set the base URI appropriately.</p>

<p>Written by Stefan Wachter (2002-09-26)</p>

@param aUrl The URL of the catalog document to process

@throws IOException Error reading catalog file.
"
      end

      operation 5254530 "parsePendingCatalogs"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse all of the pending catalogs.

<p>Catalogs may refer to other catalogs, this method parses
all of the currently pending catalog files.</p>
"
      end

      operation 5254658 "parseCatalogFile"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	nexceptions 3
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	  exception class_ref 748162 // CatalogException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a single catalog file, augmenting internal data structures.

@param fileName The filename of the catalog file to process

@throws MalformedURLException The fileName cannot be turned into
a valid URL.
@throws IOException Error reading catalog file.
"
      end

      operation 5254786 "addEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entry" type class_ref 748290 // CatalogEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cleanup and process a Catalog entry.

<p>This method processes each Catalog entry, changing mapped
relative system identifiers into absolute ones (based on the current
base URI), and maintaining other information about the current
catalog.</p>

@param entry The CatalogEntry to process.
"
      end

      operation 5254914 "unknownEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "strings" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle unknown CatalogEntry types.

<p>This method exists to allow subclasses to deal with unknown
entry types.</p>
"
      end

      operation 5255042 "parseAllCatalogs"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse all subordinate catalogs.

<p>This method recursively parses all of the subordinate catalogs.
If this method does not throw an exception, you can be confident that
no subsequent call to any resolve*() method will either, with two
possible exceptions:</p>

<ol>
<li><p>Delegated catalogs are re-parsed each time they are needed
(because a variable list of them may be needed in each case,
depending on the length of the matching partial public identifier).</p>
<p>But they are parsed by this method, so as long as they don't
change or disappear while the program is running, they shouldn't
generate errors later if they don't generate errors now.</p>
<li><p>If you add new catalogs with <code>parseCatalog</code>, they
won't be loaded until they are needed or until you call
<code>parseAllCatalogs</code> again.</p>
</ol>

<p>On the other hand, if you don't call this method, you may
successfully parse documents without having to load all possible
catalogs.</p>

@throws MalformedURLException The filename (URL) for a
subordinate or delegated catalog is not a valid URL.
@throws IOException Error reading some subordinate or delegated
catalog file.
"
      end

      operation 5255170 "resolveDoctype"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable DOCTYPE system identifier.

@param entityName The name of the entity (element) for which
a doctype is required.
@param publicId The nominal public identifier for the doctype
(as provided in the source document).
@param systemId The nominal system identifier for the doctype
(as provided in the source document).

@return The system identifier to use for the doctype.

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5255298 "resolveDocument"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable DOCUMENT entry.

@return The system identifier to use for the doctype.

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5255426 "resolveEntity"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable ENTITY system identifier.

@param entityName The name of the entity for which
a system identifier is required.
@param publicId The nominal public identifier for the entity
(as provided in the source document).
@param systemId The nominal system identifier for the entity
(as provided in the source document).

@return The system identifier to use for the entity.

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5255554 "resolveNotation"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "notationName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable NOTATION system identifier.

@param notationName The name of the notation for which
a doctype is required.
@param publicId The nominal public identifier for the notation
(as provided in the source document).
@param systemId The nominal system identifier for the notation
(as provided in the source document).

@return The system identifier to use for the notation.

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5255682 "resolvePublic"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable PUBLIC or SYSTEM identifier.

<p>This method searches the Catalog and returns the system
identifier specified for the given system or
public identifiers. If
no appropriate PUBLIC or SYSTEM entry is found in the Catalog,
null is returned.</p>

@param publicId The public identifier to locate in the catalog.
Public identifiers are normalized before comparison.
@param systemId The nominal system identifier for the entity
in question (as provided in the source document).

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.

@return The system identifier to use.
Note that the nominal system identifier is not returned if a
match is not found in the catalog, instead null is returned
to indicate that no match was found.
"
      end

      operation 5255810 "resolveLocalPublic"
	protected return_type class_ref 128130 // String
	nparams 4
	  param in name "entityType" explicit_type "int"
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable PUBLIC or SYSTEM identifier.

<p>This method searches the Catalog and returns the system
identifier specified for the given system or public identifiers.
If no appropriate PUBLIC or SYSTEM entry is found in the Catalog,
delegated Catalogs are interrogated.</p>

<p>There are four possible cases:</p>

<ul>
<li>If the system identifier provided matches a SYSTEM entry
in the current catalog, the SYSTEM entry is returned.
<li>If the system identifier is not null, the PUBLIC entries
that were encountered when OVERRIDE YES was in effect are
interrogated and the first matching entry is returned.</li>
<li>If the system identifier is null, then all of the PUBLIC
entries are interrogated and the first matching entry
is returned. This may not be the same as the preceding case, if
some PUBLIC entries are encountered when OVERRIDE NO is in effect. In
XML, the only place where a public identifier may occur without
a system identifier is in a notation declaration.</li>
<li>Finally, if the public identifier matches one of the partial
public identifiers specified in a DELEGATE* entry in
the Catalog, the delegated catalog is interrogated. The first
time that the delegated catalog is required, it will be
retrieved and parsed. It is subsequently cached.
</li>
</ul>

@param entityType The CatalogEntry type for which this query is
being conducted. This is necessary in order to do the approprate
query on a delegated catalog.
@param entityName The name of the entity being searched for, if
appropriate.
@param publicId The public identifier of the entity in question.
@param systemId The nominal system identifier for the entity
in question (as provided in the source document).

@throws MalformedURLException The formal system identifier of a
delegated catalog cannot be turned into a valid URL.
@throws IOException Error reading delegated catalog file.

@return The system identifier to use.
Note that the nominal system identifier is not returned if a
match is not found in the catalog, instead null is returned
to indicate that no match was found.
"
      end

      operation 5255938 "resolveSystem"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable SYSTEM system identifier.

<p>If a SYSTEM entry exists in the Catalog
for the system ID specified, return the mapped value.</p>

<p>On Windows-based operating systems, the comparison between
the system identifier provided and the SYSTEM entries in the
Catalog is case-insensitive.</p>

@param systemId The system ID to locate in the catalog.

@return The resolved system identifier.

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5256066 "resolveLocalSystem"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable SYSTEM system identifier in this
catalog.

<p>If a SYSTEM entry exists in the catalog file
for the system ID specified, return the mapped value.</p>

@param systemId The system ID to locate in the catalog

@return The mapped system identifier or null
"
      end

      operation 5256194 "resolveURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable URI.

<p>If a URI entry exists in the Catalog
for the URI specified, return the mapped value.</p>

<p>URI comparison is case sensitive.</p>

@param uri The URI to locate in the catalog.

@return The resolved URI.

@throws MalformedURLException The system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5256322 "resolveLocalURI"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable URI in this catalog.

<p>If a URI entry exists in the catalog file
for the URI specified, return the mapped value.</p>

@param uri The URI to locate in the catalog

@return The mapped URI or null
"
      end

      operation 5256450 "resolveSubordinateCatalogs"
	protected return_type class_ref 128130 // String
	nparams 4
	  param in name "entityType" explicit_type "int"
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Search the subordinate catalogs, in order, looking for a match.

<p>This method searches the Catalog and returns the system
identifier specified for the given entity type with the given
name, public, and system identifiers. In some contexts, these
may be null.</p>

@param entityType The CatalogEntry type for which this query is
being conducted. This is necessary in order to do the approprate
query on a subordinate catalog.
@param entityName The name of the entity being searched for, if
appropriate.
@param publicId The public identifier of the entity in question
(as provided in the source document).
@param systemId The nominal system identifier for the entity
in question (as provided in the source document). This parameter is
overloaded for the URI entry type.

@throws MalformedURLException The formal system identifier of a
delegated catalog cannot be turned into a valid URL.
@throws IOException Error reading delegated catalog file.

@return The system identifier to use.
Note that the nominal system identifier is not returned if a
match is not found in the catalog, instead null is returned
to indicate that no match was found.
"
      end

      operation 5256578 "fixSlashes"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "sysid" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -----------------------------------------------------------------

Replace backslashes with forward slashes. (URLs always use
forward slashes.)

@param sysid The input system identifier.
@return The same system identifier with backslashes turned into
forward slashes.
"
      end

      operation 5256706 "makeAbsolute"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "sysid" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an absolute URI from a relative one, using the current
base URI.

@param sysid The (possibly relative) system identifier
@return The system identifier made absolute with respect to the
current {@link #base}.
"
      end

      operation 5256834 "normalizeURI"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "uriref" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform character normalization on a URI reference.

@param uriref The URI reference
@return The normalized URI reference.
"
      end

      operation 5256962 "encodedByte"
	protected return_type class_ref 128130 // String
	nparams 1
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform %-encoding on a single byte.

@param b The 8-bit integer that represents th byte. (Bytes are signed
but encoding needs to look at the bytes unsigned.)
@return The %-encoded string for the byte in question.
"
      end

      operation 5257090 "addDelegate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "entry" type class_ref 748290 // CatalogEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -----------------------------------------------------------------

Add to the current list of delegated catalogs.

<p>This method always constructs the {@link #localDelegate}
vector so that it is ordered by length of partial
public identifier.</p>

@param entry The DELEGATE catalog entry
"
      end
    end

    class 748162 "CatalogException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signal Catalog exception.

<p>This exception is thrown if an error occurs loading a
catalog file.</p>

@see Catalog

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

"
      classrelation 2397442 // <generalisation>
	relation 2397442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2397442 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1174146 "WRAPPER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A wrapper around another exception 
"
      end

      attribute 1174274 "INVALID_ENTRY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " An invalid entry 
"
      end

      attribute 1174402 "INVALID_ENTRY_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " An invalid entry type 
"
      end

      attribute 1174530 "NO_XML_PARSER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Could not instantiate an XML parser 
"
      end

      attribute 1174658 "UNKNOWN_FORMAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Unknown XML format 
"
      end

      attribute 1174786 "UNPARSEABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Unparseable XML catalog (not XML)
"
      end

      attribute 1174914 "PARSE_FAILED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML but parse failed 
"
      end

      attribute 1175042 "UNENDED_COMMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Text catalog ended in mid-comment 
"
      end

      classrelation 2397570 // exception (<unidirectional association>)
	relation 2397570 --->
	  a role_name "exception" init_value " null" private
	    comment "
The embedded exception if tunnelling, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2397570 // exception (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      attribute 1175170 "exceptionType"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5258498 "CatalogException"
	public explicit_return_type ""
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new CatalogException.

@param type The exception type
@param message The error or warning message.
"
      end

      operation 5258626 "CatalogException"
	public explicit_return_type ""
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new CatalogException.

@param type The exception type
"
      end

      operation 5258754 "CatalogException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new CatalogException wrapping an existing exception.

<p>The existing exception will be embedded in the new
one, and its message will become the default message for
the CatalogException.</p>

@param e The exception to be wrapped in a CatalogException.
"
      end

      operation 5258882 "CatalogException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new CatalogException from an existing exception.

<p>The existing exception will be embedded in the new
one, but the new exception will have its own message.</p>

@param message The detail message.
@param e The exception to be wrapped in a CatalogException.
"
      end

      operation 5259010 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a detail message for this exception.

<p>If there is an embedded exception, and if the CatalogException
has no detail message of its own, this method will return
the detail message from the embedded exception.</p>

@return The error or warning message.
"
      end

      operation 5259138 "getException"
	public return_type class_ref 132226 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the embedded exception, if any.

@return The embedded exception, or null if there is none.
"
      end

      operation 5259266 "getExceptionType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the exception type

@return The exception type
"
      end

      operation 5259394 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override toString to pick up any embedded exception.

@return A string representation of this exception.
"
      end
    end

    class 748290 "CatalogEntry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a Catalog entry.

<p>Instances of this class represent individual entries
in a Catalog.</p>

<p>Each catalog entry has a unique name and is associated with
an arbitrary number of arguments (all strings). For example, the
TR9401 catalog entry \"PUBLIC\" has two arguments, a public identifier
and a system identifier. Each entry has a unique numeric type,
assigned automatically when the entry type is created.</p>

<p>The number and type of catalog entries is maintained
<em>statically</em>. Catalog classes, or their subclasses, can add
new entry types, but all Catalog objects share the same global pool
of types.</p>

<p>Initially there are no valid entries.</p>

@see Catalog

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

"
      classrelation 2396930 // nextEntry (<unidirectional association>)
	relation 2396930 --->
	  a role_name "nextEntry" init_value " new AtomicInteger(0)" class_relation protected
	    comment " The nextEntry is the ordinal number of the next entry type. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2396930 // nextEntry (<unidirectional association>)
	  b parent class_ref 191490 // AtomicInteger
      end

      classrelation 2397058 // entryTypes (<unidirectional association>)
	relation 2397058 --->
	  a role_name "entryTypes" init_value " new ConcurrentHashMap<>()" class_relation const_relation protected
	    comment "
The entryTypes vector maps catalog entry names
(e.g., 'BASE' or 'SYSTEM') to their type (1, 2, etc.).
Names are case sensitive.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2397058 // entryTypes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2397186 // entryArgs (<unidirectional association>)
	relation 2397186 --->
	  a role_name "entryArgs" init_value " new Vector()" class_relation protected
	    comment " The entryTypes vector maps catalog entry types to the
number of arguments they're required to have. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2397186 // entryArgs (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 5257218 "addEntryType"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "numArgs" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new catalog entry type.

@param name The name of the catalog entry type. This must be
unique among all types and is case-sensitive. (Adding a duplicate
name effectively replaces the old type with the new type.)
@param numArgs The number of arguments that this entry type
is required to have. There is no provision for variable numbers
of arguments.
@return The type for the new entry.
"
      end

      operation 5257346 "getEntryType"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 748162 // CatalogException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lookup an entry type

@param name The name of the catalog entry type.
@return The type of the catalog entry with the specified name.
@throws InvalidCatalogEntryTypeException if no entry has the
specified name.
"
      end

      operation 5257474 "getEntryArgCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 748162 // CatalogException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find out how many arguments an entry is required to have.

@param name The name of the catalog entry type.
@return The number of arguments that entry type is required to have.
@throws InvalidCatalogEntryTypeException if no entry has the
specified name.
"
      end

      operation 5257602 "getEntryArgCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "type" explicit_type "int"
	nexceptions 1
	  exception class_ref 748162 // CatalogException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find out how many arguments an entry is required to have.

@param type A valid catalog entry type.
@return The number of arguments that entry type is required to have.
@throws InvalidCatalogEntryTypeException if the type is invalid.
"
      end

      attribute 1174018 "entryType"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The entry type of this entry 
"
      end

      classrelation 2397314 // args (<unidirectional association>)
	relation 2397314 --->
	  a role_name "args" init_value " null" protected
	    comment " The arguments associated with this entry 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2397314 // args (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 5257730 "CatalogEntry"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Null constructor; something for subclasses to call.
"
      end

      operation 5257858 "CatalogEntry"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "args" type class_ref 141442 // Vector
	nexceptions 1
	  exception class_ref 748162 // CatalogException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a catalog entry of the specified type.

@param name The name of the entry type
@param args A String Vector of arguments
@throws InvalidCatalogEntryTypeException if no such entry type
exists.
@throws InvalidCatalogEntryException if the wrong number of arguments
is passed.
"
      end

      operation 5257986 "CatalogEntry"
	public explicit_return_type ""
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "args" type class_ref 141442 // Vector
	nexceptions 1
	  exception class_ref 748162 // CatalogException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a catalog entry of the specified type.

@param type The entry type
@param args A String Vector of arguments
@throws InvalidCatalogEntryTypeException if no such entry type
exists.
@throws InvalidCatalogEntryException if the wrong number of arguments
is passed.
"
      end

      operation 5258114 "getEntryType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the entry type.

@return The entry type of the CatalogEntry
"
      end

      operation 5258242 "getEntryArg"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "argNum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an entry argument.

@param argNum The argument number (arguments are numbered from 0).
@return The specified argument or null if an invalid argNum is
provided.
"
      end

      operation 5258370 "setEntryArg"
	public explicit_return_type "void"
	nparams 2
	  param in name "argNum" explicit_type "int"
	  param inout name "newspec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 742274 // ArrayIndexOutOfBoundsException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an entry argument.

<p>Catalogs sometimes need to adjust the catlog entry parameters,
for example to make a relative URI absolute with respect to the
current base URI. But in general, this function should only be
called shortly after object creation to do some sort of cleanup.
Catalog entries should not mutate over time.</p>

@param argNum The argument number (arguments are numbered from 0).
@throws ArrayIndexOutOfBoundsException if an invalid argument
number is provided.
"
      end
    end

    class 748674 "Resolver"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An extension to OASIS Open Catalog files, this class supports
suffix-based matching and an external RFC2483 resolver.

@see Catalog

@author Norman Walsh
<a href=\"mailto:Norman.Walsh@Sun.COM\">Norman.Walsh@Sun.COM</a>

@version 1.0
"
      classrelation 2400514 // <generalisation>
	relation 2400514 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2400514 // <generalisation>
	  b parent class_ref 737154 // Catalog
      end

      attribute 1176322 "URISUFFIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"URISUFFIX\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The URISUFFIX Catalog Entry type.

<p>URI suffix entries match URIs that end in a specified suffix.</p>

"
      end

      attribute 1176450 "SYSTEMSUFFIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"SYSTEMSUFFIX\", 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SYSTEMSUFFIX Catalog Entry type.

<p>System suffix entries match system identifiers that end in a
specified suffix.</p>

"
      end

      attribute 1176578 "RESOLVER"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"RESOLVER\", 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The RESOLVER Catalog Entry type.

<p>A hook for providing support for web-based backup resolvers.</p>

"
      end

      attribute 1176706 "SYSTEMREVERSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " CatalogEntry.addEntryType(\"SYSTEMREVERSE\", 1)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SYSTEMREVERSE Catalog Entry type.

<p>This is a bit of a hack. There's no actual SYSTEMREVERSE entry,
but this entry type is used to indicate that a reverse lookup is
being performed. (This allows the Resolver to implement
RFC2483 I2N and I2NS.)

"
      end

      operation 5264770 "setupReaders"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Setup readers.
"
      end

      operation 5264898 "addEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entry" type class_ref 748290 // CatalogEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cleanup and process a Catalog entry.

<p>This method processes each Catalog entry, changing mapped
relative system identifiers into absolute ones (based on the current
base URI), and maintaining other information about the current
catalog.</p>

@param entry The CatalogEntry to process.
"
      end

      operation 5265026 "resolveURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable URI.

<p>If a URI entry exists in the Catalog
for the URI specified, return the mapped value.</p>

<p>In the Resolver (as opposed to the Catalog) class, if the
URI isn't found by the usual algorithm, URISUFFIX entries are
considered.</p>

<p>URI comparison is case sensitive.</p>

@param uri The URI to locate in the catalog.

@return The resolved URI.

@throws MalformedURLException The system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5265154 "resolveSystem"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable SYSTEM system identifier, resorting
to external RESOLVERs if necessary.

<p>If a SYSTEM entry exists in the Catalog
for the system ID specified, return the mapped value.</p>

<p>In the Resolver (as opposed to the Catalog) class, if the
URI isn't found by the usual algorithm, SYSTEMSUFFIX entries are
considered.</p>

<p>On Windows-based operating systems, the comparison between
the system identifier provided and the SYSTEM entries in the
Catalog is case-insensitive.</p>

@param systemId The system ID to locate in the catalog.

@return The system identifier to use for systemId.

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5265282 "resolvePublic"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable PUBLIC or SYSTEM identifier, resorting
to external resolvers if necessary.

<p>This method searches the Catalog and returns the system
identifier specified for the given system or
public identifiers. If
no appropriate PUBLIC or SYSTEM entry is found in the Catalog,
null is returned.</p>

<p>Note that a system or public identifier in the current catalog
(or subordinate catalogs) will be used in preference to an
external resolver. Further, if a systemId is present, the external
resolver(s) will be queried for that before the publicId.</p>

@param publicId The public identifier to locate in the catalog.
Public identifiers are normalized before comparison.
@param systemId The nominal system identifier for the entity
in question (as provided in the source document).

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.

@return The system identifier to use.
Note that the nominal system identifier is not returned if a
match is not found in the catalog, instead null is returned
to indicate that no match was found.
"
      end

      operation 5265410 "resolveExternalSystem"
	protected return_type class_ref 128130 // String
	nparams 2
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "resolver" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query an external RFC2483 resolver for a system identifier.

@param systemId The system ID to locate.
@param resolver The name of the resolver to use.

@return The system identifier to use for the systemId.
"
      end

      operation 5265538 "resolveExternalPublic"
	protected return_type class_ref 128130 // String
	nparams 2
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "resolver" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query an external RFC2483 resolver for a public identifier.

@param publicId The system ID to locate.
@param resolver The name of the resolver to use.

@return The system identifier to use for the systemId.
"
      end

      operation 5265666 "queryResolver"
	protected return_type class_ref 748674 // Resolver
	nparams 4
	  param inout name "resolver" type class_ref 128130 // String
	  param inout name "command" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 128130 // String
	  param inout name "arg2" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query an external RFC2483 resolver.

@param resolver The URL of the RFC2483 resolver.
@param command The command to send the resolver.
@param arg1 The first argument to the resolver.
@param arg2 The second argument to the resolver, usually null.

@return The Resolver constructed.
"
      end

      operation 5265794 "appendVector"
	private return_type class_ref 141442 // Vector
	nparams 2
	  param inout name "vec" type class_ref 141442 // Vector
	  param inout name "appvec" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append two vectors, returning the result.

@param vec The first vector
@param appvec The vector to be appended
@return The vector vec, with appvec's elements appended to it
"
      end

      operation 5265922 "resolveAllSystemReverse"
	public return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the URNs for a given system identifier in all catalogs.

@param systemId The system ID to locate.

@return A vector of URNs that map to the systemId.
"
      end

      operation 5266050 "resolveSystemReverse"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the URN for a given system identifier.

@param systemId The system ID to locate.

@return A (single) URN that maps to the systemId.
"
      end

      operation 5266178 "resolveAllSystem"
	public return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the applicable SYSTEM system identifiers.

<p>If one or more SYSTEM entries exists in the Catalog
for the system ID specified, return the mapped values.</p>

<p>The caller is responsible for doing any necessary
normalization of the system identifier before calling
this method. For example, a relative system identifier in
a document might be converted to an absolute system identifier
before attempting to resolve it.</p>

<p>Note that this function will force all subordinate catalogs
to be loaded.</p>

<p>On Windows-based operating systems, the comparison between
the system identifier provided and the SYSTEM entries in the
Catalog is case-insensitive.</p>

@param systemId The system ID to locate in the catalog.

@return The system identifier to use for the notation.

@throws MalformedURLException The formal system identifier of a
subordinate catalog cannot be turned into a valid URL.
@throws IOException Error reading subordinate catalog file.
"
      end

      operation 5266306 "resolveAllLocalSystem"
	private return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return all applicable SYSTEM system identifiers in this
catalog.

<p>If one or more SYSTEM entries exists in the catalog file
for the system ID specified, return the mapped values.</p>

@param systemId The system ID to locate in the catalog

@return A vector of the mapped system identifiers or null
"
      end

      operation 5266434 "resolveLocalSystemReverse"
	private return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the URNs for a given system identifier in the current catalog.

@param systemId The system ID to locate.

@return A vector of URNs that map to the systemId.
"
      end

      operation 5266562 "resolveAllSubordinateCatalogs"
	private return_type class_ref 141442 // Vector
	nparams 4
	  param in name "entityType" explicit_type "int"
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Search the subordinate catalogs, in order, looking for all
match.

<p>This method searches the Catalog and returns all of the system
identifiers specified for the given entity type with the given
name, public, and system identifiers. In some contexts, these
may be null.</p>

@param entityType The CatalogEntry type for which this query is
being conducted. This is necessary in order to do the approprate
query on a subordinate catalog.
@param entityName The name of the entity being searched for, if
appropriate.
@param publicId The public identifier of the entity in question
(as provided in the source document).
@param systemId The nominal system identifier for the entity
in question (as provided in the source document).

@throws MalformedURLException The formal system identifier of a
delegated catalog cannot be turned into a valid URL.
@throws IOException Error reading delegated catalog file.

@return The system identifier to use.
Note that the nominal system identifier is not returned if a
match is not found in the catalog, instead null is returned
to indicate that no match was found.
"
      end
    end
  end

  package_ref 172290 // readers

  deploymentview 159106 "resolver"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 526594 "Catalog"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import com.sun.org.apache.xml.internal.resolver.helpers.FileURL;
import com.sun.org.apache.xml.internal.resolver.helpers.PublicId;
import com.sun.org.apache.xml.internal.resolver.readers.CatalogReader;
import com.sun.org.apache.xml.internal.resolver.readers.OASISXMLCatalogReader;
import com.sun.org.apache.xml.internal.resolver.readers.SAXCatalogReader;
import com.sun.org.apache.xml.internal.resolver.readers.TR9401CatalogReader;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.xml.parsers.SAXParserFactory;
${definition}"
      associated_elems
	class_ref 737154 // Catalog
      end
      comment "Copyright (c) 2005, 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 Catalog.java - Represents OASIS Open Catalog files."
    end

    artifact 526722 "CatalogEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import java.util.Vector;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_elems
	class_ref 748290 // CatalogEntry
      end
      comment "Copyright (c) 2005, 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 CatalogEntry.java - Represents Catalog entries"
    end

    artifact 526850 "CatalogException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 748162 // CatalogException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 CatalogException.java - Catalog exception

Copyright 2001-2004 The Apache Software Foundation or its licensors,
as applicable.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 526978 "CatalogManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import com.sun.org.apache.xml.internal.resolver.helpers.BootstrapResolver;
import com.sun.org.apache.xml.internal.resolver.helpers.Debug;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.MissingResourceException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.StringTokenizer;
import java.util.Vector;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 737026 // CatalogManager
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 CatalogManager.java - Access CatalogManager.properties

Copyright 2001-2004 The Apache Software Foundation or its licensors,
as applicable.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 527106 "Resolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.FileNotFoundException;
import java.util.Enumeration;
import java.util.Vector;
import java.net.URL;
import java.net.URLConnection;
import java.net.MalformedURLException;
import javax.xml.parsers.SAXParserFactory;
import com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import com.sun.org.apache.xml.internal.resolver.readers.SAXCatalogReader;
import com.sun.org.apache.xml.internal.resolver.readers.OASISXMLCatalogReader;
import com.sun.org.apache.xml.internal.resolver.readers.TR9401CatalogReader;
${definition}"
      associated_elems
	class_ref 748674 // Resolver
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Resolver.java - Represents an extension of OASIS Open Catalog files.

Copyright 2001-2004 The Apache Software Foundation or its licensors,
as applicable.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end

  package_ref 172418 // helpers

  package_ref 172546 // tools
end
