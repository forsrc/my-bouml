class Comparator
!!!606082.java!!!	reversed() : Comparator
        return Collections.reverseOrder(this);
!!!606210.java!!!	thenComparing(inout other : Comparator) : Comparator
        Objects.requireNonNull(other);
        return (Comparator<T> & Serializable) (c1, c2) -> {
            int res = compare(c1, c2);
            return (res != 0) ? res : other.compare(c1, c2);
        };
!!!606338.java!!!	thenComparing(inout keyExtractor : Function, inout keyComparator : Comparator) : Comparator
        return thenComparing(comparing(keyExtractor, keyComparator));
!!!606466.java!!!	thenComparing(inout keyExtractor : Function) : Comparator
        return thenComparing(comparing(keyExtractor));
!!!606594.java!!!	thenComparingInt(inout keyExtractor : ToIntFunction) : Comparator
        return thenComparing(comparingInt(keyExtractor));
!!!606722.java!!!	thenComparingLong(inout keyExtractor : ToLongFunction) : Comparator
        return thenComparing(comparingLong(keyExtractor));
!!!606850.java!!!	thenComparingDouble(inout keyExtractor : ToDoubleFunction) : Comparator
        return thenComparing(comparingDouble(keyExtractor));
!!!606978.java!!!	reverseOrder() : Comparator
        return Collections.reverseOrder();
!!!607106.java!!!	naturalOrder() : Comparator
        return (Comparator<T>) Comparators.NaturalOrderComparator.INSTANCE;
!!!607234.java!!!	nullsFirst(inout comparator : Comparator) : Comparator
        return new Comparators.NullComparator<>(true, comparator);
!!!607362.java!!!	nullsLast(inout comparator : Comparator) : Comparator
        return new Comparators.NullComparator<>(false, comparator);
!!!607490.java!!!	comparing(inout keyExtractor : Function, inout keyComparator : Comparator) : Comparator
        Objects.requireNonNull(keyExtractor);
        Objects.requireNonNull(keyComparator);
        return (Comparator<T> & Serializable)
            (c1, c2) -> keyComparator.compare(keyExtractor.apply(c1),
                                              keyExtractor.apply(c2));
!!!607618.java!!!	comparing(inout keyExtractor : Function) : Comparator
        Objects.requireNonNull(keyExtractor);
        return (Comparator<T> & Serializable)
            (c1, c2) -> keyExtractor.apply(c1).compareTo(keyExtractor.apply(c2));
!!!607746.java!!!	comparingInt(inout keyExtractor : ToIntFunction) : Comparator
        Objects.requireNonNull(keyExtractor);
        return (Comparator<T> & Serializable)
            (c1, c2) -> Integer.compare(keyExtractor.applyAsInt(c1), keyExtractor.applyAsInt(c2));
!!!607874.java!!!	comparingLong(inout keyExtractor : ToLongFunction) : Comparator
        Objects.requireNonNull(keyExtractor);
        return (Comparator<T> & Serializable)
            (c1, c2) -> Long.compare(keyExtractor.applyAsLong(c1), keyExtractor.applyAsLong(c2));
!!!608002.java!!!	comparingDouble(inout keyExtractor : ToDoubleFunction) : Comparator
        Objects.requireNonNull(keyExtractor);
        return (Comparator<T> & Serializable)
            (c1, c2) -> Double.compare(keyExtractor.applyAsDouble(c1), keyExtractor.applyAsDouble(c2));
