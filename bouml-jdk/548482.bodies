class CharBuffer
!!!7600770.java!!!	CharBuffer(in mark : int, in pos : int, in lim : int, in cap : int, inout hb : char [[]], in offset : int)
        super(mark, pos, lim, cap);
        this.hb = hb;
        this.offset = offset;
!!!7600898.java!!!	CharBuffer(in mark : int, in pos : int, in lim : int, in cap : int)
 // package-private
        this(mark, pos, lim, cap, null, 0);
!!!7601026.java!!!	allocate(in capacity : int) : CharBuffer
        if (capacity < 0)
            throw new IllegalArgumentException();
        return new HeapCharBuffer(capacity, capacity);
!!!7601154.java!!!	wrap(inout array : char [[]], in offset : int, in length : int) : CharBuffer
        try {
            return new HeapCharBuffer(array, offset, length);
        } catch (IllegalArgumentException x) {
            throw new IndexOutOfBoundsException();
        }
!!!7601282.java!!!	wrap(inout array : char [[]]) : CharBuffer
        return wrap(array, 0, array.length);
!!!7601410.java!!!	read(inout target : CharBuffer) : int
        // Determine the number of bytes n that can be transferred
        int targetRemaining = target.remaining();
        int remaining = remaining();
        if (remaining == 0)
            return -1;
        int n = Math.min(remaining, targetRemaining);
        int limit = limit();
        // Set source limit to prevent target overflow
        if (targetRemaining < remaining)
            limit(position() + n);
        try {
            if (n > 0)
                target.put(this);
        } finally {
            limit(limit); // restore real limit
        }
        return n;
!!!7601538.java!!!	wrap(inout csq : CharSequence, in start : int, in end : int) : CharBuffer
        try {
            return new StringCharBuffer(csq, start, end);
        } catch (IllegalArgumentException x) {
            throw new IndexOutOfBoundsException();
        }
!!!7601666.java!!!	wrap(inout csq : CharSequence) : CharBuffer
        return wrap(csq, 0, csq.length());
!!!7602818.java!!!	get(inout dst : char [[]], in offset : int, in length : int) : CharBuffer
        checkBounds(offset, length, dst.length);
        if (length > remaining())
            throw new BufferUnderflowException();
        int end = offset + length;
        for (int i = offset; i < end; i++)
            dst[i] = get();
        return this;
!!!7602946.java!!!	get(inout dst : char [[]]) : CharBuffer
        return get(dst, 0, dst.length);
!!!7603074.java!!!	put(inout src : CharBuffer) : CharBuffer
        if (src == this)
            throw new IllegalArgumentException();
        if (isReadOnly())
            throw new ReadOnlyBufferException();
        int n = src.remaining();
        if (n > remaining())
            throw new BufferOverflowException();
        for (int i = 0; i < n; i++)
            put(src.get());
        return this;
!!!7603202.java!!!	put(inout src : char [[]], in offset : int, in length : int) : CharBuffer
        checkBounds(offset, length, src.length);
        if (length > remaining())
            throw new BufferOverflowException();
        int end = offset + length;
        for (int i = offset; i < end; i++)
            this.put(src[i]);
        return this;
!!!7603330.java!!!	put(inout src : char [[]]) : CharBuffer
        return put(src, 0, src.length);
!!!7603458.java!!!	put(inout src : String, in start : int, in end : int) : CharBuffer
        checkBounds(start, end - start, src.length());
        if (isReadOnly())
            throw new ReadOnlyBufferException();
        if (end - start > remaining())
            throw new BufferOverflowException();
        for (int i = start; i < end; i++)
            this.put(src.charAt(i));
        return this;
!!!7603586.java!!!	put(inout src : String) : CharBuffer
        return put(src, 0, src.length());
!!!7603714.java!!!	hasArray() : boolean
        return (hb != null) && !isReadOnly;
!!!7603842.java!!!	array() : char
        if (hb == null)
            throw new UnsupportedOperationException();
        if (isReadOnly)
            throw new ReadOnlyBufferException();
        return hb;
!!!7603970.java!!!	arrayOffset() : int
        if (hb == null)
            throw new UnsupportedOperationException();
        if (isReadOnly)
            throw new ReadOnlyBufferException();
        return offset;
!!!7604354.java!!!	hashCode() : int
        int h = 1;
        int p = position();
        for (int i = limit() - 1; i >= p; i--)



            h = 31 * h + (int)get(i);

        return h;
!!!7604482.java!!!	equals(inout ob : Object) : boolean
        if (this == ob)
            return true;
        if (!(ob instanceof CharBuffer))
            return false;
        CharBuffer that = (CharBuffer)ob;
        if (this.remaining() != that.remaining())
            return false;
        int p = this.position();
        for (int i = this.limit() - 1, j = that.limit() - 1; i >= p; i--, j--)
            if (!equals(this.get(i), that.get(j)))
                return false;
        return true;
!!!7604610.java!!!	equals(in x : char, in y : char) : boolean



        return x == y;

!!!7604738.java!!!	compareTo(inout that : CharBuffer) : int
        int n = this.position() + Math.min(this.remaining(), that.remaining());
        for (int i = this.position(), j = that.position(); i < n; i++, j++) {
            int cmp = compare(this.get(i), that.get(j));
            if (cmp != 0)
                return cmp;
        }
        return this.remaining() - that.remaining();
!!!7604866.java!!!	compare(in x : char, in y : char) : int






        return Character.compare(x, y);

!!!7604994.java!!!	toString() : String
        return toString(position(), limit());
!!!7605250.java!!!	length() : int
        return remaining();
!!!7605378.java!!!	charAt(in index : int) : char
        return get(position() + checkIndex(index, 1));
!!!7605634.java!!!	append(inout csq : CharSequence) : CharBuffer
        if (csq == null)
            return put("null");
        else
            return put(csq.toString());
!!!7605762.java!!!	append(inout csq : CharSequence, in start : int, in end : int) : CharBuffer
        CharSequence cs = (csq == null ? "null" : csq);
        return put(cs.subSequence(start, end).toString());
!!!7605890.java!!!	append(in c : char) : CharBuffer
        return put(c);
!!!7606146.java!!!	chars() : IntStream
        return StreamSupport.intStream(() -> new CharBufferSpliterator(this),
            Buffer.SPLITERATOR_CHARACTERISTICS, false);
