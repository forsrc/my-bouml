format 222
"event" // jdk1.8::javax::swing::event
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/swing/event/"
  java_package "javax.swing.event"
  classview 147714 "event"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 354946 "EventListenerList"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that holds a list of EventListeners.  A single instance
can be used to hold all listeners (of all types) for the instance
using the list.  It is the responsiblity of the class using the
EventListenerList to provide type-safe API (preferably conforming
to the JavaBeans spec) and methods which dispatch event notification
methods to appropriate Event Listeners on the list.

The main benefits that this class provides are that it is relatively
cheap in the case of no listeners, and it provides serialization for
event-listener lists in a single place, as well as a degree of MT safety
(when used correctly).

Usage example:
   Say one is defining a class that sends out FooEvents, and one wants
to allow users of the class to register FooListeners and receive
notification when FooEvents occur.  The following should be added
to the class definition:
<pre>
EventListenerList listenerList = new EventListenerList();
FooEvent fooEvent = null;

public void addFooListener(FooListener l) {
    listenerList.add(FooListener.class, l);
}

public void removeFooListener(FooListener l) {
    listenerList.remove(FooListener.class, l);
}


// Notify all listeners that have registered interest for
// notification on this event type.  The event instance
// is lazily created using the parameters passed into
// the fire method.

protected void fireFooXXX() {
    // Guaranteed to return a non-null array
    Object[] listeners = listenerList.getListenerList();
    // Process the listeners last to first, notifying
    // those that are interested in this event
    for (int i = listeners.length-2; i&gt;=0; i-=2) {
        if (listeners[i]==FooListener.class) {
            // Lazily create the event:
            if (fooEvent == null)
                fooEvent = new FooEvent(this);
            ((FooListener)listeners[i+1]).fooXXX(fooEvent);
        }
    }
}
</pre>
foo should be changed to the appropriate name, and fireFooXxx to the
appropriate method name.  One fire method should exist for each
notification method in the FooListener interface.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Georges Saab
@author Hans Muller
@author James Gosling
"
      classrelation 4214018 // <realization>
	relation 4214018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4214018 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4214146 // NULL_ARRAY (<unidirectional association>)
	relation 4214146 --->
	  a role_name "NULL_ARRAY" multiplicity "[]" init_value " new Object[0]" class_relation const_relation private
	    comment " A null array to be shared by all empty listener lists
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4214146 // NULL_ARRAY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4214274 // listenerList (<unidirectional association>)
	relation 4214274 --->
	  a role_name "listenerList" multiplicity "[]" init_value " NULL_ARRAY" protected
	    comment " The list of ListenerType - Listener pairs 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4214274 // listenerList (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10897794 "getListenerList"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Passes back the event listener list as an array
of ListenerType-listener pairs.  Note that for
performance reasons, this implementation passes back
the actual data structure in which the listener data
is stored internally!
This method is guaranteed to pass back a non-null
array, so that no null-checking is required in
fire methods.  A zero-length array of Object should
be returned if there are currently no listeners.

WARNING!!! Absolutely NO modification of
the data contained in this array should be made -- if
any such manipulation is necessary, it should be done
on a copy of the array returned rather than the array
itself.
"
      end

      operation 10897922 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "t" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array of all the listeners of the given type.
@return all of the listeners of the specified type.
@exception  ClassCastException if the supplied class
         is not assignable to EventListener

@since 1.3
"
      end

      operation 10898050 "getListenerCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of listeners for this listener list.
"
      end

      operation 10898178 "getListenerCount"
	public explicit_return_type "int"
	nparams 1
	  param inout name "t" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of listeners of the supplied type
for this listener list.
"
      end

      operation 10898306 "getListenerCount"
	private explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "t" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10898434 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 130818 // Class
	  param inout name "l" explicit_type "T"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the listener as a listener of the specified type.
@param t the type of the listener to be added
@param l the listener to be added
"
      end

      operation 10898562 "remove"
	public explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 130818 // Class
	  param inout name "l" explicit_type "T"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the listener as a listener of the specified type.
@param t the type of the listener to be removed
@param l the listener to be removed
"
      end

      operation 10898690 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Serialization support."
      end

      operation 10898818 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10898946 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the EventListenerList.
"
      end
    end

    class 359426 "ChangeListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines an object which listens for ChangeEvents.

@author Jeff Dinkins
"
      classrelation 624770 // <generalisation>
	relation 624770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 624770 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2010498 "stateChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 359554 // ChangeEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the target of the listener has changed its state.

@param e  a ChangeEvent object
"
      end
    end

    class 359554 "ChangeEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ChangeEvent is used to notify interested parties that
state has changed in the event source.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Jeff Dinkins
"
      classrelation 4213890 // <generalisation>
	relation 4213890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4213890 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      operation 10897666 "ChangeEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a ChangeEvent object.

@param source  the Object that is the source of the event
               (typically <code>this</code>)
"
      end
    end

    class 360578 "SwingPropertyChangeSupport"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This subclass of {@code java.beans.PropertyChangeSupport} is almost
identical in functionality. The only difference is if constructed with
{@code SwingPropertyChangeSupport(sourceBean, true)} it ensures
listeners are only ever notified on the <i>Event Dispatch Thread</i>.

@author Igor Kushnirskiy
"
      classrelation 4217730 // <generalisation>
	relation 4217730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4217730 // <generalisation>
	  b parent class_ref 343042 // PropertyChangeSupport
      end

      operation 10905474 "SwingPropertyChangeSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "sourceBean" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SwingPropertyChangeSupport object.

@param sourceBean  The bean to be given as the source for any
       events.
@throws NullPointerException if {@code sourceBean} is
        {@code null}
"
      end

      operation 10905602 "SwingPropertyChangeSupport"
	public explicit_return_type ""
	nparams 2
	  param inout name "sourceBean" type class_ref 129538 // Object
	  param inout name "notifyOnEDT" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SwingPropertyChangeSupport object.

@param sourceBean the bean to be given as the source for any events
@param notifyOnEDT whether to notify listeners on the <i>Event
       Dispatch Thread</i> only

@throws NullPointerException if {@code sourceBean} is
        {@code null}
@since 1.6
"
      end

      operation 10905730 "firePropertyChange"
	public explicit_return_type "void"
	nparams 1
	  param in name "evt" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>
If {@link #isNotifyOnEDT} is {@code true} and called off the
<i>Event Dispatch Thread</i> this implementation uses
{@code SwingUtilities.invokeLater} to send out the notification
on the <i>Event Dispatch Thread</i>. This ensures  listeners
are only ever notified on the <i>Event Dispatch Thread</i>.

@throws NullPointerException if {@code evt} is
        {@code null}
@since 1.6
"
      end

      operation 10905858 "isNotifyOnEDT"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code notifyOnEDT} property.

@return {@code notifyOnEDT} property
@see #SwingPropertyChangeSupport(Object sourceBean, boolean notifyOnEDT)
@since 1.6
"
      end

      attribute 2451586 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7162625831330845068L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version ID
"
      end

      attribute 2451714 "notifyOnEDT"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "whether to notify listeners on EDT

@serial
@since 1.6

"
      end
    end

    class 365442 "ListSelectionListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The listener that's notified when a lists selection value
changes.

@see javax.swing.ListSelectionModel

@author Hans Muller
"
      classrelation 646402 // <generalisation>
	relation 646402 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 646402 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2044290 "valueChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 365954 // ListSelectionEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called whenever the value of the selection changes.
@param e the event that characterizes the change.
"
      end
    end

    class 365954 "ListSelectionEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An event that characterizes a change in selection. The change is limited to a
a single inclusive interval. The selection of at least one index within the
range will have changed. A decent {@code ListSelectionModel} implementation
will keep the range as small as possible. {@code ListSelectionListeners} will
generally query the source of the event for the new selected status of each
potentially changed row.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Hans Muller
@author Ray Ryan
@see ListSelectionModel
"
      classrelation 4216194 // <generalisation>
	relation 4216194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4216194 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 2450818 "firstIndex"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2450946 "lastIndex"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2451074 "isAdjusting"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10902530 "ListSelectionEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 129538 // Object
	  param in name "firstIndex" explicit_type "int"
	  param in name "lastIndex" explicit_type "int"
	  param inout name "isAdjusting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Represents a change in selection status between {@code firstIndex} and
{@code lastIndex}, inclusive. {@code firstIndex} is less than or equal to
{@code lastIndex}. The selection of at least one index within the range will
have changed.

@param firstIndex the first index in the range, &lt;= lastIndex
@param lastIndex the last index in the range, &gt;= firstIndex
@param isAdjusting whether or not this is one in a series of
       multiple events, where changes are still being made
"
      end

      operation 10902658 "getFirstIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first row whose selection may have changed.
{@code getFirstIndex() <= getLastIndex()}

@return the first row whose selection value may have changed,
        where zero is the first row
"
      end

      operation 10902786 "getLastIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the last row whose selection may have changed.
{@code getLastIndex() >= getFirstIndex()}

@return the last row whose selection value may have changed,
        where zero is the first row
"
      end

      operation 10902914 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not this is one in a series of multiple events,
where changes are still being made. See the documentation for
{@link javax.swing.ListSelectionModel#setValueIsAdjusting} for
more details on how this is used.

@return {@code true} if this is one in a series of multiple events,
        where changes are still being made
"
      end

      operation 10903042 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} that displays and identifies this
object's properties.

@return a String representation of this object
"
      end
    end

    class 366722 "ListDataListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ListDataListener

@author Hans Muller
"
      classrelation 649602 // <generalisation>
	relation 649602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 649602 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2052226 "intervalAdded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 366978 // ListDataEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sent after the indices in the index0,index1
interval have been inserted in the data model.
The new interval includes both index0 and index1.

@param e  a <code>ListDataEvent</code> encapsulating the
   event information
"
      end

      operation 2052354 "intervalRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 366978 // ListDataEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sent after the indices in the index0,index1 interval
have been removed from the data model.  The interval
includes both index0 and index1.

@param e  a <code>ListDataEvent</code> encapsulating the
   event information
"
      end

      operation 2052482 "contentsChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 366978 // ListDataEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sent when the contents of the list has changed in a way
that's too complex to characterize with the previous
methods. For example, this is sent when an item has been
replaced. Index0 and index1 bracket the change.

@param e  a <code>ListDataEvent</code> encapsulating the
   event information
"
      end
    end

    class 366978 "ListDataEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines an event that encapsulates changes to a list.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Hans Muller
"
      classrelation 4216066 // <generalisation>
	relation 4216066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4216066 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 2450050 "CONTENTS_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies one or more changes in the lists contents. 
"
      end

      attribute 2450178 "INTERVAL_ADDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies the addition of one or more contiguous items to the list 
"
      end

      attribute 2450306 "INTERVAL_REMOVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies the removal of one or more contiguous items from the list 
"
      end

      attribute 2450434 "type"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2450562 "index0"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2450690 "index1"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10901890 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the event type. The possible values are:
<ul>
<li> {@link #CONTENTS_CHANGED}
<li> {@link #INTERVAL_ADDED}
<li> {@link #INTERVAL_REMOVED}
</ul>

@return an int representing the type value
"
      end

      operation 10902018 "getIndex0"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the lower index of the range. For a single
element, this value is the same as that returned by {@link #getIndex1}.


@return an int representing the lower index value
"
      end

      operation 10902146 "getIndex1"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the upper index of the range. For a single
element, this value is the same as that returned by {@link #getIndex0}.

@return an int representing the upper index value
"
      end

      operation 10902274 "ListDataEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 129538 // Object
	  param in name "type" explicit_type "int"
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a ListDataEvent object. If index0 is &gt;
index1, index0 and index1 will be swapped such that
index0 will always be &lt;= index1.

@param source  the source Object (typically <code>this</code>)
@param type    an int specifying {@link #CONTENTS_CHANGED},
               {@link #INTERVAL_ADDED}, or {@link #INTERVAL_REMOVED}
@param index0  one end of the new interval
@param index1  the other end of the new interval
"
      end

      operation 10902402 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this ListDataEvent. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@since 1.4
@return  a string representation of this ListDataEvent.
"
      end
    end

    class 386178 "MouseInputListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A listener implementing all the methods in both the {@code MouseListener} and
{@code MouseMotionListener} interfaces.

@see MouseInputAdapter
@author Philip Milne
"
      classrelation 690818 // <generalisation>
	relation 690818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 690818 // <generalisation>
	  b parent class_ref 342530 // MouseListener
      end

      classrelation 690946 // <generalisation>
	relation 690946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 690946 // <generalisation>
	  b parent class_ref 342658 // MouseMotionListener
      end
    end

    class 386306 "MenuDragMouseListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines a menu mouse-drag listener.

@author Georges Saab
"
      classrelation 691458 // <generalisation>
	relation 691458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 691458 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2198146 "menuDragMouseEntered"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 387202 // MenuDragMouseEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the dragged mouse has entered a menu component's
display area.

@param e  a MenuDragMouseEvent object
"
      end

      operation 2198274 "menuDragMouseExited"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 387202 // MenuDragMouseEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the dragged mouse has left a menu component's
display area.

@param e  a MenuDragMouseEvent object
"
      end

      operation 2198402 "menuDragMouseDragged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 387202 // MenuDragMouseEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the mouse is being dragged in a menu component's
display area.

@param e  a MenuDragMouseEvent object
"
      end

      operation 2198530 "menuDragMouseReleased"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 387202 // MenuDragMouseEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a dragged mouse is release in a menu component's
display area.

@param e  a MenuDragMouseEvent object
"
      end
    end

    class 386434 "MenuKeyListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "MenuKeyListener

@author Georges Saab
"
      classrelation 821122 // <generalisation>
	relation 821122 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 821122 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2583938 "menuKeyTyped"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 393858 // MenuKeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a key has been typed.
This event occurs when a key press is followed by a key release.
"
      end

      operation 2584066 "menuKeyPressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 393858 // MenuKeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a key has been pressed.
"
      end

      operation 2584194 "menuKeyReleased"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 393858 // MenuKeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a key has been released.
"
      end
    end

    class 387202 "MenuDragMouseEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "MenuDragMouseEvent is used to notify interested parties that
the menu element has received a MouseEvent forwarded to it
under drag conditions.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Georges Saab
"
      classrelation 4216322 // <generalisation>
	relation 4216322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4216322 // <generalisation>
	  b parent class_ref 346626 // MouseEvent
      end

      classrelation 4216450 // path (<unidirectional association>)
	relation 4216450 --->
	  a role_name "path" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4216450 // path (<unidirectional association>)
	  b parent class_ref 386690 // MenuElement
      end

      classrelation 4216578 // manager (<unidirectional association>)
	relation 4216578 --->
	  a role_name "manager" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4216578 // manager (<unidirectional association>)
	  b parent class_ref 387074 // MenuSelectionManager
      end

      operation 10903170 "MenuDragMouseEvent"
	public explicit_return_type ""
	nparams 10
	  param inout name "source" type class_ref 338818 // Component
	  param in name "id" explicit_type "int"
	  param in name "when" explicit_type "long"
	  param in name "modifiers" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "clickCount" explicit_type "int"
	  param inout name "popupTrigger" explicit_type "boolean"
	  param inout name "p" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "m" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a MenuDragMouseEvent object.
<p>Absolute coordinates xAbs and yAbs are set to source's location on screen plus
relative coordinates x and y. xAbs and yAbs are set to zero if the source is not showing.

@param source        the Component that originated the event
                     (typically <code>this</code>)
@param id            an int specifying the type of event, as defined
                     in {@link java.awt.event.MouseEvent}
@param when          a long identifying the time the event occurred
@param modifiers     an int specifying any modifier keys held down,
                     as specified in {@link java.awt.event.InputEvent}
@param x             an int specifying the horizontal position at which
                     the event occurred, in pixels
@param y             an int specifying the vertical position at which
                     the event occurred, in pixels
@param clickCount    an int specifying the number of mouse-clicks
@param popupTrigger  a boolean -- true if the event {should?/did?}
                     trigger a popup
@param p             an array of MenuElement objects specifying a path
                       to a menu item affected by the drag
@param m             a MenuSelectionManager object that handles selections
@see MouseEvent#MouseEvent(java.awt.Component, int, long, int, int, int, int, int, int, boolean, int)
"
      end

      operation 10903298 "MenuDragMouseEvent"
	public explicit_return_type ""
	nparams 12
	  param inout name "source" type class_ref 338818 // Component
	  param in name "id" explicit_type "int"
	  param in name "when" explicit_type "long"
	  param in name "modifiers" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "xAbs" explicit_type "int"
	  param in name "yAbs" explicit_type "int"
	  param in name "clickCount" explicit_type "int"
	  param inout name "popupTrigger" explicit_type "boolean"
	  param inout name "p" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "m" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10}[] ${p10}, ${t11} ${p11}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a MenuDragMouseEvent object.
<p>Even if inconsistent values for relative and absolute coordinates are
passed to the constructor, the MenuDragMouseEvent instance is still
created.
@param source        the Component that originated the event
                     (typically <code>this</code>)
@param id            an int specifying the type of event, as defined
                     in {@link java.awt.event.MouseEvent}
@param when          a long identifying the time the event occurred
@param modifiers     an int specifying any modifier keys held down,
                     as specified in {@link java.awt.event.InputEvent}
@param x             an int specifying the horizontal position at which
                     the event occurred, in pixels
@param y             an int specifying the vertical position at which
                     the event occurred, in pixels
@param xAbs          an int specifying the horizontal absolute position at which
                     the event occurred, in pixels
@param yAbs          an int specifying the vertical absolute position at which
                     the event occurred, in pixels
@param clickCount    an int specifying the number of mouse-clicks
@param popupTrigger  a boolean -- true if the event {should?/did?}
                     trigger a popup
@param p             an array of MenuElement objects specifying a path
                       to a menu item affected by the drag
@param m             a MenuSelectionManager object that handles selections
@see MouseEvent#MouseEvent(java.awt.Component, int, long, int, int, int, int, int, int, boolean, int)
@since 1.6
"
      end

      operation 10903426 "getPath"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path to the selected menu item.

@return an array of MenuElement objects representing the path value
"
      end

      operation 10903554 "getMenuSelectionManager"
	public return_type class_ref 387074 // MenuSelectionManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current menu selection manager.

@return a MenuSelectionManager object
"
      end
    end

    class 391426 "PopupMenuListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A popup menu listener

@author Arnaud Weber
"
      classrelation 707586 // <generalisation>
	relation 707586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 707586 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2233474 "popupMenuWillBecomeVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 392450 // PopupMenuEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is called before the popup menu becomes visible
"
      end

      operation 2233602 "popupMenuWillBecomeInvisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 392450 // PopupMenuEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called before the popup menu becomes invisible
Note that a JPopupMenu can become invisible any time
"
      end

      operation 2233730 "popupMenuCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 392450 // PopupMenuEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when the popup menu is canceled
"
      end
    end

    class 392450 "PopupMenuEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "PopupMenuEvent only contains the source of the event which is the JPoupMenu
sending the event
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Arnaud Weber
"
      classrelation 4217346 // <generalisation>
	relation 4217346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4217346 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      operation 10904578 "PopupMenuEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PopupMenuEvent object.

@param source  the Object that originated the event
               (typically <code>this</code>)
"
      end
    end

    class 393858 "MenuKeyEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "MenuKeyEvent is used to notify interested parties that
the menu element has received a KeyEvent forwarded to it
in a menu tree.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Georges Saab
"
      classrelation 4216834 // <generalisation>
	relation 4216834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4216834 // <generalisation>
	  b parent class_ref 346498 // KeyEvent
      end

      classrelation 4216962 // path (<unidirectional association>)
	relation 4216962 --->
	  a role_name "path" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4216962 // path (<unidirectional association>)
	  b parent class_ref 386690 // MenuElement
      end

      classrelation 4217090 // manager (<unidirectional association>)
	relation 4217090 --->
	  a role_name "manager" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4217090 // manager (<unidirectional association>)
	  b parent class_ref 387074 // MenuSelectionManager
      end

      operation 10903810 "MenuKeyEvent"
	public explicit_return_type ""
	nparams 8
	  param inout name "source" type class_ref 338818 // Component
	  param in name "id" explicit_type "int"
	  param in name "when" explicit_type "long"
	  param in name "modifiers" explicit_type "int"
	  param in name "keyCode" explicit_type "int"
	  param in name "keyChar" explicit_type "char"
	  param inout name "p" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "m" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a MenuKeyEvent object.

@param source     the Component that originated the event
                    (typically <code>this</code>)
@param id         an int specifying the type of event, as defined
                    in {@link java.awt.event.KeyEvent}
@param when       a long identifying the time the event occurred
@param modifiers     an int specifying any modifier keys held down,
                     as specified in {@link java.awt.event.InputEvent}
@param keyCode    an int specifying the specific key that was pressed
@param keyChar    a char specifying the key's character value, if any
                  -- null if the key has no character value
@param p          an array of MenuElement objects specifying a path
                    to a menu item affected by the drag
@param m          a MenuSelectionManager object that handles selections
"
      end

      operation 10903938 "getPath"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path to the menu item referenced by this event.

@return an array of MenuElement objects representing the path value
"
      end

      operation 10904066 "getMenuSelectionManager"
	public return_type class_ref 387074 // MenuSelectionManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current menu selection manager.

@return a MenuSelectionManager object
"
      end
    end

    class 396802 "MouseInputAdapter"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An empty implementation of the {@code MouseInputListener} interface, provided
as a convenience to simplify the task of creating listeners, by extending
and implementing only the methods of interest. This class also provides an
empty implementation of the {@code MouseWheelListener} interface, through
its extension from AWT's {@code MouseAdapter}.

@author Philip Milne
@author Shannon Hickey
"
      classrelation 717698 // <generalisation>
	relation 717698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 717698 // <generalisation>
	  b parent class_ref 365698 // MouseAdapter
      end

      classrelation 717826 // <realization>
	relation 717826 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 717826 // <realization>
	  b parent class_ref 386178 // MouseInputListener
      end
    end

    class 403842 "DocumentListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for an observer to register to receive notifications
of changes to a text document.
<p>
The default implementation of
the Document interface (AbstractDocument) supports asynchronous
mutations.  If this feature is used (i.e. mutations are made
from a thread other than the Swing event thread), the listeners
will be notified via the mutating thread.  <em>This means that
if asynchronous updates are made, the implementation of this
interface must be threadsafe</em>!
<p>
The DocumentEvent notification is based upon the JavaBeans
event model.  There is no guarantee about the order of delivery
to listeners, and all listeners must be notified prior to making
further mutations to the Document.  <em>This means implementations
of the DocumentListener may not mutate the source of the event
(i.e. the associated Document)</em>.

@author  Timothy Prinzing
@see javax.swing.text.Document
@see javax.swing.text.StyledDocument
@see DocumentEvent
"
      classrelation 738946 // <generalisation>
	relation 738946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 738946 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2336258 "insertUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 403970 // DocumentEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gives notification that there was an insert into the document.  The
range given by the DocumentEvent bounds the freshly inserted region.

@param e the document event
"
      end

      operation 2336386 "removeUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 403970 // DocumentEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gives notification that a portion of the document has been
removed.  The range is given in terms of what the view last
saw (that is, before updating sticky positions).

@param e the document event
"
      end

      operation 2336514 "changedUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 403970 // DocumentEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gives notification that an attribute or set of attributes changed.

@param e the document event
"
      end
    end

    class 403970 "DocumentEvent"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for document change notifications.  This provides
detailed information to Document observers about how the
Document changed.  It provides high level information such
as type of change and where it occurred, as well as the more
detailed structural changes (What Elements were inserted and
removed).

@author  Timothy Prinzing
@see javax.swing.text.Document
@see DocumentListener
"
      class 406274 "ElementChange"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 2396546 "getElement"
	  public return_type class_ref 401922 // Element
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the element represented.  This is the element
that was changed.

@return the element
"
	end

	operation 2396674 "getIndex"
	  public explicit_return_type "int"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Fetches the index within the element represented.
This is the location that children were added
and/or removed.

@return the index &gt;= 0
"
	end

	operation 2396802 "getChildrenRemoved"
	  public return_type class_ref 401922 // Element
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the child elements that were removed from the
given parent element.  The element array returned is
sorted in the order that the elements used to lie in
the document, and must be contiguous.

@return the child elements
"
	end

	operation 2396930 "getChildrenAdded"
	  public return_type class_ref 401922 // Element
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the child elements that were added to the given
parent element.  The element array returned is in the
order that the elements lie in the document, and must
be contiguous.

@return the child elements
"
	end
      end

      operation 2395650 "getOffset"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within the document of the start
of the change.

@return the offset &gt;= 0
"
      end

      operation 2395778 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the change.

@return the length &gt;= 0
"
      end

      operation 2395906 "getDocument"
	public return_type class_ref 405378 // Document
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the document that sourced the change event.

@return the document
"
      end

      class 411266 "EventType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 2396290 "EventType"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 756994 // INSERT (<unidirectional association>)
	  relation 756994 --->
	    a role_name "INSERT" init_value " new EventType(\"INSERT\")" class_relation const_relation public
	      comment "
Insert type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 756994 // INSERT (<unidirectional association>)
	    b parent class_ref 411266 // EventType
	end

	classrelation 757122 // REMOVE (<unidirectional association>)
	  relation 757122 --->
	    a role_name "REMOVE" init_value " new EventType(\"REMOVE\")" class_relation const_relation public
	      comment "
Remove type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 757122 // REMOVE (<unidirectional association>)
	    b parent class_ref 411266 // EventType
	end

	classrelation 757250 // CHANGE (<unidirectional association>)
	  relation 757250 --->
	    a role_name "CHANGE" init_value " new EventType(\"CHANGE\")" class_relation const_relation public
	      comment "
Change type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 757250 // CHANGE (<unidirectional association>)
	    b parent class_ref 411266 // EventType
	end

	operation 2396418 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Converts the type to a string.

@return the string
"
	end

	classrelation 757378 // typeString (<unidirectional association>)
	  relation 757378 --->
	    a role_name "typeString" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 757378 // typeString (<unidirectional association>)
	    b parent class_ref 128130 // String
	end
      end

      operation 2396034 "getType"
	public return_type class_ref 411266 // EventType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type of event.

@return the type
"
      end

      operation 2396162 "getChange"
	public return_type class_ref 406274 // ElementChange
	nparams 1
	  param inout name "elem" type class_ref 401922 // Element
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the change information for the given element.
The change information describes what elements were
added and removed and the location.  If there were
no changes, null is returned.
<p>
This method is for observers to discover the structural
changes that were made.  This means that only elements
that existed prior to the mutation (and still exist after
the mutation) need to have ElementChange records.
The changes made available need not be recursive.
<p>
For example, if the an element is removed from it's
parent, this method should report that the parent
changed and provide an ElementChange implementation
that describes the change to the parent.  If the
child element removed had children, these elements
do not need to be reported as removed.
<p>
If an child element is insert into a parent element,
the parent element should report a change.  If the
child element also had elements inserted into it
(grandchildren to the parent) these elements need
not report change.

@param elem the element
@return the change information, or null if the
  element was not modified
"
      end
    end

    class 408322 "UndoableEditListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface implemented by a class interested in hearing about
undoable operations.

@author Ray Ryan
"
      classrelation 4219650 // <generalisation>
	relation 4219650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4219650 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10910722 "undoableEditHappened"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 408706 // UndoableEditEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An undoable edit happened
"
      end
    end

    class 408706 "UndoableEditEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An event indicating that an operation which can be undone has occurred.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Ray Ryan
"
      classrelation 4219394 // <generalisation>
	relation 4219394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4219394 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      classrelation 4219522 // myEdit (<unidirectional association>)
	relation 4219522 --->
	  a role_name "myEdit" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4219522 // myEdit (<unidirectional association>)
	  b parent class_ref 409346 // UndoableEdit
      end

      operation 10910466 "UndoableEditEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "edit" type class_ref 409346 // UndoableEdit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UndoableEditEvent object.

@param source  the Object that originated the event
               (typically <code>this</code>)
@param edit    an UndoableEdit object
"
      end

      operation 10910594 "getEdit"
	public return_type class_ref 409346 // UndoableEdit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the edit value.

@return the UndoableEdit object encapsulating the edit
"
      end
    end

    class 422786 "InternalFrameListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The listener interface for receiving internal frame events.
This class is functionally equivalent to the WindowListener class
in the AWT.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html\">How to Write an Internal Frame Listener</a>
in <em>The Java Tutorial</em> for further documentation.

@see java.awt.event.WindowListener

@author Thomas Ball
"
      classrelation 800898 // <generalisation>
	relation 800898 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 800898 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2497282 "internalFrameOpened"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a internal frame has been opened.
@see javax.swing.JInternalFrame#show
"
      end

      operation 2497410 "internalFrameClosing"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is in the process of being closed.
The close operation can be overridden at this point.
@see javax.swing.JInternalFrame#setDefaultCloseOperation
"
      end

      operation 2497538 "internalFrameClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame has been closed.
@see javax.swing.JInternalFrame#setClosed
"
      end

      operation 2497666 "internalFrameIconified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is iconified.
@see javax.swing.JInternalFrame#setIcon
"
      end

      operation 2497794 "internalFrameDeiconified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is de-iconified.
@see javax.swing.JInternalFrame#setIcon
"
      end

      operation 2497922 "internalFrameActivated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is activated.
@see javax.swing.JInternalFrame#setSelected
"
      end

      operation 2498050 "internalFrameDeactivated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is de-activated.
@see javax.swing.JInternalFrame#setSelected
"
      end
    end

    class 423810 "InternalFrameEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>AWTEvent</code> that adds support for
<code>JInternalFrame</code> objects as the event source.  This class has the
same event types as <code>WindowEvent</code>,
although different IDs are used.
Help on handling internal frame events
is in
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html\" target=\"_top\">How to Write an Internal Frame Listener</a>,
a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see java.awt.event.WindowEvent
@see java.awt.event.WindowListener
@see JInternalFrame
@see InternalFrameListener

@author Thomas Ball
"
      classrelation 4215938 // <generalisation>
	relation 4215938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4215938 // <generalisation>
	  b parent class_ref 339202 // AWTEvent
      end

      attribute 2448898 "INTERNAL_FRAME_FIRST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25549"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The first number in the range of IDs used for internal frame events.

"
      end

      attribute 2449026 "INTERNAL_FRAME_LAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25555"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The last number in the range of IDs used for internal frame events.

"
      end

      attribute 2449154 "INTERNAL_FRAME_OPENED"
	class_attribute const_attribute public explicit_type "int"
	init_value " INTERNAL_FRAME_FIRST"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The \"window opened\" event.  This event is delivered only
the first time the internal frame is made visible.

@see JInternalFrame#show

"
      end

      attribute 2449282 "INTERNAL_FRAME_CLOSING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 + INTERNAL_FRAME_FIRST"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The \"window is closing\" event. This event is delivered when
the user attempts to close the internal frame, such as by
clicking the internal frame's close button,
or when a program attempts to close the internal frame
by invoking the <code>setClosed</code> method.

@see JInternalFrame#setDefaultCloseOperation
@see JInternalFrame#doDefaultCloseAction
@see JInternalFrame#setClosed

"
      end

      attribute 2449410 "INTERNAL_FRAME_CLOSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 + INTERNAL_FRAME_FIRST"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The \"window closed\" event. This event is delivered after
the internal frame has been closed as the result of a call to
the <code>setClosed</code> or
<code>dispose</code> method.

@see JInternalFrame#setClosed
@see JInternalFrame#dispose

"
      end

      attribute 2449538 "INTERNAL_FRAME_ICONIFIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 + INTERNAL_FRAME_FIRST"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The \"window iconified\" event.
This event indicates that the internal frame
was shrunk down to a small icon.

@see JInternalFrame#setIcon

"
      end

      attribute 2449666 "INTERNAL_FRAME_DEICONIFIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 + INTERNAL_FRAME_FIRST"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The \"window deiconified\" event type. This event indicates that the
internal frame has been restored to its normal size.

@see JInternalFrame#setIcon

"
      end

      attribute 2449794 "INTERNAL_FRAME_ACTIVATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5 + INTERNAL_FRAME_FIRST"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The \"window activated\" event type. This event indicates that keystrokes
and mouse clicks are directed towards this internal frame.

@see JInternalFrame#show
@see JInternalFrame#setSelected

"
      end

      attribute 2449922 "INTERNAL_FRAME_DEACTIVATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6 + INTERNAL_FRAME_FIRST"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The \"window deactivated\" event type. This event indicates that keystrokes
and mouse clicks are no longer directed to the internal frame.

@see JInternalFrame#setSelected

"
      end

      operation 10901506 "InternalFrameEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 379522 // JInternalFrame
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InternalFrameEvent</code> object.
@param source the <code>JInternalFrame</code> object that originated the event
@param id     an integer indicating the type of event
"
      end

      operation 10901634 "paramString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a parameter string identifying this event.
This method is useful for event logging and for debugging.

@return a string identifying the event and its attributes
"
      end

      operation 10901762 "getInternalFrame"
	public return_type class_ref 379522 // JInternalFrame
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the originator of the event.

@return the <code>JInternalFrame</code> object that originated the event
@since 1.3
"
      end
    end

    class 425858 "MenuListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines a listener for menu events.

@author Georges Saab
"
      classrelation 4217218 // <generalisation>
	relation 4217218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4217218 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10904194 "menuSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1285634 // MenuEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a menu is selected.

@param e  a MenuEvent object
"
      end

      operation 10904322 "menuDeselected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1285634 // MenuEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the menu is deselected.

@param e  a MenuEvent object
"
      end

      operation 10904450 "menuCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1285634 // MenuEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the menu is canceled.

@param e  a MenuEvent object
"
      end
    end

    class 427650 "CaretListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Listener for changes in the caret position of a text
component.

@author  Timothy Prinzing
"
      classrelation 810370 // <generalisation>
	relation 810370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 810370 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2536706 "caretUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 427778 // CaretEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the caret position is updated.

@param e the caret event
"
      end
    end

    class 427778 "CaretEvent"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "CaretEvent is used to notify interested parties that
the text caret has changed in the event source.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author  Timothy Prinzing
"
      classrelation 4213762 // <generalisation>
	relation 4213762 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4213762 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      operation 10897282 "CaretEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new CaretEvent object.

@param source the object responsible for the event
"
      end

      operation 10897410 "getDot"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the location of the caret.

@return the dot &gt;= 0
"
      end

      operation 10897538 "getMark"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the location of other end of a logical
selection.  If there is no selection, this
will be the same as dot.

@return the mark &gt;= 0
"
      end
    end

    class 449666 "CellEditorListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "CellEditorListener defines the interface for an object that listens
to changes in a CellEditor

@author Alan Chung
"
      classrelation 878082 // <generalisation>
	relation 878082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 878082 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2722050 "editingStopped"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 359554 // ChangeEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This tells the listeners the editor has ended editing "
      end

      operation 2722178 "editingCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 359554 // ChangeEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This tells the listeners the editor has canceled editing "
      end
    end

    class 449794 "TreeSelectionListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The listener that's notified when the selection in a TreeSelectionModel
changes.
For more information and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html\">How to Write a Tree Selection Listener</a>,
a section in <em>The Java Tutorial.</em>

@see javax.swing.tree.TreeSelectionModel
@see javax.swing.JTree

@author Scott Violet
"
      classrelation 877826 // <generalisation>
	relation 877826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 877826 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2721794 "valueChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 451202 // TreeSelectionEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called whenever the value of the selection changes.
@param e the event that characterizes the change.
"
      end
    end

    class 449922 "TreeModelListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the interface for an object that listens
to changes in a TreeModel.
For further information and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/treemodellistener.html\">How to Write a Tree Model Listener</a>,
a section in <em>The Java Tutorial.</em>

@author Rob Davis
@author Ray Ryan
"
      classrelation 877570 // <generalisation>
	relation 877570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 877570 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2720770 "treeNodesChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 450946 // TreeModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Invoked after a node (or a set of siblings) has changed in some
way. The node(s) have not changed locations in the tree or
altered their children arrays, but other attributes have
changed and may affect presentation. Example: the name of a
file has changed, but it is in the same location in the file
system.</p>
<p>To indicate the root has changed, childIndices and children
will be null. </p>

<p>Use <code>e.getPath()</code>
to get the parent of the changed node(s).
<code>e.getChildIndices()</code>
returns the index(es) of the changed node(s).</p>
"
      end

      operation 2720898 "treeNodesInserted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 450946 // TreeModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Invoked after nodes have been inserted into the tree.</p>

<p>Use <code>e.getPath()</code>
to get the parent of the new node(s).
<code>e.getChildIndices()</code>
returns the index(es) of the new node(s)
in ascending order.</p>
"
      end

      operation 2721026 "treeNodesRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 450946 // TreeModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Invoked after nodes have been removed from the tree.  Note that
if a subtree is removed from the tree, this method may only be
invoked once for the root of the removed subtree, not once for
each individual set of siblings removed.</p>

<p>Use <code>e.getPath()</code>
to get the former parent of the deleted node(s).
<code>e.getChildIndices()</code>
returns, in ascending order, the index(es)
the node(s) had before being deleted.</p>
"
      end

      operation 2721154 "treeStructureChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 450946 // TreeModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Invoked after the tree has drastically changed structure from a
given node down.  If the path returned by e.getPath() is of length
one and the first element does not identify the current root node
the first element should become the new root of the tree.

<p>Use <code>e.getPath()</code>
to get the path to the node.
<code>e.getChildIndices()</code>
returns null.</p>
"
      end
    end

    class 450050 "TreeExpansionListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The listener that's notified when a tree expands or collapses
a node.
For further documentation and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html\">How to Write a Tree Expansion Listener</a>,
a section in <em>The Java Tutorial.</em>

@author Scott Violet
"
      classrelation 876802 // <generalisation>
	relation 876802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 876802 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2719746 "treeExpanded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 450562 // TreeExpansionEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called whenever an item in the tree has been expanded.
"
      end

      operation 2719874 "treeCollapsed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 450562 // TreeExpansionEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called whenever an item in the tree has been collapsed.
"
      end
    end

    class 450562 "TreeExpansionEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An event used to identify a single path in a tree.  The source
returned by <b>getSource</b> will be an instance of JTree.
<p>
For further documentation and examples see
the following sections in <em>The Java Tutorial</em>:
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html\">How to Write a Tree Expansion Listener</a> and
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html\">How to Write a Tree-Will-Expand Listener</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Scott Violet
"
      classrelation 4218114 // <generalisation>
	relation 4218114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4218114 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      classrelation 4218242 // path (<unidirectional association>)
	relation 4218242 --->
	  a role_name "path" protected
	    comment "
Path to the value this event represents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4218242 // path (<unidirectional association>)
	  b parent class_ref 448770 // TreePath
      end

      operation 10907522 "TreeExpansionEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "path" type class_ref 448770 // TreePath
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a TreeExpansionEvent object.

@param source  the Object that originated the event
               (typically <code>this</code>)
@param path    a TreePath object identifying the newly expanded
               node
"
      end

      operation 10907650 "getPath"
	public return_type class_ref 448770 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path to the value that has been expanded/collapsed.
"
      end
    end

    class 450946 "TreeModelEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Encapsulates information describing changes to a tree model, and
used to notify tree model listeners of the change.
For more information and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/treemodellistener.html\">How to Write a Tree Model Listener</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Rob Davis
@author Ray Ryan
@author Scott Violet
"
      classrelation 4218370 // <generalisation>
	relation 4218370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4218370 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      classrelation 4218498 // path (<unidirectional association>)
	relation 4218498 --->
	  a role_name "path" protected
	    comment " Path to the parent of the nodes that have changed. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4218498 // path (<unidirectional association>)
	  b parent class_ref 448770 // TreePath
      end

      attribute 2453250 "childIndices"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indices identifying the position of where the children were. 
"
      end

      classrelation 4218626 // children (<unidirectional association>)
	relation 4218626 --->
	  a role_name "children" multiplicity "[]" protected
	    comment " Children that have been removed. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4218626 // children (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10907778 "TreeModelEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "path" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "childIndices" explicit_type "int"
	multiplicity "[]"
	  param inout name "children" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to create an event when nodes have been changed, inserted, or
removed, identifying the path to the parent of the modified items as
an array of Objects. All of the modified objects are siblings which are
direct descendents (not grandchildren) of the specified parent.
The positions at which the inserts, deletes, or changes occurred are
specified by an array of <code>int</code>. The indexes in that array
must be in order, from lowest to highest.
<p>
For changes, the indexes in the model correspond exactly to the indexes
of items currently displayed in the UI. As a result, it is not really
critical if the indexes are not in their exact order. But after multiple
inserts or deletes, the items currently in the UI no longer correspond
to the items in the model. It is therefore critical to specify the
indexes properly for inserts and deletes.
<p>
For inserts, the indexes represent the <i>final</i> state of the tree,
after the inserts have occurred. Since the indexes must be specified in
order, the most natural processing methodology is to do the inserts
starting at the lowest index and working towards the highest. Accumulate
a Vector of <code>Integer</code> objects that specify the
insert-locations as you go, then convert the Vector to an
array of <code>int</code> to create the event. When the postition-index
equals zero, the node is inserted at the beginning of the list. When the
position index equals the size of the list, the node is \"inserted\" at
(appended to) the end of the list.
<p>
For deletes, the indexes represent the <i>initial</i> state of the tree,
before the deletes have occurred. Since the indexes must be specified in
order, the most natural processing methodology is to use a delete-counter.
Start by initializing the counter to zero and start work through the
list from lowest to highest. Every time you do a delete, add the current
value of the delete-counter to the index-position where the delete occurred,
and append the result to a Vector of delete-locations, using
<code>addElement()</code>. Then increment the delete-counter. The index
positions stored in the Vector therefore reflect the effects of all previous
deletes, so they represent each object's position in the initial tree.
(You could also start at the highest index and working back towards the
lowest, accumulating a Vector of delete-locations as you go using the
<code>insertElementAt(Integer, 0)</code>.) However you produce the Vector
of initial-positions, you then need to convert the Vector of <code>Integer</code>
objects to an array of <code>int</code> to create the event.
<p>
<b>Notes:</b><ul style=\"list-style-type:none\">
<li>Like the <code>insertNodeInto</code> method in the
   <code>DefaultTreeModel</code> class, <code>insertElementAt</code>
   appends to the <code>Vector</code> when the index matches the size
   of the vector. So you can use <code>insertElementAt(Integer, 0)</code>
   even when the vector is empty.</li>
<li>To create a node changed event for the root node, specify the parent
    and the child indices as <code>null</code>.</li>
</ul>

@param source the Object responsible for generating the event (typically
              the creator of the event object passes <code>this</code>
              for its value)
@param path   an array of Object identifying the path to the
              parent of the modified item(s), where the first element
              of the array is the Object stored at the root node and
              the last element is the Object stored at the parent node
@param childIndices an array of <code>int</code> that specifies the
              index values of the removed items. The indices must be
              in sorted order, from lowest to highest
@param children an array of Object containing the inserted, removed, or
                changed objects
@see TreePath
"
      end

      operation 10907906 "TreeModelEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "path" type class_ref 448770 // TreePath
	  param inout name "childIndices" explicit_type "int"
	multiplicity "[]"
	  param inout name "children" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to create an event when nodes have been changed, inserted, or
removed, identifying the path to the parent of the modified items as
a TreePath object. For more information on how to specify the indexes
and objects, see
<code>TreeModelEvent(Object,Object[],int[],Object[])</code>.

@param source the Object responsible for generating the event (typically
              the creator of the event object passes <code>this</code>
              for its value)
@param path   a TreePath object that identifies the path to the
              parent of the modified item(s)
@param childIndices an array of <code>int</code> that specifies the
              index values of the modified items
@param children an array of Object containing the inserted, removed, or
                changed objects

@see #TreeModelEvent(Object,Object[],int[],Object[])
"
      end

      operation 10908034 "TreeModelEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "path" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to create an event when the node structure has changed in some way,
identifying the path to the root of a modified subtree as an array of
Objects. A structure change event might involve nodes swapping position,
for example, or it might encapsulate multiple inserts and deletes in the
subtree stemming from the node, where the changes may have taken place at
different levels of the subtree.
<blockquote>
  <b>Note:</b><br>
  JTree collapses all nodes under the specified node, so that only its
  immediate children are visible.
</blockquote>

@param source the Object responsible for generating the event (typically
              the creator of the event object passes <code>this</code>
              for its value)
@param path   an array of Object identifying the path to the root of the
              modified subtree, where the first element of the array is
              the object stored at the root node and the last element
              is the object stored at the changed node
@see TreePath
"
      end

      operation 10908162 "TreeModelEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "path" type class_ref 448770 // TreePath
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to create an event when the node structure has changed in some way,
identifying the path to the root of the modified subtree as a TreePath
object. For more information on this event specification, see
<code>TreeModelEvent(Object,Object[])</code>.

@param source the Object responsible for generating the event (typically
              the creator of the event object passes <code>this</code>
              for its value)
@param path   a TreePath object that identifies the path to the
              change. In the DefaultTreeModel,
              this object contains an array of user-data objects,
              but a subclass of TreePath could use some totally
              different mechanism -- for example, a node ID number

@see #TreeModelEvent(Object,Object[])
"
      end

      operation 10908290 "getTreePath"
	public return_type class_ref 448770 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For all events, except treeStructureChanged,
returns the parent of the changed nodes.
For treeStructureChanged events, returns the ancestor of the
structure that has changed. This and
<code>getChildIndices</code> are used to get a list of the effected
nodes.
<p>
The one exception to this is a treeNodesChanged event that is to
identify the root, in which case this will return the root
and <code>getChildIndices</code> will return null.

@return the TreePath used in identifying the changed nodes.
@see TreePath#getLastPathComponent
"
      end

      operation 10908418 "getPath"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to get the array of objects from the TreePath
instance that this event wraps.

@return an array of Objects, where the first Object is the one
        stored at the root and the last object is the one
        stored at the node identified by the path
"
      end

      operation 10908546 "getChildren"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the objects that are children of the node identified by
<code>getPath</code> at the locations specified by
<code>getChildIndices</code>. If this is a removal event the
returned objects are no longer children of the parent node.

@return an array of Object containing the children specified by
        the event
@see #getPath
@see #getChildIndices
"
      end

      operation 10908674 "getChildIndices"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the values of the child indexes. If this is a removal event
the indexes point to locations in the initial list where items
were removed. If it is an insert, the indices point to locations
in the final list where the items were added. For node changes,
the indices point to the locations of the modified nodes.

@return an array of <code>int</code> containing index locations for
        the children specified by the event
"
      end

      operation 10908802 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this object's
properties.

@return a String representation of this object
"
      end
    end

    class 451202 "TreeSelectionEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An event that characterizes a change in the current
selection.  The change is based on any number of paths.
TreeSelectionListeners will generally query the source of
the event for the new selected status of each potentially
changed row.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see TreeSelectionListener
@see javax.swing.tree.TreeSelectionModel

@author Scott Violet
"
      classrelation 4218754 // <generalisation>
	relation 4218754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4218754 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      classrelation 4218882 // paths (<unidirectional association>)
	relation 4218882 --->
	  a role_name "paths" multiplicity "[]" protected
	    comment " Paths this event represents. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4218882 // paths (<unidirectional association>)
	  b parent class_ref 448770 // TreePath
      end

      attribute 2453378 "areNew"
	protected explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " For each path identifies if that path is in fact new. 
"
      end

      classrelation 4219010 // oldLeadSelectionPath (<unidirectional association>)
	relation 4219010 --->
	  a role_name "oldLeadSelectionPath" protected
	    comment " leadSelectionPath before the paths changed, may be null. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4219010 // oldLeadSelectionPath (<unidirectional association>)
	  b parent class_ref 448770 // TreePath
      end

      classrelation 4219138 // newLeadSelectionPath (<unidirectional association>)
	relation 4219138 --->
	  a role_name "newLeadSelectionPath" protected
	    comment " leadSelectionPath after the paths changed, may be null. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4219138 // newLeadSelectionPath (<unidirectional association>)
	  b parent class_ref 448770 // TreePath
      end

      operation 10908930 "TreeSelectionEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "paths" type class_ref 448770 // TreePath
	multiplicity "[]"
	  param inout name "areNew" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "oldLeadSelectionPath" type class_ref 448770 // TreePath
	  param inout name "newLeadSelectionPath" type class_ref 448770 // TreePath
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Represents a change in the selection of a TreeSelectionModel.
paths identifies the paths that have been either added or
removed from the selection.

@param source source of event
@param paths the paths that have changed in the selection
"
      end

      operation 10909058 "TreeSelectionEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "path" type class_ref 448770 // TreePath
	  param inout name "isNew" explicit_type "boolean"
	  param inout name "oldLeadSelectionPath" type class_ref 448770 // TreePath
	  param inout name "newLeadSelectionPath" type class_ref 448770 // TreePath
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Represents a change in the selection of a TreeSelectionModel.
path identifies the path that have been either added or
removed from the selection.

@param source source of event
@param path the path that has changed in the selection
@param isNew whether or not the path is new to the selection, false
means path was removed from the selection.
"
      end

      operation 10909186 "getPaths"
	public return_type class_ref 448770 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the paths that have been added or removed from the
selection.
"
      end

      operation 10909314 "getPath"
	public return_type class_ref 448770 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first path element.
"
      end

      operation 10909442 "isAddedPath"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the path identified by {@code getPath} was
added to the selection.  A return value of {@code true}
indicates the path identified by {@code getPath} was added to
the selection. A return value of {@code false} indicates {@code
getPath} was selected, but is no longer selected.

@return {@code true} if {@code getPath} was added to the selection,
        {@code false} otherwise
"
      end

      operation 10909570 "isAddedPath"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "path" type class_ref 448770 // TreePath
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified path was added to the selection.
A return value of {@code true} indicates the path identified by
{@code path} was added to the selection. A return value of
{@code false} indicates {@code path} is no longer selected. This method
is only valid for the paths returned from {@code getPaths()}; invoking
with a path not included in {@code getPaths()} throws an
{@code IllegalArgumentException}.

@param path the path to test
@return {@code true} if {@code path} was added to the selection,
        {@code false} otherwise
@throws IllegalArgumentException if {@code path} is not contained
        in {@code getPaths}
@see #getPaths
"
      end

      operation 10909698 "isAddedPath"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the path at {@code getPaths()[index]} was added
to the selection.  A return value of {@code true} indicates the
path was added to the selection. A return value of {@code false}
indicates the path is no longer selected.

@param index the index of the path to test
@return {@code true} if the path was added to the selection,
        {@code false} otherwise
@throws IllegalArgumentException if index is outside the range of
        {@code getPaths}
@see #getPaths

@since 1.3
"
      end

      operation 10909826 "getOldLeadSelectionPath"
	public return_type class_ref 448770 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path that was previously the lead path.
"
      end

      operation 10909954 "getNewLeadSelectionPath"
	public return_type class_ref 448770 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current lead path.
"
      end

      operation 10910082 "cloneWithSource"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "newSource" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the receiver, but with the source being newSource.
"
      end
    end

    class 1263362 "AncestorListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "AncestorListener

Interface to support notification when changes occur to a JComponent or one
of its ancestors.  These include movement and when the component becomes
visible or invisible, either by the setVisible() method or by being added
or removed from the component hierarchy.

@author Dave Moore
"
      classrelation 4213634 // <generalisation>
	relation 4213634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4213634 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10896898 "ancestorAdded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1305474 // AncestorEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the source or one of its ancestors is made visible
either by setVisible(true) being called or by its being
added to the component hierarchy.  The method is only called
if the source has actually become visible.  For this to be true
all its parents must be visible and it must be in a hierarchy
rooted at a Window
"
      end

      operation 10897026 "ancestorRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1305474 // AncestorEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the source or one of its ancestors is made invisible
either by setVisible(false) being called or by its being
remove from the component hierarchy.  The method is only called
if the source has actually become invisible.  For this to be true
at least one of its parents must by invisible or it is not in
a hierarchy rooted at a Window
"
      end

      operation 10897154 "ancestorMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1305474 // AncestorEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when either the source or one of its ancestors is moved.
"
      end
    end

    class 1269506 "RowSorterListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>RowSorterListener</code>s are notified of changes to a
<code>RowSorter</code>.

@see javax.swing.RowSorter
@since 1.6
"
      classrelation 4164482 // <generalisation>
	relation 4164482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4164482 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10761090 "sorterChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1269634 // RowSorterEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification that the <code>RowSorter</code> has changed.  The event
describes the scope of the change.

@param e the event, will not be null
"
      end
    end

    class 1269634 "RowSorterEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>RowSorterEvent</code> provides notification of changes to
a <code>RowSorter</code>.  Two types of notification are possible:
<ul>
<li><code>Type.SORT_ORDER_CHANGED</code>: indicates the sort order has
    changed.  This is typically followed by a notification of:
<li><code>Type.SORTED</code>: indicates the contents of the model have
    been transformed in some way.  For example, the contents may have
    been sorted or filtered.
</ul>

@see javax.swing.RowSorter
@since 1.6
"
      classrelation 4217474 // <generalisation>
	relation 4217474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4217474 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      class 1305858 "Type"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2451330 "SORT_ORDER_CHANGED"
	  public type class_ref 1305858 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the sort order has changed.

"
	end

	attribute 2451458 "SORTED"
	  public type class_ref 1305858 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the contents have been newly sorted or
transformed in some way.
"
	end
      end

      classrelation 4217602 // type (<unidirectional association>)
	relation 4217602 --->
	  a role_name "type" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4217602 // type (<unidirectional association>)
	  b parent class_ref 1305858 // Type
      end

      attribute 2451202 "oldViewToModel"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10904706 "RowSorterEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 1269378 // RowSorter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>RowSorterEvent</code> of type
<code>SORT_ORDER_CHANGED</code>.

@param source the source of the change
@throws IllegalArgumentException if <code>source</code> is
        <code>null</code>
"
      end

      operation 10904834 "RowSorterEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "source" type class_ref 1269378 // RowSorter
	  param inout name "type" type class_ref 1305858 // Type
	  param inout name "previousRowIndexToModel" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>RowSorterEvent</code>.

@param source the source of the change
@param type the type of event
@param previousRowIndexToModel the mapping from model indices to
       view indices prior to the sort, may be <code>null</code>
@throws IllegalArgumentException if source or <code>type</code> is
        <code>null</code>
"
      end

      operation 10904962 "getSource"
	public return_type class_ref 1269378 // RowSorter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the source of the event as a <code>RowSorter</code>.

@return the source of the event as a <code>RowSorter</code>
"
      end

      operation 10905090 "getType"
	public return_type class_ref 1305858 // Type
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of event.

@return the type of event
"
      end

      operation 10905218 "convertPreviousRowIndexToModel"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location of <code>index</code> in terms of the
model prior to the sort.  This method is only useful for events
of type <code>SORTED</code>.  This method will return -1 if the
index is not valid, or the locations prior to the sort have not
been provided.

@param index the index in terms of the view
@return the index in terms of the model prior to the sort, or -1 if
        the location is not valid or the mapping was not provided.
"
      end

      operation 10905346 "getPreviousRowCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows before the sort.  This method is only
useful for events of type <code>SORTED</code> and if the
last locations have not been provided will return 0.

@return the number of rows in terms of the view prior to the sort
"
      end
    end

    class 1277314 "HyperlinkListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "HyperlinkListener

@author  Timothy Prinzing
"
      classrelation 4215682 // <generalisation>
	relation 4215682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4215682 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10900482 "hyperlinkUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1277442 // HyperlinkEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a hypertext link is updated.

@param e the event responsible for the update
"
      end
    end

    class 1277442 "HyperlinkEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "HyperlinkEvent is used to notify interested parties that
something has happened with respect to a hypertext link.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author  Timothy Prinzing
"
      classrelation 4214402 // <generalisation>
	relation 4214402 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4214402 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      operation 10899074 "HyperlinkEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "type" type class_ref 1305602 // EventType
	  param inout name "u" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new object representing a hypertext link event.
The other constructor is preferred, as it provides more
information if a URL could not be formed.  This constructor
is primarily for backward compatibility.

@param source the object responsible for the event
@param type the event type
@param u the affected URL
"
      end

      class 1305602 "EventType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 10900226 "EventType"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 4215170 // ENTERED (<unidirectional association>)
	  relation 4215170 --->
	    a role_name "ENTERED" init_value " new EventType(\"ENTERED\")" class_relation const_relation public
	      comment "
Entered type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4215170 // ENTERED (<unidirectional association>)
	    b parent class_ref 1305602 // EventType
	end

	classrelation 4215298 // EXITED (<unidirectional association>)
	  relation 4215298 --->
	    a role_name "EXITED" init_value " new EventType(\"EXITED\")" class_relation const_relation public
	      comment "
Exited type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4215298 // EXITED (<unidirectional association>)
	    b parent class_ref 1305602 // EventType
	end

	classrelation 4215426 // ACTIVATED (<unidirectional association>)
	  relation 4215426 --->
	    a role_name "ACTIVATED" init_value " new EventType(\"ACTIVATED\")" class_relation const_relation public
	      comment "
Activated type.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4215426 // ACTIVATED (<unidirectional association>)
	    b parent class_ref 1305602 // EventType
	end

	operation 10900354 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Converts the type to a string.

@return the string
"
	end

	classrelation 4215554 // typeString (<unidirectional association>)
	  relation 4215554 --->
	    a role_name "typeString" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4215554 // typeString (<unidirectional association>)
	    b parent class_ref 128130 // String
	end
      end

      operation 10899202 "HyperlinkEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "type" type class_ref 1305602 // EventType
	  param inout name "u" type class_ref 243458 // URL
	  param inout name "desc" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new object representing a hypertext link event.

@param source the object responsible for the event
@param type the event type
@param u the affected URL.  This may be null if a valid URL
  could not be created.
@param desc the description of the link.  This may be useful
  when attempting to form a URL resulted in a MalformedURLException.
  The description provides the text used when attempting to form the
  URL.
"
      end

      operation 10899330 "HyperlinkEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "type" type class_ref 1305602 // EventType
	  param inout name "u" type class_ref 243458 // URL
	  param inout name "desc" type class_ref 128130 // String
	  param inout name "sourceElement" type class_ref 401922 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new object representing a hypertext link event.

@param source the object responsible for the event
@param type the event type
@param u the affected URL.  This may be null if a valid URL
  could not be created.
@param desc the description of the link.  This may be useful
  when attempting to form a URL resulted in a MalformedURLException.
  The description provides the text used when attempting to form the
  URL.
@param sourceElement Element in the Document representing the
  anchor
@since 1.4
"
      end

      operation 10899458 "HyperlinkEvent"
	public explicit_return_type ""
	nparams 6
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "type" type class_ref 1305602 // EventType
	  param inout name "u" type class_ref 243458 // URL
	  param inout name "desc" type class_ref 128130 // String
	  param inout name "sourceElement" type class_ref 401922 // Element
	  param inout name "inputEvent" type class_ref 352386 // InputEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new object representing a hypertext link event.

@param source the object responsible for the event
@param type the event type
@param u the affected URL.  This may be null if a valid URL
  could not be created.
@param desc the description of the link.  This may be useful
  when attempting to form a URL resulted in a MalformedURLException.
  The description provides the text used when attempting to form the
  URL.
@param sourceElement Element in the Document representing the
  anchor
@param inputEvent  InputEvent that triggered the hyperlink event
@since 1.7
"
      end

      operation 10899586 "getEventType"
	public return_type class_ref 1305602 // EventType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type of event.

@return the type
"
      end

      operation 10899714 "getDescription"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the description of the link as a string.
This may be useful if a URL can't be formed
from the description, in which case the associated
URL would be null.
"
      end

      operation 10899842 "getURL"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the URL that the link refers to.

@return the URL
"
      end

      operation 10899970 "getSourceElement"
	public return_type class_ref 401922 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Element</code> that corresponds to the source of the
event. This will typically be an <code>Element</code> representing
an anchor. If a constructor that is used that does not specify a source
<code>Element</code>, or null was specified as the source
<code>Element</code>, this will return null.

@return Element indicating source of event, or null
@since 1.4
"
      end

      operation 10900098 "getInputEvent"
	public return_type class_ref 352386 // InputEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code InputEvent} that triggered the hyperlink event.
This will typically be a {@code MouseEvent}.  If a constructor is used
that does not specify an {@code InputEvent}, or @{code null}
was specified as the {@code InputEvent}, this returns {@code null}.

@return  InputEvent that triggered the hyperlink event, or null
@since 1.7
"
      end

      classrelation 4214530 // type (<unidirectional association>)
	relation 4214530 --->
	  a role_name "type" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4214530 // type (<unidirectional association>)
	  b parent class_ref 1305602 // EventType
      end

      classrelation 4214658 // u (<unidirectional association>)
	relation 4214658 --->
	  a role_name "u" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4214658 // u (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 4214786 // desc (<unidirectional association>)
	relation 4214786 --->
	  a role_name "desc" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4214786 // desc (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4214914 // sourceElement (<unidirectional association>)
	relation 4214914 --->
	  a role_name "sourceElement" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4214914 // sourceElement (<unidirectional association>)
	  b parent class_ref 401922 // Element
      end

      classrelation 4215042 // inputEvent (<unidirectional association>)
	relation 4215042 --->
	  a role_name "inputEvent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4215042 // inputEvent (<unidirectional association>)
	  b parent class_ref 352386 // InputEvent
      end
    end

    class 1285634 "MenuEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "MenuEvent is used to notify interested parties that
the menu which is the event source has been posted,
selected, or canceled.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Georges Saab
@author David Karlton
"
      classrelation 4216706 // <generalisation>
	relation 4216706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4216706 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      operation 10903682 "MenuEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a MenuEvent object.

@param source  the Object that originated the event
               (typically <code>this</code>)
"
      end
    end

    class 1292034 "TableModelListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "TableModelListener defines the interface for an object that listens
to changes in a TableModel.

@author Alan Chung
@see javax.swing.table.TableModel
"
      classrelation 4163458 // <generalisation>
	relation 4163458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4163458 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10760322 "tableChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292162 // TableModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This fine grain notification tells listeners the exact range
of cells, rows, or columns that changed.
"
      end
    end

    class 1292162 "TableModelEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "TableModelEvent is used to notify listeners that a table model
has changed. The model event describes changes to a TableModel
and all references to rows and columns are in the co-ordinate
system of the model.
Depending on the parameters used in the constructors, the TableModelevent
can be used to specify the following types of changes:

<pre>
TableModelEvent(source);              //  The data, ie. all rows changed
TableModelEvent(source, HEADER_ROW);  //  Structure change, reallocate TableColumns
TableModelEvent(source, 1);           //  Row 1 changed
TableModelEvent(source, 3, 6);        //  Rows 3 to 6 inclusive changed
TableModelEvent(source, 2, 2, 6);     //  Cell at (2, 6) changed
TableModelEvent(source, 3, 6, ALL_COLUMNS, INSERT); // Rows (3, 6) were inserted
TableModelEvent(source, 3, 6, ALL_COLUMNS, DELETE); // Rows (3, 6) were deleted
</pre>

It is possible to use other combinations of the parameters, not all of them
are meaningful. By subclassing, you can add other information, for example:
whether the event WILL happen or DID happen. This makes the specification
of rows in DELETE events more useful but has not been included in
the swing package as the JTable only needs post-event notification.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Alan Chung
@author Philip Milne
@see TableModel
"
      classrelation 4217986 // <generalisation>
	relation 4217986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4217986 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 2452098 "INSERT"
	class_attribute const_attribute public explicit_type "int"
	init_value "  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies the addition of new rows or columns. 
"
      end

      attribute 2452226 "UPDATE"
	class_attribute const_attribute public explicit_type "int"
	init_value "  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies a change to existing data. 
"
      end

      attribute 2452354 "DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies the removal of rows or columns. 
"
      end

      attribute 2452482 "HEADER_ROW"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies the header row. 
"
      end

      attribute 2452610 "ALL_COLUMNS"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Specifies all columns in a row or rows. 
"
      end

      attribute 2452738 "type"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "  Instance Variables

"
      end

      attribute 2452866 "firstRow"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2452994 "lastRow"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2453122 "column"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10906370 "TableModelEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 1292674 // TableModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


 All row data in the table has changed, listeners should discard any state
 that was based on the rows and requery the <code>TableModel</code>
 to get the new row count and all the appropriate values.
 The <code>JTable</code> will repaint the entire visible region on
 receiving this event, querying the model for the cell values that are visible.
 The structure of the table ie, the column names, types and order
 have not changed.
"
      end

      operation 10906498 "TableModelEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 1292674 // TableModel
	  param in name "row" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This row of data has been updated.
 To denote the arrival of a completely new table with a different structure
 use <code>HEADER_ROW</code> as the value for the <code>row</code>.
 When the <code>JTable</code> receives this event and its
 <code>autoCreateColumnsFromModel</code>
 flag is set it discards any TableColumns that it had and reallocates
 default ones in the order they appear in the model. This is the
 same as calling <code>setModel(TableModel)</code> on the <code>JTable</code>.
"
      end

      operation 10906626 "TableModelEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "source" type class_ref 1292674 // TableModel
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The data in rows [<I>firstRow</I>, <I>lastRow</I>] have been updated.
"
      end

      operation 10906754 "TableModelEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 1292674 // TableModel
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The cells in column <I>column</I> in the range
 [<I>firstRow</I>, <I>lastRow</I>] have been updated.
"
      end

      operation 10906882 "TableModelEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "source" type class_ref 1292674 // TableModel
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	  param in name "column" explicit_type "int"
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The cells from (firstRow, column) to (lastRow, column) have been changed.
 The <I>column</I> refers to the column index of the cell in the model's
 co-ordinate system. When <I>column</I> is ALL_COLUMNS, all cells in the
 specified range of rows are considered changed.
 <p>
 The <I>type</I> should be one of: INSERT, UPDATE and DELETE.
"
      end

      operation 10907010 "getFirstRow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Querying Methods

 Returns the first row that changed.  HEADER_ROW means the meta data,
ie. names, types and order of the columns.
"
      end

      operation 10907138 "getLastRow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the last row that changed. "
      end

      operation 10907266 "getColumn"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the column for the event.  If the return
 value is ALL_COLUMNS; it means every column in the specified
 rows changed.
"
      end

      operation 10907394 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the type of event - one of: INSERT, UPDATE and DELETE.
"
      end
    end

    class 1292290 "TableColumnModelListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "TableColumnModelListener defines the interface for an object that listens
to changes in a TableColumnModel.

@author Alan Chung
@see TableColumnModelEvent
"
      classrelation 4163842 // <generalisation>
	relation 4163842 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4163842 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10760450 "columnAdded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tells listeners that a column was added to the model. "
      end

      operation 10760578 "columnRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tells listeners that a column was removed from the model. "
      end

      operation 10760706 "columnMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tells listeners that a column was repositioned. "
      end

      operation 10760834 "columnMarginChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 359554 // ChangeEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tells listeners that a column was moved due to a margin change. "
      end

      operation 10760962 "columnSelectionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 365954 // ListSelectionEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells listeners that the selection model of the
TableColumnModel changed.
"
      end
    end

    class 1292418 "TableColumnModelEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<B>TableColumnModelEvent</B> is used to notify listeners that a table
column model has changed, such as a column was added, removed, or
moved.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Alan Chung
@see TableColumnModelListener
"
      classrelation 4217858 // <generalisation>
	relation 4217858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4217858 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 2451842 "fromIndex"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "  Instance Variables

 The index of the column from where it was moved or removed 
"
      end

      attribute 2451970 "toIndex"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The index of the column to where it was moved or added 
"
      end

      operation 10905986 "TableColumnModelEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "source" type class_ref 1292802 // TableColumnModel
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Constructs a {@code TableColumnModelEvent} object.

@param source  the {@code TableColumnModel} that originated the event
@param from    an int specifying the index from where the column was
               moved or removed
@param to      an int specifying the index to where the column was
               moved or added
@see #getFromIndex
@see #getToIndex
"
      end

      operation 10906114 "getFromIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Querying Methods

 Returns the fromIndex.  Valid for removed or moved events "
      end

      operation 10906242 "getToIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the toIndex.  Valid for add and moved events "
      end
    end

    class 1305474 "AncestorEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An event reported to a child component that originated from an
ancestor in the component hierarchy.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Dave Moore
"
      classrelation 4213250 // <generalisation>
	relation 4213250 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4213250 // <generalisation>
	  b parent class_ref 339202 // AWTEvent
      end

      attribute 2448514 "ANCESTOR_ADDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An ancestor-component was added to the hierarchy of
visible objects (made visible), and is currently being displayed.

"
      end

      attribute 2448642 "ANCESTOR_REMOVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An ancestor-component was removed from the hierarchy
of visible objects (hidden) and is no longer being displayed.

"
      end

      attribute 2448770 "ANCESTOR_MOVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " An ancestor-component changed its position on the screen. 
"
      end

      classrelation 4213378 // ancestor (<unidirectional association>)
	relation 4213378 --->
	  a role_name "ancestor" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4213378 // ancestor (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 4213506 // ancestorParent (<unidirectional association>)
	relation 4213506 --->
	  a role_name "ancestorParent" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4213506 // ancestorParent (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      operation 10896386 "AncestorEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 338434 // JComponent
	  param in name "id" explicit_type "int"
	  param inout name "ancestor" type class_ref 338690 // Container
	  param inout name "ancestorParent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AncestorEvent object to identify a change
in an ancestor-component's display-status.

@param source          the JComponent that originated the event
                       (typically <code>this</code>)
@param id              an int specifying {@link #ANCESTOR_ADDED},
                       {@link #ANCESTOR_REMOVED} or {@link #ANCESTOR_MOVED}
@param ancestor        a Container object specifying the ancestor-component
                       whose display-status changed
@param ancestorParent  a Container object specifying the ancestor's parent
"
      end

      operation 10896514 "getAncestor"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ancestor that the event actually occurred on.
"
      end

      operation 10896642 "getAncestorParent"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent of the ancestor the event actually occurred on.
This is most interesting in an ANCESTOR_REMOVED event, as
the ancestor may no longer be in the component hierarchy.
"
      end

      operation 10896770 "getComponent"
	public return_type class_ref 338434 // JComponent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component that the listener was added to.
"
      end
    end

    class 1305730 "InternalFrameAdapter"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract adapter class for receiving internal frame events.
The methods in this class are empty. This class exists as
convenience for creating listener objects, and is functionally
equivalent to the WindowAdapter class in the AWT.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html\">How to Write an Internal Frame Listener</a>
in <em>The Java Tutorial</em>

@see InternalFrameEvent
@see InternalFrameListener
@see java.awt.event.WindowListener

@author Thomas Ball
"
      classrelation 4215810 // <realization>
	relation 4215810 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4215810 // <realization>
	  b parent class_ref 422786 // InternalFrameListener
      end

      operation 10900610 "internalFrameOpened"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame has been opened.
"
      end

      operation 10900738 "internalFrameClosing"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is in the process of being closed.
The close operation can be overridden at this point.
"
      end

      operation 10900866 "internalFrameClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame has been closed.
"
      end

      operation 10900994 "internalFrameIconified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is iconified.
"
      end

      operation 10901122 "internalFrameDeiconified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is de-iconified.
"
      end

      operation 10901250 "internalFrameActivated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is activated.
"
      end

      operation 10901378 "internalFrameDeactivated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423810 // InternalFrameEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when an internal frame is de-activated.
"
      end
    end

    class 1305986 "TreeWillExpandListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The listener that's notified when a tree expands or collapses
a node.
For further information and examples see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html\">How to Write a Tree-Will-Expand Listener</a>,
a section in <em>The Java Tutorial.</em>

@author Scott Violet
"
      classrelation 4219266 // <generalisation>
	relation 4219266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4219266 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 10910210 "treeWillExpand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 450562 // TreeExpansionEvent
	nexceptions 1
	  exception class_ref 1306114 // ExpandVetoException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked whenever a node in the tree is about to be expanded.
"
      end

      operation 10910338 "treeWillCollapse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 450562 // TreeExpansionEvent
	nexceptions 1
	  exception class_ref 1306114 // ExpandVetoException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked whenever a node in the tree is about to be collapsed.
"
      end
    end
  end

  deploymentview 142594 "event"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 274178 "ChangeListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 359426 // ChangeListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 276226 "ListSelectionListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 365442 // ListSelectionListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 276866 "ListDataListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 366722 // ListDataListener
      end
      comment "Copyright (c) 1997, 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 284290 "MouseInputListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
${definition}"
      associated_elems
	class_ref 386178 // MouseInputListener
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 284418 "MenuDragMouseListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 386306 // MenuDragMouseListener
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 286338 "PopupMenuListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 391426 // PopupMenuListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 287618 "MouseInputAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.MouseAdapter;
${definition}"
      associated_elems
	class_ref 396802 // MouseInputAdapter
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 289666 "DocumentListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 403842 // DocumentListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 292482 "DocumentEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.undo.*;
import javax.swing.text.*;
${definition}"
      associated_elems
	class_ref 403970 // DocumentEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 295298 "InternalFrameListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 422786 // InternalFrameListener
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 297218 "CaretListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 427650 // CaretListener
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 300034 "MenuKeyListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 386434 // MenuKeyListener
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 305410 "TreeExpansionListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 450050 // TreeExpansionListener
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 305538 "TreeModelListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 449922 // TreeModelListener
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 305666 "TreeSelectionListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 449794 // TreeSelectionListener
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 305794 "CellEditorListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.ChangeEvent;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 449666 // CellEditorListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 933762 "TableModelListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 1292034 // TableModelListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 933890 "TableColumnModelListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ChangeEvent;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 1292290 // TableColumnModelListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934018 "RowSorterListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1269506 // RowSorterListener
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 941698 "AncestorEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.awt.*;
import javax.swing.*;
${definition}"
      associated_elems
	class_ref 1305474 // AncestorEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 941826 "AncestorListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.awt.*;
import java.util.*;
import javax.swing.*;
${definition}"
      associated_elems
	class_ref 1263362 // AncestorListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 941954 "CaretEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
${definition}"
      associated_elems
	class_ref 427778 // CaretEvent
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942082 "ChangeEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
${definition}"
      associated_elems
	class_ref 359554 // ChangeEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942210 "EventListenerList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
import java.lang.reflect.Array;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 354946 // EventListenerList
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942338 "HyperlinkEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.InputEvent;
import java.util.EventObject;
import java.net.URL;
import javax.swing.text.Element;
${definition}"
      associated_elems
	class_ref 1277442 // HyperlinkEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942466 "HyperlinkListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 1277314 // HyperlinkListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942594 "InternalFrameAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1305730 // InternalFrameAdapter
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942722 "InternalFrameEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.AWTEvent;
import javax.swing.JInternalFrame;
${definition}"
      associated_elems
	class_ref 423810 // InternalFrameEvent
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942850 "ListDataEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
${definition}"
      associated_elems
	class_ref 366978 // ListDataEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 942978 "ListSelectionEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import javax.swing.*;
${definition}"
      associated_elems
	class_ref 365954 // ListSelectionEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 943106 "MenuDragMouseEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import java.util.EventObject;
import java.awt.event.MouseEvent;
import java.awt.Component;
${definition}"
      associated_elems
	class_ref 387202 // MenuDragMouseEvent
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 943234 "MenuEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
${definition}"
      associated_elems
	class_ref 1285634 // MenuEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 943362 "MenuKeyEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import java.util.EventObject;
import java.awt.event.KeyEvent;
import java.awt.Component;
${definition}"
      associated_elems
	class_ref 393858 // MenuKeyEvent
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 943490 "MenuListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 425858 // MenuListener
      end
      comment "Copyright (c) 1997, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 943618 "PopupMenuEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
${definition}"
      associated_elems
	class_ref 392450 // PopupMenuEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 943746 "RowSorterEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.RowSorter;
${definition}"
      associated_elems
	class_ref 1269634 // RowSorterEvent
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 943874 "SwingPropertyChangeSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeSupport;
import java.beans.PropertyChangeEvent;
import javax.swing.SwingUtilities;
${definition}"
      associated_elems
	class_ref 360578 // SwingPropertyChangeSupport
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944002 "TableColumnModelEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import javax.swing.table.*;
${definition}"
      associated_elems
	class_ref 1292418 // TableColumnModelEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944130 "TableModelEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import javax.swing.table.*;
${definition}"
      associated_elems
	class_ref 1292162 // TableModelEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944258 "TreeExpansionEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import javax.swing.tree.TreePath;
${definition}"
      associated_elems
	class_ref 450562 // TreeExpansionEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944386 "TreeModelEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import javax.swing.tree.TreePath;
${definition}"
      associated_elems
	class_ref 450946 // TreeModelEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944514 "TreeSelectionEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import javax.swing.tree.TreePath;
${definition}"
      associated_elems
	class_ref 451202 // TreeSelectionEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944642 "TreeWillExpandListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
import javax.swing.tree.ExpandVetoException;
${definition}"
      associated_elems
	class_ref 1305986 // TreeWillExpandListener
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944770 "UndoableEditEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.undo.*;
${definition}"
      associated_elems
	class_ref 408706 // UndoableEditEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 944898 "UndoableEditListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.undo.*;
${definition}"
      associated_elems
	class_ref 408322 // UndoableEditListener
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
