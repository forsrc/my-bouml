class LengthUnit
!!!11761410.java!!!	LengthUnit(inout value : String, in defaultType : short, in defaultValue : float)
            parse(value, defaultType, defaultValue);
!!!11761538.java!!!	parse(inout value : String, in defaultType : short, in defaultValue : float) : void
            type = defaultType;
            this.value = defaultValue;

            int length = value.length();
            if (length > 0 && value.charAt(length - 1) == '%') {
                try {
                    this.value = Float.valueOf(value.substring(0, length - 1)).
                                               floatValue() / 100.0f;
                    type = 1;
                }
                catch (NumberFormatException nfe) { }
            }
            if (length >= 2) {
                units = value.substring(length - 2, length);
                Float scale = lengthMapping.get(units);
                if (scale != null) {
                    try {
                        this.value = Float.valueOf(value.substring(0,
                               length - 2)).floatValue();
                        type = 0;
                    }
                    catch (NumberFormatException nfe) { }
                }
                else if (units.equals("em") ||
                         units.equals("ex")) {
                    try {
                        this.value = Float.valueOf(value.substring(0,
                                      length - 2)).floatValue();
                        type = 3;
                    }
                    catch (NumberFormatException nfe) { }
                }
                else if (value.equals("larger")) {
                    this.value = 2f;
                    type = 2;
                }
                else if (value.equals("smaller")) {
                    this.value = -2;
                    type = 2;
                }
                else {
                    // treat like points.
                    try {
                        this.value = Float.valueOf(value).floatValue();
                        type = 0;
                    } catch (NumberFormatException nfe) {}
                }
            }
            else if (length > 0) {
                // treat like points.
                try {
                    this.value = Float.valueOf(value).floatValue();
                    type = 0;
                } catch (NumberFormatException nfe) {}
            }
!!!11761666.java!!!	getValue(inout w3cLengthUnits : boolean) : float
            Hashtable<String, Float> mapping = (w3cLengthUnits) ? w3cLengthMapping : lengthMapping;
            float scale = 1;
            if (units != null) {
                Float scaleFloat = mapping.get(units);
                if (scaleFloat != null) {
                    scale = scaleFloat.floatValue();
                }
            }
            return this.value * scale;

!!!11761794.java!!!	getValue(in value : float, inout units : String, inout w3cLengthUnits : Boolean) : float
            Hashtable<String, Float> mapping = (w3cLengthUnits) ? w3cLengthMapping : lengthMapping;
            float scale = 1;
            if (units != null) {
                Float scaleFloat = mapping.get(units);
                if (scaleFloat != null) {
                    scale = scaleFloat.floatValue();
                }
            }
            return value * scale;
!!!11761922.java!!!	toString() : String
            return type + " " + value;
