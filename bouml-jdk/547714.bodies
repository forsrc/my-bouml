class StackMapType
!!!3397378.java!!!	StackMapType(inout file : DataInputStream, inout constant_pool : ConstantPool)
    this(file.readByte(), -1, constant_pool);

    if(hasIndex())
      setIndex(file.readShort());

    setConstantPool(constant_pool);
!!!3397506.java!!!	StackMapType(in type : byte, in index : int, inout constant_pool : ConstantPool)
    setType(type);
    setIndex(index);
    setConstantPool(constant_pool);
!!!3397634.java!!!	setType(in t : byte) : void
    if((t < Constants.ITEM_Bogus) || (t > Constants.ITEM_NewObject))
      throw new RuntimeException("Illegal type for StackMapType: " + t);
    type = t;
!!!3397762.java!!!	getType() : byte
 return type;
!!!3397890.java!!!	setIndex(in t : int) : void
 index = t;
!!!3398018.java!!!	getIndex() : int
 return index;
!!!3398146.java!!!	dump(inout file : DataOutputStream) : void
    file.writeByte(type);
    if(hasIndex())
      file.writeShort(getIndex());
!!!3398274.java!!!	hasIndex() : boolean
    return ((type == Constants.ITEM_Object) ||
            (type == Constants.ITEM_NewObject));
!!!3398402.java!!!	printIndex() : String
    if(type == Constants.ITEM_Object)
      return ", class=" + constant_pool.constantToString(index, Constants.CONSTANT_Class);
    else if(type == Constants.ITEM_NewObject)
      return ", offset=" + index;
    else
      return "";
!!!3398530.java!!!	toString() : String
    return "(type=" + Constants.ITEM_NAMES[type] + printIndex() + ")";
!!!3398658.java!!!	copy() : StackMapType
    try {
      return (StackMapType)clone();
    } catch(CloneNotSupportedException e) {}

    return null;
!!!3398786.java!!!	getConstantPool() : ConstantPool
 return constant_pool;
!!!3398914.java!!!	setConstantPool(inout constant_pool : ConstantPool) : void
    this.constant_pool = constant_pool;
