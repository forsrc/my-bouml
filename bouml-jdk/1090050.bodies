class OfDouble
!!!8871682.java!!!	forEachRemaining(inout action : DoubleConsumer) : void
            Objects.requireNonNull(action);
            while (hasNext())
                action.accept(nextDouble());
!!!8871810.java!!!	next() : Double
            if (Tripwire.ENABLED)
                Tripwire.trip(getClass(), "{0} calling PrimitiveIterator.OfDouble.nextLong()");
            return nextDouble();
!!!8871938.java!!!	forEachRemaining(inout action : Consumer) : void
            if (action instanceof DoubleConsumer) {
                forEachRemaining((DoubleConsumer) action);
            }
            else {
                // The method reference action::accept is never null
                Objects.requireNonNull(action);
                if (Tripwire.ENABLED)
                    Tripwire.trip(getClass(), "{0} calling PrimitiveIterator.OfDouble.forEachRemainingDouble(action::accept)");
                forEachRemaining((DoubleConsumer) action::accept);
            }
