class RenderingHints
!!!6310146.java!!!	RenderingHints(inout init : Map)
        if (init != null) {
            hintmap.putAll(init);
        }
!!!6310274.java!!!	RenderingHints(inout key : RenderingHints::Key, inout value : Object)
        hintmap.put(key, value);
!!!6310402.java!!!	size() : int
        return hintmap.size();
!!!6310530.java!!!	isEmpty() : boolean
        return hintmap.isEmpty();
!!!6310658.java!!!	containsKey(inout key : Object) : boolean
        return hintmap.containsKey((Key) key);
!!!6310786.java!!!	containsValue(inout value : Object) : boolean
        return hintmap.containsValue(value);
!!!6310914.java!!!	get(inout key : Object) : Object
        return hintmap.get((Key) key);
!!!6311042.java!!!	put(inout key : Object, inout value : Object) : Object
        if (!((Key) key).isCompatibleValue(value)) {
            throw new IllegalArgumentException(value+
                                               " incompatible with "+
                                               key);
        }
        return hintmap.put((Key) key, value);
!!!6311170.java!!!	add(inout hints : RenderingHints) : void
        hintmap.putAll(hints.hintmap);
!!!6311298.java!!!	clear() : void
        hintmap.clear();
!!!6311426.java!!!	remove(inout key : Object) : Object
        return hintmap.remove((Key) key);
!!!6311554.java!!!	putAll(inout m : Map) : void
        // ## javac bug?
        //if (m instanceof RenderingHints) {
        if (RenderingHints.class.isInstance(m)) {
            //hintmap.putAll(((RenderingHints) m).hintmap);
            for (Map.Entry<?,?> entry : m.entrySet())
                hintmap.put(entry.getKey(), entry.getValue());
        } else {
            // Funnel each key/value pair through our protected put method
            for (Map.Entry<?,?> entry : m.entrySet())
                put(entry.getKey(), entry.getValue());
        }
!!!6311682.java!!!	keySet() : Set
        return hintmap.keySet();
!!!6311810.java!!!	values() : Collection
        return hintmap.values();
!!!6311938.java!!!	entrySet() : Set
        return Collections.unmodifiableMap(hintmap).entrySet();
!!!6312066.java!!!	equals(inout o : Object) : boolean
        if (o instanceof RenderingHints) {
            return hintmap.equals(((RenderingHints) o).hintmap);
        } else if (o instanceof Map) {
            return hintmap.equals(o);
        }
        return false;
!!!6312194.java!!!	hashCode() : int
        return hintmap.hashCode();
!!!6312322.java!!!	clone() : Object
        RenderingHints rh;
        try {
            rh = (RenderingHints) super.clone();
            if (hintmap != null) {
                rh.hintmap = (HashMap<Object,Object>) hintmap.clone();
            }
        } catch (CloneNotSupportedException e) {
            // this shouldn't happen, since we are Cloneable
            throw new InternalError(e);
        }

        return rh;
!!!6312450.java!!!	toString() : String
        if (hintmap == null) {
            return getClass().getName() + "@" +
                Integer.toHexString(hashCode()) +
                " (0 hints)";
        }

        return hintmap.toString();
