class XSModelGroupImpl
!!!4719106.java!!!	isEmpty() : boolean
        for (int i = 0; i < fParticleCount; i++) {
            if (!fParticles[i].isEmpty())
                return false;
        }
        return true;
!!!4719234.java!!!	minEffectiveTotalRange() : int
        if (fCompositor == MODELGROUP_CHOICE)
            return minEffectiveTotalRangeChoice();
        else
            return minEffectiveTotalRangeAllSeq();
!!!4719362.java!!!	minEffectiveTotalRangeAllSeq() : int
        int total = 0;
        for (int i = 0; i < fParticleCount; i++)
            total += fParticles[i].minEffectiveTotalRange();
        return total;
!!!4719490.java!!!	minEffectiveTotalRangeChoice() : int
        int min = 0, one;
        if (fParticleCount > 0)
            min = fParticles[0].minEffectiveTotalRange();

        for (int i = 1; i < fParticleCount; i++) {
            one = fParticles[i].minEffectiveTotalRange();
            if (one < min)
                min = one;
        }

        return min;
!!!4719618.java!!!	maxEffectiveTotalRange() : int
        if (fCompositor == MODELGROUP_CHOICE)
            return maxEffectiveTotalRangeChoice();
        else
            return maxEffectiveTotalRangeAllSeq();
!!!4719746.java!!!	maxEffectiveTotalRangeAllSeq() : int
        int total = 0, one;
        for (int i = 0; i < fParticleCount; i++) {
            one = fParticles[i].maxEffectiveTotalRange();
            if (one == SchemaSymbols.OCCURRENCE_UNBOUNDED)
                return SchemaSymbols.OCCURRENCE_UNBOUNDED;
            total += one;
        }
        return total;
!!!4719874.java!!!	maxEffectiveTotalRangeChoice() : int
        int max = 0, one;
        if (fParticleCount > 0) {
            max = fParticles[0].maxEffectiveTotalRange();
            if (max == SchemaSymbols.OCCURRENCE_UNBOUNDED)
                return SchemaSymbols.OCCURRENCE_UNBOUNDED;
        }

        for (int i = 1; i < fParticleCount; i++) {
            one = fParticles[i].maxEffectiveTotalRange();
            if (one == SchemaSymbols.OCCURRENCE_UNBOUNDED)
                return SchemaSymbols.OCCURRENCE_UNBOUNDED;
            if (one > max)
                max = one;
        }
        return max;
!!!4720002.java!!!	toString() : String
        // REVISIT: Commented code may help to eliminate redundant parentheses (test first before committing)
        if (fDescription == null) {
            StringBuffer buffer = new StringBuffer();
            if (fCompositor == MODELGROUP_ALL)
                buffer.append("all(");
            else  //if (fMinOccurs != 1 || fMaxOccurs != 1)
                buffer.append('(');
            if (fParticleCount > 0)
                buffer.append(fParticles[0].toString());
            for (int i = 1; i < fParticleCount; i++) {
                if (fCompositor == MODELGROUP_CHOICE)
                    buffer.append('|');
                else
                    buffer.append(',');
                buffer.append(fParticles[i].toString());
            }
            //if (fCompositor == MODELGROUP_ALL || fMinOccurs != 1 || fMaxOccurs != 1)
                  buffer.append(')');
            fDescription = buffer.toString();
        }
        return fDescription;
!!!4720130.java!!!	reset() : void
        fCompositor = MODELGROUP_SEQUENCE;
        fParticles = null;
        fParticleCount = 0;
        fDescription = null;
        fAnnotations = null;
!!!4720258.java!!!	getType() : short
        return XSConstants.MODEL_GROUP;
!!!4720386.java!!!	getName() : String
        return null;
!!!4720514.java!!!	getNamespace() : String
        return null;
!!!4720642.java!!!	getCompositor() : short
        if (fCompositor == MODELGROUP_CHOICE)
            return XSModelGroup.COMPOSITOR_CHOICE;
        else if (fCompositor == MODELGROUP_SEQUENCE)
            return XSModelGroup.COMPOSITOR_SEQUENCE;
        else
            return XSModelGroup.COMPOSITOR_ALL;
!!!4720770.java!!!	getParticles() : XSObjectList
        return new XSObjectListImpl(fParticles, fParticleCount);
!!!4720898.java!!!	getAnnotation() : XSAnnotation
        return (fAnnotations != null) ? (XSAnnotation) fAnnotations.item(0) : null;
!!!4721026.java!!!	getAnnotations() : XSObjectList
        return (fAnnotations != null) ? fAnnotations : XSObjectListImpl.EMPTY_LIST;
!!!4721154.java!!!	getNamespaceItem() : XSNamespaceItem
        return null;
