class XMLGrammarPreparser
!!!5037570.java!!!	XMLGrammarPreparser()
        this(new SymbolTable());
!!!5037698.java!!!	XMLGrammarPreparser(inout symbolTable : SymbolTable)
        fSymbolTable = symbolTable;

        fLoaders = new HashMap<>();
        fErrorReporter = new XMLErrorReporter();
        setLocale(Locale.getDefault());
        fEntityResolver = new XMLEntityManager();
        // those are all the basic properties...
!!!5037826.java!!!	registerPreparser(inout grammarType : String, inout loader : XMLGrammarLoader) : boolean
        if(loader == null) { // none specified!
            if(KNOWN_LOADERS.containsKey(grammarType)) {
                // got one; just instantiate it...
                String loaderName = (String)KNOWN_LOADERS.get(grammarType);
                try {
                    XMLGrammarLoader gl = (XMLGrammarLoader)(ObjectFactory.newInstance(loaderName, true));
                    fLoaders.put(grammarType, gl);
                } catch (Exception e) {
                    return false;
                }
                return true;
            }
            return false;
        }
        // were given one
        fLoaders.put(grammarType, loader);
        return true;
!!!5037954.java!!!	preparseGrammar(inout type : String, inout is : XMLInputSource) : Grammar
        if(fLoaders.containsKey(type)) {
            XMLGrammarLoader gl = fLoaders.get(type);
            // make sure gl's been set up with all the "basic" properties:
            gl.setProperty(SYMBOL_TABLE, fSymbolTable);
            gl.setProperty(ENTITY_RESOLVER, fEntityResolver);
            gl.setProperty(ERROR_REPORTER, fErrorReporter);
            // potentially, not all will support this one...
            if(fGrammarPool != null) {
                try {
                    gl.setProperty(GRAMMAR_POOL, fGrammarPool);
                } catch(Exception e) {
                    // too bad...
                }
            }
            return gl.loadGrammar(is);
        }
        return null;
!!!5038082.java!!!	setLocale(inout locale : Locale) : void
        fLocale = locale;
        fErrorReporter.setLocale(locale);
!!!5038210.java!!!	getLocale() : Locale
        return fLocale;
!!!5038338.java!!!	setErrorHandler(inout errorHandler : XMLErrorHandler) : void
        fErrorReporter.setProperty(ERROR_HANDLER, errorHandler);
!!!5038466.java!!!	getErrorHandler() : XMLErrorHandler
        return fErrorReporter.getErrorHandler();
!!!5038594.java!!!	setEntityResolver(inout entityResolver : XMLEntityResolver) : void
        fEntityResolver = entityResolver;
!!!5038722.java!!!	getEntityResolver() : XMLEntityResolver
        return fEntityResolver;
!!!5038850.java!!!	setGrammarPool(inout grammarPool : XMLGrammarPool) : void
        fGrammarPool = grammarPool;
!!!5038978.java!!!	getGrammarPool() : XMLGrammarPool
        return fGrammarPool;
!!!5039106.java!!!	getLoader(inout type : String) : XMLGrammarLoader
        return fLoaders.get(type);
!!!5039234.java!!!	setFeature(inout featureId : String, inout value : boolean) : void
        for (Map.Entry<String, XMLGrammarLoader> entry : fLoaders.entrySet()) {
            try {
                XMLGrammarLoader gl = entry.getValue();
                gl.setFeature(featureId, value);
            } catch(Exception e) {
                // eat it up...
            }
        }
        // since our error reporter is a property we set later,
        // make sure features it understands are also set.
        if(featureId.equals(CONTINUE_AFTER_FATAL_ERROR)) {
            fErrorReporter.setFeature(CONTINUE_AFTER_FATAL_ERROR, value);
        }
!!!5039362.java!!!	setProperty(inout propId : String, inout value : Object) : void
        for (Map.Entry<String, XMLGrammarLoader> entry : fLoaders.entrySet()) {
            try {
                XMLGrammarLoader gl = entry.getValue();
                gl.setProperty(propId, value);
            } catch(Exception e) {
                // eat it up...
            }
        }
!!!5039490.java!!!	getFeature(inout type : String, inout featureId : String) : boolean
        XMLGrammarLoader gl = fLoaders.get(type);
        return gl.getFeature(featureId);
!!!5039618.java!!!	getProperty(inout type : String, inout propertyId : String) : Object
        XMLGrammarLoader gl = fLoaders.get(type);
        return gl.getProperty(propertyId);
