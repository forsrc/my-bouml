class ServantManagerImpl
!!!1092098.java!!!	ServantManagerImpl(inout orb : ORB, inout logDir : File, inout aNameService : NameService)
        this.logDir = logDir;
        this.orb    = orb;
        // initialize the counter database
        counterDb   = new CounterDB(logDir);
        contexts    = new Hashtable();
        theNameService = aNameService;
!!!1092226.java!!!	preinvoke(inout oid : byte [[]], inout adapter : POA, inout operation : String, inout cookie : CookieHolder) : Servant

        String objKey = new String(oid);

        Servant servant = (Servant) contexts.get(objKey);

        if (servant == null)
        {
                 servant =  readInContext(objKey);
        }

        return servant;
!!!1092354.java!!!	postinvoke(inout oid : byte [[]], inout adapter : POA, inout operation : String, inout cookie : Object, inout servant : Servant) : void
        // nada
!!!1092482.java!!!	readInContext(inout objKey : String) : NamingContextImpl
        NamingContextImpl context = (NamingContextImpl) contexts.get(objKey);
        if( context != null )
        {
                // Returning Context from Cache
                return context;
        }

        File contextFile = new File(logDir, objKey);
        if (contextFile.exists()) {
            try {
                FileInputStream fis = new FileInputStream(contextFile);
                ObjectInputStream ois = new ObjectInputStream(fis);
                context = (NamingContextImpl) ois.readObject();
                context.setORB( orb );
                context.setServantManagerImpl( this );
                context.setRootNameService( theNameService );
                ois.close();
            } catch (Exception ex) {
            }
        }

        if (context != null)
        {
                contexts.put(objKey, context);
        }
        return context;
!!!1092610.java!!!	addContext(inout objKey : String, inout context : NamingContextImpl) : NamingContextImpl
        File contextFile =  new File(logDir, objKey);

        if (contextFile.exists())
        {
            context = readInContext(objKey);
        }
        else {
            try {
                FileOutputStream fos = new FileOutputStream(contextFile);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(context);
                oos.close();
            } catch (Exception ex) {
            }
        }
        try
        {
                contexts.remove( objKey );
        }
        catch( Exception e)
        {
        }
        contexts.put(objKey, context);

        return context;
!!!1092738.java!!!	updateContext(inout objKey : String, inout context : NamingContextImpl) : void
        File contextFile =  new File(logDir, objKey);
        if (contextFile.exists())
        {
                contextFile.delete( );
                contextFile =  new File(logDir, objKey);
        }

        try {
                FileOutputStream fos = new FileOutputStream(contextFile);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(context);
                oos.close();
            } catch (Exception ex) {
                ex.printStackTrace( );
            }
!!!1092866.java!!!	getRootObjectKey() : String
        return objKeyPrefix + CounterDB.rootCounter;
!!!1092994.java!!!	getNewObjectKey() : String
        return objKeyPrefix + counterDb.getNextCounter();
