class ByteBufferAsCharBufferRL
!!!7612290.java!!!	ByteBufferAsCharBufferRL(inout bb : ByteBuffer)
   // package-private












        super(bb);

!!!7612418.java!!!	ByteBufferAsCharBufferRL(inout bb : ByteBuffer, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)





        super(bb, mark, pos, lim, cap, off);

!!!7612546.java!!!	slice() : CharBuffer
        int pos = this.position();
        int lim = this.limit();
        assert (pos <= lim);
        int rem = (pos <= lim ? lim - pos : 0);
        int off = (pos << 1) + offset;
        assert (off >= 0);
        return new ByteBufferAsCharBufferRL(bb, -1, 0, rem, rem, off);
!!!7612674.java!!!	duplicate() : CharBuffer
        return new ByteBufferAsCharBufferRL(bb,
                                                    this.markValue(),
                                                    this.position(),
                                                    this.limit(),
                                                    this.capacity(),
                                                    offset);
!!!7612802.java!!!	asReadOnlyBuffer() : CharBuffer








        return duplicate();

!!!7612930.java!!!	put(in x : char) : CharBuffer




        throw new ReadOnlyBufferException();

!!!7613058.java!!!	put(in i : int, in x : char) : CharBuffer




        throw new ReadOnlyBufferException();

!!!7613186.java!!!	compact() : CharBuffer

















        throw new ReadOnlyBufferException();

!!!7613314.java!!!	isDirect() : boolean
        return bb.isDirect();
!!!7613442.java!!!	isReadOnly() : boolean
        return true;
!!!7613570.java!!!	toString(in start : int, in end : int) : String
        if ((end > limit()) || (start > end))
            throw new IndexOutOfBoundsException();
        try {
            int len = end - start;
            char[] ca = new char[len];
            CharBuffer cb = CharBuffer.wrap(ca);
            CharBuffer db = this.duplicate();
            db.position(start);
            db.limit(end);
            cb.put(db);
            return new String(ca);
        } catch (StringIndexOutOfBoundsException x) {
            throw new IndexOutOfBoundsException();
        }
!!!7613698.java!!!	subSequence(in start : int, in end : int) : CharBuffer
        int pos = position();
        int lim = limit();
        assert (pos <= lim);
        pos = (pos <= lim ? pos : lim);
        int len = lim - pos;

        if ((start < 0) || (end > len) || (start > end))
            throw new IndexOutOfBoundsException();
        return new ByteBufferAsCharBufferRL(bb,
                                                  -1,
                                                  pos + start,
                                                  pos + end,
                                                  capacity(),
                                                  offset);
!!!7613826.java!!!	order() : ByteOrder




        return ByteOrder.LITTLE_ENDIAN;

