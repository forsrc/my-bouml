class ASCIIReader
!!!4557698.java!!!	ASCIIReader(inout inputStream : InputStream, inout messageFormatter : MessageFormatter, inout locale : Locale)
        this(inputStream, DEFAULT_BUFFER_SIZE, messageFormatter, locale);
!!!4557826.java!!!	ASCIIReader(inout inputStream : InputStream, in size : int, inout messageFormatter : MessageFormatter, inout locale : Locale)
        fInputStream = inputStream;
        BufferAllocator ba = ThreadLocalBufferAllocator.getBufferAllocator();
        fBuffer = ba.getByteBuffer(size);
        if (fBuffer == null) {
            fBuffer = new byte[size];
        }
        fFormatter = messageFormatter;
        fLocale = locale;
!!!4557954.java!!!	read() : int
        int b0 = fInputStream.read();
        if (b0 >= 0x80) {
            throw new MalformedByteSequenceException(fFormatter,
                fLocale, XMLMessageFormatter.XML_DOMAIN,
                "InvalidASCII", new Object [] {Integer.toString(b0)});
        }
        return b0;
!!!4558082.java!!!	read(inout ch : char [[]], in offset : int, in length : int) : int
        if (length > fBuffer.length) {
            length = fBuffer.length;
        }
        int count = fInputStream.read(fBuffer, 0, length);
        for (int i = 0; i < count; i++) {
            int b0 = fBuffer[i];
            if (b0 < 0) {
                throw new MalformedByteSequenceException(fFormatter,
                    fLocale, XMLMessageFormatter.XML_DOMAIN,
                    "InvalidASCII", new Object [] {Integer.toString(b0 & 0x0FF)});
            }
            ch[offset + i] = (char)b0;
        }
        return count;
!!!4558210.java!!!	skip(in n : long) : long
        return fInputStream.skip(n);
!!!4558338.java!!!	ready() : boolean
            return false;
!!!4558466.java!!!	markSupported() : boolean
            return fInputStream.markSupported();
!!!4558594.java!!!	mark(in readAheadLimit : int) : void
            fInputStream.mark(readAheadLimit);
!!!4558722.java!!!	reset() : void
        fInputStream.reset();
!!!4558850.java!!!	close() : void
         BufferAllocator ba = ThreadLocalBufferAllocator.getBufferAllocator();
         ba.returnByteBuffer(fBuffer);
         fBuffer = null;
         fInputStream.close();
