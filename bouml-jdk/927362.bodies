class RandomAccessFile
!!!6924930.java!!!	RandomAccessFile(inout name : String, inout mode : String)
        this(name != null ? new File(name) : null, mode);
!!!6925058.java!!!	RandomAccessFile(inout file : File, inout mode : String)
        String name = (file != null ? file.getPath() : null);
        int imode = -1;
        if (mode.equals("r"))
            imode = O_RDONLY;
        else if (mode.startsWith("rw")) {
            imode = O_RDWR;
            rw = true;
            if (mode.length() > 2) {
                if (mode.equals("rws"))
                    imode |= O_SYNC;
                else if (mode.equals("rwd"))
                    imode |= O_DSYNC;
                else
                    imode = -1;
            }
        }
        if (imode < 0)
            throw new IllegalArgumentException("Illegal mode \"" + mode
                                               + "\" must be one of "
                                               + "\"r\", \"rw\", \"rws\","
                                               + " or \"rwd\"");
        SecurityManager security = System.getSecurityManager();
        if (security != null) {
            security.checkRead(name);
            if (rw) {
                security.checkWrite(name);
            }
        }
        if (name == null) {
            throw new NullPointerException();
        }
        if (file.isInvalid()) {
            throw new FileNotFoundException("Invalid file path");
        }
        fd = new FileDescriptor();
        fd.attach(this);
        path = name;
        open(name, imode);
!!!6925186.java!!!	getFD() : FileDescriptor
        if (fd != null) {
            return fd;
        }
        throw new IOException();
!!!6925314.java!!!	getChannel() : FileChannel
        synchronized (this) {
            if (channel == null) {
                channel = FileChannelImpl.open(fd, path, true, rw, this);
            }
            return channel;
        }
!!!6925570.java!!!	open(inout name : String, in mode : int) : void
        open0(name, mode);
!!!6925698.java!!!	read() : int
        return read0();
!!!6926082.java!!!	read(inout b : byte [[]], in off : int, in len : int) : int
        return readBytes(b, off, len);
!!!6926210.java!!!	read(inout b : byte [[]]) : int
        return readBytes(b, 0, b.length);
!!!6926338.java!!!	readFully(inout b : byte [[]]) : void
        readFully(b, 0, b.length);
!!!6926466.java!!!	readFully(inout b : byte [[]], in off : int, in len : int) : void
        int n = 0;
        do {
            int count = this.read(b, off + n, len - n);
            if (count < 0)
                throw new EOFException();
            n += count;
        } while (n < len);
!!!6926594.java!!!	skipBytes(in n : int) : int
        long pos;
        long len;
        long newpos;

        if (n <= 0) {
            return 0;
        }
        pos = getFilePointer();
        len = length();
        newpos = pos + n;
        if (newpos > len) {
            newpos = len;
        }
        seek(newpos);

        /* return the actual number of bytes skipped */
        return (int) (newpos - pos);
!!!6926722.java!!!	write(in b : int) : void
        write0(b);
!!!6927106.java!!!	write(inout b : byte [[]]) : void
        writeBytes(b, 0, b.length);
!!!6927234.java!!!	write(inout b : byte [[]], in off : int, in len : int) : void
        writeBytes(b, off, len);
!!!6927490.java!!!	seek(in pos : long) : void
        if (pos < 0) {
            throw new IOException("Negative seek offset");
        } else {
            seek0(pos);
        }
!!!6928002.java!!!	close() : void
        synchronized (closeLock) {
            if (closed) {
                return;
            }
            closed = true;
        }
        if (channel != null) {
            channel.close();
        }

        fd.closeAll(new Closeable() {
            public void close() throws IOException {
               close0();
           }
        });
!!!6928130.java!!!	readBoolean() : boolean
        int ch = this.read();
        if (ch < 0)
            throw new EOFException();
        return (ch != 0);
!!!6928258.java!!!	readByte() : byte
        int ch = this.read();
        if (ch < 0)
            throw new EOFException();
        return (byte)(ch);
!!!6928386.java!!!	readUnsignedByte() : int
        int ch = this.read();
        if (ch < 0)
            throw new EOFException();
        return ch;
!!!6928514.java!!!	readShort() : short
        int ch1 = this.read();
        int ch2 = this.read();
        if ((ch1 | ch2) < 0)
            throw new EOFException();
        return (short)((ch1 << 8) + (ch2 << 0));
!!!6928642.java!!!	readUnsignedShort() : int
        int ch1 = this.read();
        int ch2 = this.read();
        if ((ch1 | ch2) < 0)
            throw new EOFException();
        return (ch1 << 8) + (ch2 << 0);
!!!6928770.java!!!	readChar() : char
        int ch1 = this.read();
        int ch2 = this.read();
        if ((ch1 | ch2) < 0)
            throw new EOFException();
        return (char)((ch1 << 8) + (ch2 << 0));
!!!6928898.java!!!	readInt() : int
        int ch1 = this.read();
        int ch2 = this.read();
        int ch3 = this.read();
        int ch4 = this.read();
        if ((ch1 | ch2 | ch3 | ch4) < 0)
            throw new EOFException();
        return ((ch1 << 24) + (ch2 << 16) + (ch3 << 8) + (ch4 << 0));
!!!6929026.java!!!	readLong() : long
        return ((long)(readInt()) << 32) + (readInt() & 0xFFFFFFFFL);
!!!6929154.java!!!	readFloat() : float
        return Float.intBitsToFloat(readInt());
!!!6929282.java!!!	readDouble() : double
        return Double.longBitsToDouble(readLong());
!!!6929410.java!!!	readLine() : String
        StringBuffer input = new StringBuffer();
        int c = -1;
        boolean eol = false;

        while (!eol) {
            switch (c = read()) {
            case -1:
            case '\n':
                eol = true;
                break;
            case '\r':
                eol = true;
                long cur = getFilePointer();
                if ((read()) != '\n') {
                    seek(cur);
                }
                break;
            default:
                input.append((char)c);
                break;
            }
        }

        if ((c == -1) && (input.length() == 0)) {
            return null;
        }
        return input.toString();
!!!6929538.java!!!	readUTF() : String
        return DataInputStream.readUTF(this);
!!!6929666.java!!!	writeBoolean(inout v : boolean) : void
        write(v ? 1 : 0);
        //written++;
!!!6929794.java!!!	writeByte(in v : int) : void
        write(v);
        //written++;
!!!6929922.java!!!	writeShort(in v : int) : void
        write((v >>> 8) & 0xFF);
        write((v >>> 0) & 0xFF);
        //written += 2;
!!!6930050.java!!!	writeChar(in v : int) : void
        write((v >>> 8) & 0xFF);
        write((v >>> 0) & 0xFF);
        //written += 2;
!!!6930178.java!!!	writeInt(in v : int) : void
        write((v >>> 24) & 0xFF);
        write((v >>> 16) & 0xFF);
        write((v >>>  8) & 0xFF);
        write((v >>>  0) & 0xFF);
        //written += 4;
!!!6930306.java!!!	writeLong(in v : long) : void
        write((int)(v >>> 56) & 0xFF);
        write((int)(v >>> 48) & 0xFF);
        write((int)(v >>> 40) & 0xFF);
        write((int)(v >>> 32) & 0xFF);
        write((int)(v >>> 24) & 0xFF);
        write((int)(v >>> 16) & 0xFF);
        write((int)(v >>>  8) & 0xFF);
        write((int)(v >>>  0) & 0xFF);
        //written += 8;
!!!6930434.java!!!	writeFloat(in v : float) : void
        writeInt(Float.floatToIntBits(v));
!!!6930562.java!!!	writeDouble(in v : double) : void
        writeLong(Double.doubleToLongBits(v));
!!!6930690.java!!!	writeBytes(inout s : String) : void
        int len = s.length();
        byte[] b = new byte[len];
        s.getBytes(0, len, b, 0);
        writeBytes(b, 0, len);
!!!6930818.java!!!	writeChars(inout s : String) : void
        int clen = s.length();
        int blen = 2*clen;
        byte[] b = new byte[blen];
        char[] c = new char[clen];
        s.getChars(0, clen, c, 0);
        for (int i = 0, j = 0; i < clen; i++) {
            b[j++] = (byte)(c[i] >>> 8);
            b[j++] = (byte)(c[i] >>> 0);
        }
        writeBytes(b, 0, blen);
!!!6930946.java!!!	writeUTF(inout str : String) : void
        DataOutputStream.writeUTF(str, this);
