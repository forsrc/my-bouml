format 222
"util" // jdk1.8::com::sun::source::util
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/source/util/"
  java_package "com.sun.source.util"
  classview 172674 "util"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 850434 "DocSourcePositions"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides methods to obtain the position of a DocTree within a javadoc comment.
A position is defined as a simple character offset from the start of a
CompilationUnit where the first character is at offset 0.

@since 1.8
"
      classrelation 2875394 // <generalisation>
	relation 2875394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2875394 // <generalisation>
	  b parent class_ref 850562 // SourcePositions
      end

      operation 6029570 "getStartPosition"
	public explicit_return_type "long"
	nparams 3
	  param inout name "file" type class_ref 844546 // CompilationUnitTree
	  param inout name "comment" type class_ref 838658 // DocCommentTree
	  param inout name "tree" type class_ref 837506 // DocTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the starting position of the tree within the comment within the file.  If tree is not found within
file, or if the starting position is not available,
return {@link javax.tools.Diagnostic#NOPOS}.
The given tree should be under the given comment tree, and the given documentation
comment tree should be returned from a {@link DocTrees#getDocCommentTree(com.sun.source.util.TreePath) }
for a tree under the given file.
The returned position must be at the start of the yield of this tree, that
is for any sub-tree of this tree, the following must hold:

<p>
{@code tree.getStartPosition() <= subtree.getStartPosition()} or <br>
{@code tree.getStartPosition() == NOPOS} or <br>
{@code subtree.getStartPosition() == NOPOS}
</p>

@param file CompilationUnit in which to find tree.
@param comment the comment tree that encloses the tree for which the
               position is being sought
@param tree tree for which a position is sought.
@return the start position of tree.
"
      end

      operation 6029698 "getEndPosition"
	public explicit_return_type "long"
	nparams 3
	  param inout name "file" type class_ref 844546 // CompilationUnitTree
	  param inout name "comment" type class_ref 838658 // DocCommentTree
	  param inout name "tree" type class_ref 837506 // DocTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ending position of the tree within the comment within the file.  If tree is not found within
file, or if the ending position is not available,
return {@link javax.tools.Diagnostic#NOPOS}.
The given tree should be under the given comment tree, and the given documentation
comment tree should be returned from a {@link DocTrees#getDocCommentTree(com.sun.source.util.TreePath) }
for a tree under the given file.
The returned position must be at the end of the yield of this tree,
that is for any sub-tree of this tree, the following must hold:

<p>
{@code tree.getEndPosition() >= subtree.getEndPosition()} or <br>
{@code tree.getEndPosition() == NOPOS} or <br>
{@code subtree.getEndPosition() == NOPOS}
</p>

In addition, the following must hold:

<p>
{@code tree.getStartPosition() <= tree.getEndPosition()}  or <br>
{@code tree.getStartPosition() == NOPOS} or <br>
{@code tree.getEndPosition() == NOPOS}
</p>

@param file CompilationUnit in which to find tree.
@param comment the comment tree that encloses the tree for which the
               position is being sought
@param tree tree for which a position is sought.
@return the start position of tree.
"
      end
    end

    class 850562 "SourcePositions"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides methods to obtain the position of a Tree within a CompilationUnit.
A position is defined as a simple character offset from the start of a
CompilationUnit where the first character is at offset 0.

@author Peter von der Ah&eacute;
@since 1.6
"
      operation 6029314 "getStartPosition"
	public explicit_return_type "long"
	nparams 2
	  param inout name "file" type class_ref 844546 // CompilationUnitTree
	  param inout name "tree" type class_ref 842370 // Tree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the starting position of tree within file.  If tree is not found within
file, or if the starting position is not available,
return {@link javax.tools.Diagnostic#NOPOS}.
The returned position must be at the start of the yield of this tree, that
is for any sub-tree of this tree, the following must hold:

<p>
{@code tree.getStartPosition() <= subtree.getStartPosition()} or <br>
{@code tree.getStartPosition() == NOPOS} or <br>
{@code subtree.getStartPosition() == NOPOS}
</p>

@param file CompilationUnit in which to find tree.
@param tree tree for which a position is sought.
@return the start position of tree.
"
      end

      operation 6029442 "getEndPosition"
	public explicit_return_type "long"
	nparams 2
	  param inout name "file" type class_ref 844546 // CompilationUnitTree
	  param inout name "tree" type class_ref 842370 // Tree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ending position of tree within file.  If tree is not found within
file, or if the ending position is not available,
return {@link javax.tools.Diagnostic#NOPOS}.
The returned position must be at the end of the yield of this tree,
that is for any sub-tree of this tree, the following must hold:

<p>
{@code tree.getEndPosition() >= subtree.getEndPosition()} or <br>
{@code tree.getEndPosition() == NOPOS} or <br>
{@code subtree.getEndPosition() == NOPOS}
</p>

In addition, the following must hold:

<p>
{@code tree.getStartPosition() <= tree.getEndPosition()}  or <br>
{@code tree.getStartPosition() == NOPOS} or <br>
{@code tree.getEndPosition() == NOPOS}
</p>

@param file CompilationUnit in which to find tree.
@param tree tree for which a position is sought.
@return the end position of tree.
"
      end
    end

    class 850690 "DocTreePath"
      visibility public 
      nactuals 1
      actual class class_ref 184322 // Iterable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A path of tree nodes, typically used to represent the sequence of ancestor
nodes of a tree node up to the top level DocCommentTree node.

@since 1.8
"
      classrelation 2875522 // <realization>
	relation 2875522 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2875522 // <realization>
	  b parent class_ref 184322 // Iterable
      end

      operation 6029826 "getPath"
	class_operation public return_type class_ref 850690 // DocTreePath
	nparams 3
	  param inout name "treePath" type class_ref 850818 // TreePath
	  param inout name "doc" type class_ref 838658 // DocCommentTree
	  param inout name "target" type class_ref 837506 // DocTree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a documentation tree path for a tree node within a compilation unit.
@return null if the node is not found
"
      end

      operation 6029954 "getPath"
	class_operation public return_type class_ref 850690 // DocTreePath
	nparams 2
	  param inout name "path" type class_ref 850690 // DocTreePath
	  param inout name "target" type class_ref 837506 // DocTree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a documentation tree path for a tree node within a subtree identified by a DocTreePath object.
@return null if the node is not found
"
      end

      operation 6030082 "DocTreePath"
	public explicit_return_type ""
	nparams 2
	  param inout name "treePath" type class_ref 850818 // TreePath
	  param inout name "t" type class_ref 838658 // DocCommentTree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a DocTreePath for a root node.

@param treePath the TreePath from which the root node was created.
@param t the DocCommentTree to create the path for.
"
      end

      operation 6030210 "DocTreePath"
	public explicit_return_type ""
	nparams 2
	  param inout name "p" type class_ref 850690 // DocTreePath
	  param inout name "t" type class_ref 837506 // DocTree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a DocTreePath for a child node.
"
      end

      operation 6030338 "getTreePath"
	public return_type class_ref 850818 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the TreePath associated with this path.
@return TreePath for this DocTreePath
"
      end

      operation 6030466 "getDocComment"
	public return_type class_ref 838658 // DocCommentTree
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the DocCommentTree associated with this path.
@return DocCommentTree for this DocTreePath
"
      end

      operation 6030594 "getLeaf"
	public return_type class_ref 837506 // DocTree
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the leaf node for this path.
@return DocTree for this DocTreePath
"
      end

      operation 6030722 "getParentPath"
	public return_type class_ref 850690 // DocTreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for the enclosing node, or null if there is no enclosing node.
@return DocTreePath of parent
"
      end

      operation 6030850 "iterator"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<DocTree> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2875650 // treePath (<unidirectional association>)
	relation 2875650 --->
	  a role_name "treePath" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2875650 // treePath (<unidirectional association>)
	  b parent class_ref 850818 // TreePath
      end

      classrelation 2875778 // docComment (<unidirectional association>)
	relation 2875778 --->
	  a role_name "docComment" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2875778 // docComment (<unidirectional association>)
	  b parent class_ref 838658 // DocCommentTree
      end

      classrelation 2875906 // leaf (<unidirectional association>)
	relation 2875906 --->
	  a role_name "leaf" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2875906 // leaf (<unidirectional association>)
	  b parent class_ref 837506 // DocTree
      end

      classrelation 2876034 // parent (<unidirectional association>)
	relation 2876034 --->
	  a role_name "parent" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2876034 // parent (<unidirectional association>)
	  b parent class_ref 850690 // DocTreePath
      end
    end

    class 850818 "TreePath"
      visibility public 
      nactuals 1
      actual class class_ref 184322 // Iterable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A path of tree nodes, typically used to represent the sequence of ancestor
nodes of a tree node up to the top level CompilationUnitTree node.

@author Jonathan Gibbons
@since 1.6
"
      classrelation 2877954 // <realization>
	relation 2877954 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2877954 // <realization>
	  b parent class_ref 184322 // Iterable
      end

      operation 6055298 "getPath"
	class_operation public return_type class_ref 850818 // TreePath
	nparams 2
	  param inout name "unit" type class_ref 844546 // CompilationUnitTree
	  param inout name "target" type class_ref 842370 // Tree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a tree path for a tree node within a compilation unit.
@return null if the node is not found
"
      end

      operation 6055426 "getPath"
	class_operation public return_type class_ref 850818 // TreePath
	nparams 2
	  param inout name "path" type class_ref 850818 // TreePath
	  param inout name "target" type class_ref 842370 // Tree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a tree path for a tree node within a subtree identified by a TreePath object.
@return null if the node is not found
"
      end

      operation 6055554 "TreePath"
	public explicit_return_type ""
	nparams 1
	  param inout name "t" type class_ref 844546 // CompilationUnitTree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a TreePath for a root node.
"
      end

      operation 6055682 "TreePath"
	public explicit_return_type ""
	nparams 2
	  param inout name "p" type class_ref 850818 // TreePath
	  param inout name "t" type class_ref 842370 // Tree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a TreePath for a child node.
"
      end

      operation 6055810 "getCompilationUnit"
	public return_type class_ref 844546 // CompilationUnitTree
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the compilation unit associated with this path.
"
      end

      operation 6055938 "getLeaf"
	public return_type class_ref 842370 // Tree
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the leaf node for this path.
"
      end

      operation 6056066 "getParentPath"
	public return_type class_ref 850818 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for the enclosing node, or null if there is no enclosing node.
"
      end

      operation 6056194 "iterator"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Tree> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Iterates from leaves to root.
"
      end

      classrelation 2878082 // compilationUnit (<unidirectional association>)
	relation 2878082 --->
	  a role_name "compilationUnit" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2878082 // compilationUnit (<unidirectional association>)
	  b parent class_ref 844546 // CompilationUnitTree
      end

      classrelation 2878210 // leaf (<unidirectional association>)
	relation 2878210 --->
	  a role_name "leaf" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2878210 // leaf (<unidirectional association>)
	  b parent class_ref 842370 // Tree
      end

      classrelation 2878338 // parent (<unidirectional association>)
	relation 2878338 --->
	  a role_name "parent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2878338 // parent (<unidirectional association>)
	  b parent class_ref 850818 // TreePath
      end
    end

    class 850946 "DocTreePathScanner"
      visibility public 
      nformals 2
      formal name "R" type "" explicit_default_value ""
        explicit_extends ""
      formal name "P" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 851074 // DocTreeScanner
        rank 0 explicit_value ""
      actual class class_ref 851074 // DocTreeScanner
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A DocTreeVisitor that visits all the child tree nodes, and provides
support for maintaining a path for the parent nodes.
To visit nodes of a particular type, just override the
corresponding visitorXYZ method.
Inside your method, call super.visitXYZ to visit descendant
nodes.

@since 1.8
"
      classrelation 2876290 // <realization>
	relation 2876290 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2876290 // <realization>
	  b parent class_ref 851074 // DocTreeScanner
      end

      operation 6035330 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "path" type class_ref 850690 // DocTreePath
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan a tree from a position identified by a TreePath.
"
      end

      operation 6035458 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "tree" type class_ref 837506 // DocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Scan a single node.
The current path is updated for the duration of the scan.
"
      end

      operation 6035586 "getCurrentPath"
	cpp_inline public return_type class_ref 850690 // DocTreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current path for the node, as built up by the currently
active set of scan calls.
"
      end

      classrelation 2876418 // path (<unidirectional association>)
	relation 2876418 --->
	  a role_name "path" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2876418 // path (<unidirectional association>)
	  b parent class_ref 850690 // DocTreePath
      end
    end

    class 851074 "DocTreeScanner"
      visibility public 
      nformals 2
      formal name "R" type "" explicit_default_value ""
        explicit_extends ""
      formal name "P" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 837762 // DocTreeVisitor
        rank 0 explicit_value ""
      actual class class_ref 837762 // DocTreeVisitor
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A TreeVisitor that visits all the child tree nodes.
To visit nodes of a particular type, just override the
corresponding visitXYZ method.
Inside your method, call super.visitXYZ to visit descendant
nodes.

<p>The default implementation of the visitXYZ methods will determine
a result as follows:
<ul>
<li>If the node being visited has no children, the result will be null.
<li>If the node being visited has one child, the result will be the
result of calling {@code scan} on that child. The child may be a simple node
or itself a list of nodes.
<li> If the node being visited has more than one child, the result will
be determined by calling {@code scan} each child in turn, and then combining the
result of each scan after the first with the cumulative result
so far, as determined by the {@link #reduce} method. Each child may be either
a simple node of a list of nodes. The default behavior of the {@code reduce}
method is such that the result of the visitXYZ method will be the result of
the last child scanned.
</ul>

<p>Here is an example to count the number of erroneous nodes in a tree:
<pre>
  class CountErrors extends DocTreeScanner&lt;Integer,Void&gt; {
     {@literal @}Override
     public Integer visitErroneous(ErroneousTree node, Void p) {
         return 1;
     }
     {@literal @}Override
     public Integer reduce(Integer r1, Integer r2) {
         return (r1 == null ? 0 : r1) + (r2 == null ? 0 : r2);
     }
  }
</pre>

@since 1.8
"
      classrelation 2876162 // <realization>
	relation 2876162 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2876162 // <realization>
	  b parent class_ref 837762 // DocTreeVisitor
      end

      operation 6030978 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 837506 // DocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan a single node.
"
      end

      operation 6031106 "scanAndReduce"
	cpp_inline private explicit_return_type "R"
	nparams 3
	  param inout name "node" type class_ref 837506 // DocTree
	  param inout name "p" explicit_type "P"
	  param inout name "r" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6031234 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "nodes" type class_ref 184322 // Iterable
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends DocTree> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan a list of nodes.
"
      end

      operation 6031362 "scanAndReduce"
	cpp_inline private explicit_return_type "R"
	nparams 3
	  param inout name "nodes" type class_ref 184322 // Iterable
	  param inout name "p" explicit_type "P"
	  param inout name "r" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends DocTree> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6031490 "reduce"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "r1" explicit_type "R"
	  param inout name "r2" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reduces two results into a combined result.
The default implementation is to return the first parameter.
The general contract of the method is that it may take any action whatsoever.
"
      end

      operation 6031618 "visitAttribute"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 837378 // AttributeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ***************************************************************************
Visitor methods
**************************************************************************"
      end

      operation 6031746 "visitAuthor"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838146 // AuthorTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6031874 "visitComment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838402 // CommentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032002 "visitDeprecated"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838530 // DeprecatedTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032130 "visitDocComment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838658 // DocCommentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032258 "visitDocRoot"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838786 // DocRootTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032386 "visitEndElement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839042 // EndElementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032514 "visitEntity"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839170 // EntityTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032642 "visitErroneous"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839298 // ErroneousTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032770 "visitIdentifier"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839426 // IdentifierTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6032898 "visitInheritDoc"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839554 // InheritDocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033026 "visitLink"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839682 // LinkTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033154 "visitLiteral"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839810 // LiteralTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033282 "visitParam"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839938 // ParamTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033410 "visitReference"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840066 // ReferenceTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033538 "visitReturn"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840194 // ReturnTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033666 "visitSee"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840322 // SeeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033794 "visitSerial"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840450 // SerialTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6033922 "visitSerialData"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840578 // SerialDataTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034050 "visitSerialField"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840706 // SerialFieldTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034178 "visitSince"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840834 // SinceTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034306 "visitStartElement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840962 // StartElementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034434 "visitText"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841090 // TextTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034562 "visitThrows"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841218 // ThrowsTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034690 "visitUnknownBlockTag"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841346 // UnknownBlockTagTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034818 "visitUnknownInlineTag"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841474 // UnknownInlineTagTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6034946 "visitValue"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841602 // ValueTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6035074 "visitVersion"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841730 // VersionTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6035202 "visitOther"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 837506 // DocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 851202 "DocTrees"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides access to syntax trees for doc comments.

@since 1.8
"
      classrelation 2876546 // <generalisation>
	relation 2876546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2876546 // <generalisation>
	  b parent class_ref 851330 // Trees
      end

      operation 6038530 "instance"
	class_operation public return_type class_ref 851202 // DocTrees
	nparams 1
	  param inout name "task" type class_ref 851586 // CompilationTask
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a DocTrees object for a given CompilationTask.
@param task the compilation task for which to get the Trees object
@throws IllegalArgumentException if the task does not support the Trees API.
"
      end

      operation 6038658 "instance"
	class_operation public return_type class_ref 851202 // DocTrees
	nparams 1
	  param inout name "env" type class_ref 851714 // ProcessingEnvironment
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a DocTrees object for a given ProcessingEnvironment.
@param env the processing environment for which to get the Trees object
@throws IllegalArgumentException if the env does not support the Trees API.
"
      end

      operation 6038786 "getDocCommentTree"
	abstract public return_type class_ref 838658 // DocCommentTree
	nparams 1
	  param inout name "path" type class_ref 850818 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the doc comment tree, if any, for the Tree node identified by a given TreePath.
Returns null if no doc comment was found.
"
      end

      operation 6038914 "getElement"
	abstract public return_type class_ref 851842 // Element
	nparams 1
	  param inout name "path" type class_ref 850690 // DocTreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the language model element referred to by the leaf node of the given
{@link DocTreePath}, or null if unknown.
"
      end

      operation 6039042 "getSourcePositions"
	abstract public return_type class_ref 850434 // DocSourcePositions
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6039170 "printMessage"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "kind" type class_ref 852610 // Kind
	  param inout name "msg" type class_ref 429442 // CharSequence
	  param inout name "t" type class_ref 837506 // DocTree
	  param inout name "c" type class_ref 838658 // DocCommentTree
	  param inout name "root" type class_ref 844546 // CompilationUnitTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a message of the specified kind at the location of the
tree within the provided compilation unit

@param kind the kind of message
@param msg  the message, or an empty string if none
@param t    the tree to use as a position hint
@param root the compilation unit that contains tree
"
      end
    end

    class 851330 "Trees"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Bridges JSR 199, JSR 269, and the Tree API.

@author Peter von der Ah&eacute;
"
      operation 6035714 "instance"
	class_operation public return_type class_ref 851330 // Trees
	nparams 1
	  param inout name "task" type class_ref 851586 // CompilationTask
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a Trees object for a given CompilationTask.
@param task the compilation task for which to get the Trees object
@throws IllegalArgumentException if the task does not support the Trees API.
"
      end

      operation 6035842 "instance"
	class_operation public return_type class_ref 851330 // Trees
	nparams 1
	  param inout name "env" type class_ref 851714 // ProcessingEnvironment
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a Trees object for a given ProcessingEnvironment.
@param env the processing environment for which to get the Trees object
@throws IllegalArgumentException if the env does not support the Trees API.
"
      end

      operation 6035970 "getJavacTrees"
	class_operation package return_type class_ref 851330 // Trees
	nparams 2
	  param inout name "argType" type class_ref 130818 // Class
	  param inout name "arg" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6036098 "getSourcePositions"
	abstract public return_type class_ref 850562 // SourcePositions
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a utility object for obtaining source positions.
"
      end

      operation 6036226 "getTree"
	abstract public return_type class_ref 842370 // Tree
	nparams 1
	  param inout name "element" type class_ref 851842 // Element
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Tree node for a given Element.
Returns null if the node can not be found.
"
      end

      operation 6036354 "getTree"
	abstract public return_type class_ref 844290 // ClassTree
	nparams 1
	  param inout name "element" type class_ref 848898 // TypeElement
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ClassTree node for a given TypeElement.
Returns null if the node can not be found.
"
      end

      operation 6036482 "getTree"
	abstract public return_type class_ref 847618 // MethodTree
	nparams 1
	  param inout name "method" type class_ref 849026 // ExecutableElement
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the MethodTree node for a given ExecutableElement.
Returns null if the node can not be found.
"
      end

      operation 6036610 "getTree"
	abstract public return_type class_ref 842370 // Tree
	nparams 2
	  param inout name "e" type class_ref 851842 // Element
	  param inout name "a" type class_ref 851970 // AnnotationMirror
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Tree node for an AnnotationMirror on a given Element.
Returns null if the node can not be found.
"
      end

      operation 6036738 "getTree"
	abstract public return_type class_ref 842370 // Tree
	nparams 3
	  param inout name "e" type class_ref 851842 // Element
	  param inout name "a" type class_ref 851970 // AnnotationMirror
	  param inout name "v" type class_ref 852098 // AnnotationValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Tree node for an AnnotationValue for an AnnotationMirror on a given Element.
Returns null if the node can not be found.
"
      end

      operation 6036866 "getPath"
	abstract public return_type class_ref 850818 // TreePath
	nparams 2
	  param inout name "unit" type class_ref 844546 // CompilationUnitTree
	  param inout name "node" type class_ref 842370 // Tree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the path to tree node within the specified compilation unit.
"
      end

      operation 6036994 "getPath"
	abstract public return_type class_ref 850818 // TreePath
	nparams 1
	  param inout name "e" type class_ref 851842 // Element
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the TreePath node for a given Element.
Returns null if the node can not be found.
"
      end

      operation 6037122 "getPath"
	abstract public return_type class_ref 850818 // TreePath
	nparams 2
	  param inout name "e" type class_ref 851842 // Element
	  param inout name "a" type class_ref 851970 // AnnotationMirror
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the TreePath node for an AnnotationMirror on a given Element.
Returns null if the node can not be found.
"
      end

      operation 6037250 "getPath"
	abstract public return_type class_ref 850818 // TreePath
	nparams 3
	  param inout name "e" type class_ref 851842 // Element
	  param inout name "a" type class_ref 851970 // AnnotationMirror
	  param inout name "v" type class_ref 852098 // AnnotationValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the TreePath node for an AnnotationValue for an AnnotationMirror on a given Element.
Returns null if the node can not be found.
"
      end

      operation 6037378 "getElement"
	abstract public return_type class_ref 851842 // Element
	nparams 1
	  param inout name "path" type class_ref 850818 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Element for the Tree node identified by a given TreePath.
Returns null if the element is not available.
@throws IllegalArgumentException is the TreePath does not identify
a Tree node that might have an associated Element.
"
      end

      operation 6037506 "getTypeMirror"
	abstract public return_type class_ref 852226 // TypeMirror
	nparams 1
	  param inout name "path" type class_ref 850818 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the TypeMirror for the Tree node identified by a given TreePath.
Returns null if the TypeMirror is not available.
@throws IllegalArgumentException is the TreePath does not identify
a Tree node that might have an associated TypeMirror.
"
      end

      operation 6037634 "getScope"
	abstract public return_type class_ref 848770 // Scope
	nparams 1
	  param inout name "path" type class_ref 850818 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Scope for the Tree node identified by a given TreePath.
Returns null if the Scope is not available.
"
      end

      operation 6037762 "getDocComment"
	abstract public return_type class_ref 128130 // String
	nparams 1
	  param inout name "path" type class_ref 850818 // TreePath
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the doc comment, if any, for the Tree node identified by a given TreePath.
Returns null if no doc comment was found.
@see DocTrees#getDocCommentTree(TreePath)
"
      end

      operation 6037890 "isAccessible"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "scope" type class_ref 848770 // Scope
	  param inout name "type" type class_ref 848898 // TypeElement
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a given type is accessible in a given scope.
@param scope the scope to be checked
@param type the type to be checked
@return true if {@code type} is accessible
"
      end

      operation 6038018 "isAccessible"
	abstract public explicit_return_type "boolean"
	nparams 3
	  param inout name "scope" type class_ref 848770 // Scope
	  param inout name "member" type class_ref 851842 // Element
	  param inout name "type" type class_ref 852354 // DeclaredType
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the given element is accessible as a member of the given
type in a given scope.
@param scope the scope to be checked
@param member the member to be checked
@param type the type for which to check if the member is accessible
@return true if {@code member} is accessible in {@code type}
"
      end

      operation 6038146 "getOriginalType"
	abstract public return_type class_ref 852226 // TypeMirror
	nparams 1
	  param inout name "errorType" type class_ref 852482 // ErrorType
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the original type from the ErrorType object.
@param errorType The errorType for which we want to get the original type.
@return javax.lang.model.type.TypeMirror corresponding to the original type, replaced by the ErrorType.
"
      end

      operation 6038274 "printMessage"
	abstract public explicit_return_type "void"
	nparams 4
	  param inout name "kind" type class_ref 852610 // Kind
	  param inout name "msg" type class_ref 429442 // CharSequence
	  param inout name "t" type class_ref 842370 // Tree
	  param inout name "root" type class_ref 844546 // CompilationUnitTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a message of the specified kind at the location of the
tree within the provided compilation unit

@param kind the kind of message
@param msg  the message, or an empty string if none
@param t    the tree to use as a position hint
@param root the compilation unit that contains tree
"
      end

      operation 6038402 "getLub"
	abstract public return_type class_ref 852226 // TypeMirror
	nparams 1
	  param inout name "tree" type class_ref 844034 // CatchTree
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the lub of an exception parameter declared in a catch clause.
@param tree the tree for the catch clause
@return The lub of the exception parameter
"
      end
    end

    class 852738 "JavacTask"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides access to functionality specific to the JDK Java Compiler, javac.

@author Peter von der Ah&eacute;
@author Jonathan Gibbons
@since 1.6
"
      classrelation 2877058 // <realization>
	relation 2877058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2877058 // <realization>
	  b parent class_ref 851586 // CompilationTask
      end

      operation 6040450 "instance"
	class_operation public return_type class_ref 852738 // JavacTask
	nparams 1
	  param inout name "processingEnvironment" type class_ref 851714 // ProcessingEnvironment
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@code JavacTask} for a {@code ProcessingEnvironment}.
If the compiler is being invoked using a
{@link javax.tools.JavaCompiler.CompilationTask CompilationTask},
then that task will be returned.
@param processingEnvironment the processing environment
@return the {@code JavacTask} for a {@code ProcessingEnvironment}
@since 1.8
"
      end

      operation 6040578 "parse"
	abstract public return_type class_ref 184322 // Iterable
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends CompilationUnitTree> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the specified files returning a list of abstract syntax trees.

@return a list of abstract syntax trees
@throws IOException if an unhandled I/O error occurred in the compiler.
@throws IllegalStateException if the operation cannot be performed at this time.
"
      end

      operation 6040706 "analyze"
	abstract public return_type class_ref 184322 // Iterable
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Element> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Complete all analysis.

@return a list of elements that were analyzed
@throws IOException if an unhandled I/O error occurred in the compiler.
@throws IllegalStateException if the operation cannot be performed at this time.
"
      end

      operation 6040834 "generate"
	abstract public return_type class_ref 184322 // Iterable
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends JavaFileObject> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate code.

@return a list of files that were generated
@throws IOException if an unhandled I/O error occurred in the compiler.
@throws IllegalStateException if the operation cannot be performed at this time.
"
      end

      operation 6040962 "setTaskListener"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "taskListener" type class_ref 853762 // TaskListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The specified listener will receive notification of events
describing the progress of this compilation task.

If another listener is receiving notifications as a result of a prior
call of this method, then that listener will no longer receive notifications.

Informally, this method is equivalent to calling {@code removeTaskListener} for
any listener that has been previously set, followed by {@code addTaskListener}
for the new listener.

@throws IllegalStateException if the specified listener has already been added.
"
      end

      operation 6041090 "addTaskListener"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "taskListener" type class_ref 853762 // TaskListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The specified listener will receive notification of events
describing the progress of this compilation task.

This method may be called at any time before or during the compilation.

@throws IllegalStateException if the specified listener has already been added.
@since 1.8
"
      end

      operation 6041218 "removeTaskListener"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "taskListener" type class_ref 853762 // TaskListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The specified listener will no longer receive notification of events
describing the progress of this compilation task.

This method may be called at any time before or during the compilation.

@since 1.8
"
      end

      operation 6041346 "getTypeMirror"
	abstract public return_type class_ref 852226 // TypeMirror
	nparams 1
	  param inout name "path" type class_ref 184322 // Iterable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Tree> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a type mirror of the tree node determined by the specified path.
This method has been superceded by methods on
{@link com.sun.source.util.Trees Trees}.
@see com.sun.source.util.Trees#getTypeMirror
"
      end

      operation 6041474 "getElements"
	abstract public return_type class_ref 853890 // Elements
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a utility object for dealing with program elements.
"
      end

      operation 6041602 "getTypes"
	abstract public return_type class_ref 854018 // Types
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a utility object for dealing with type mirrors.
"
      end
    end

    class 853762 "TaskListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides a listener to monitor the activity of the JDK Java Compiler, javac.

@author Jonathan Gibbons
@since 1.6
"
      operation 6055042 "started"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 854530 // TaskEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6055170 "finished"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 854530 // TaskEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 854146 "Plugin"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface for a javac plug-in.

<p>The javac plug-in mechanism allows a user to specify one or more plug-ins
on the javac command line, to be started soon after the compilation
has begun. Plug-ins are identified by a user-friendly name. Each plug-in that
is started will be passed an array of strings, which may be used to
provide the plug-in with values for any desired options or other arguments.

<p>Plug-ins are located via a {@link ServiceLoader},
using the same class path as annotation processors (i.e.
{@link StandardLocation#ANNOTATION_PROCESSOR_PATH ANNOTATION_PROCESSOR_PATH} or
{@code -processorpath}).

<p>It is expected that a typical plug-in will simply register a
{@link TaskListener} to be informed of events during the execution
of the compilation, and that the rest of the work will be done
by the task listener.

@since 1.8
"
      operation 6041730 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the user-friendly name of this plug-in.
@return the user-friendly name of the plug-in
"
      end

      operation 6041858 "init"
	public explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 852738 // JavacTask
	  param inout name "" explicit_type "String...args"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the plug-in for a given compilation task.
@param task The compilation task that has just been started
@param args Arguments, if any, for the plug-in
"
      end
    end

    class 854274 "SimpleDocTreeVisitor"
      visibility public 
      nformals 2
      formal name "R" type "" explicit_default_value ""
        explicit_extends ""
      formal name "P" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 837762 // DocTreeVisitor
        rank 0 explicit_value ""
      actual class class_ref 837762 // DocTreeVisitor
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A simple visitor for tree nodes.

@since 1.8
"
      classrelation 2877186 // <realization>
	relation 2877186 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2877186 // <realization>
	  b parent class_ref 837762 // DocTreeVisitor
      end

      attribute 1327746 "DEFAULT_VALUE"
	const_attribute protected explicit_type "R"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6041986 "SimpleDocTreeVisitor"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6042114 "SimpleDocTreeVisitor"
	cpp_inline protected explicit_return_type ""
	nparams 1
	  param inout name "defaultValue" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6042242 "defaultAction"
	cpp_inline protected explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 837506 // DocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6042370 "visit"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 837506 // DocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6042498 "visit"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "nodes" type class_ref 184322 // Iterable
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends DocTree> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6042626 "visitAttribute"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 837378 // AttributeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6042754 "visitAuthor"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838146 // AuthorTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6042882 "visitComment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838402 // CommentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043010 "visitDeprecated"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838530 // DeprecatedTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043138 "visitDocComment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838658 // DocCommentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043266 "visitDocRoot"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 838786 // DocRootTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043394 "visitEndElement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839042 // EndElementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043522 "visitEntity"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839170 // EntityTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043650 "visitErroneous"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839298 // ErroneousTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043778 "visitIdentifier"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839426 // IdentifierTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6043906 "visitInheritDoc"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839554 // InheritDocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044034 "visitLink"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839682 // LinkTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044162 "visitLiteral"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839810 // LiteralTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044290 "visitParam"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 839938 // ParamTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044418 "visitReference"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840066 // ReferenceTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044546 "visitReturn"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840194 // ReturnTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044674 "visitSee"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840322 // SeeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044802 "visitSerial"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840450 // SerialTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6044930 "visitSerialData"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840578 // SerialDataTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045058 "visitSerialField"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840706 // SerialFieldTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045186 "visitSince"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840834 // SinceTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045314 "visitStartElement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 840962 // StartElementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045442 "visitText"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841090 // TextTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045570 "visitThrows"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841218 // ThrowsTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045698 "visitUnknownBlockTag"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841346 // UnknownBlockTagTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045826 "visitUnknownInlineTag"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841474 // UnknownInlineTagTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6045954 "visitValue"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841602 // ValueTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6046082 "visitVersion"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 841730 // VersionTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6046210 "visitOther"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 837506 // DocTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 854402 "SimpleTreeVisitor"
      visibility public 
      nformals 2
      formal name "R" type "" explicit_default_value ""
        explicit_extends ""
      formal name "P" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 842626 // TreeVisitor
        rank 0 explicit_value ""
      actual class class_ref 842626 // TreeVisitor
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A simple visitor for tree nodes.

@author Peter von der Ah&eacute;
@since 1.6
"
      classrelation 2877314 // <realization>
	relation 2877314 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2877314 // <realization>
	  b parent class_ref 842626 // TreeVisitor
      end

      attribute 1327874 "DEFAULT_VALUE"
	const_attribute protected explicit_type "R"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6046338 "SimpleTreeVisitor"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6046466 "SimpleTreeVisitor"
	cpp_inline protected explicit_return_type ""
	nparams 1
	  param inout name "defaultValue" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6046594 "defaultAction"
	cpp_inline protected explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842370 // Tree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6046722 "visit"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842370 // Tree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6046850 "visit"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "nodes" type class_ref 184322 // Iterable
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Tree> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6046978 "visitCompilationUnit"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844546 // CompilationUnitTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6047106 "visitImport"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846210 // ImportTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6047234 "visitClass"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844290 // ClassTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6047362 "visitMethod"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847618 // MethodTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6047490 "visitVariable"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844162 // VariableTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6047618 "visitEmptyStatement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845314 // EmptyStatementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6047746 "visitBlock"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843650 // BlockTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6047874 "visitDoWhileLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845186 // DoWhileLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048002 "visitWhileLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 850178 // WhileLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048130 "visitForLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845826 // ForLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048258 "visitEnhancedForLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845442 // EnhancedForLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048386 "visitLabeledStatement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846594 // LabeledStatementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048514 "visitSwitch"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849154 // SwitchTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048642 "visitCase"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843906 // CaseTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048770 "visitSynchronized"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849282 // SynchronizedTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6048898 "visitTry"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849538 // TryTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049026 "visitCatch"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844034 // CatchTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049154 "visitConditionalExpression"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844930 // ConditionalExpressionTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049282 "visitIf"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846082 // IfTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049410 "visitExpressionStatement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845698 // ExpressionStatementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049538 "visitBreak"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843778 // BreakTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049666 "visitContinue"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845058 // ContinueTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049794 "visitReturn"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848642 // ReturnTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6049922 "visitThrow"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849410 // ThrowTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050050 "visitAssert"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843138 // AssertTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050178 "visitMethodInvocation"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847490 // MethodInvocationTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050306 "visitNewClass"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848002 // NewClassTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050434 "visitNewArray"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847874 // NewArrayTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050562 "visitLambdaExpression"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846722 // LambdaExpressionTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050690 "visitParenthesized"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848258 // ParenthesizedTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050818 "visitAssignment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843394 // AssignmentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6050946 "visitCompoundAssignment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844802 // CompoundAssignmentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051074 "visitUnary"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 850050 // UnaryTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051202 "visitBinary"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843522 // BinaryTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051330 "visitTypeCast"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849794 // TypeCastTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051458 "visitInstanceOf"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846338 // InstanceOfTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051586 "visitArrayAccess"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842882 // ArrayAccessTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051714 "visitMemberSelect"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847362 // MemberSelectTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051842 "visitMemberReference"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847106 // MemberReferenceTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6051970 "visitIdentifier"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845954 // IdentifierTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052098 "visitLiteral"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846978 // LiteralTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052226 "visitPrimitiveType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848386 // PrimitiveTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052354 "visitArrayType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843010 // ArrayTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052482 "visitParameterizedType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848130 // ParameterizedTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052610 "visitUnionType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849666 // UnionTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052738 "visitIntersectionType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846466 // IntersectionTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052866 "visitTypeParameter"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849922 // TypeParameterTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6052994 "visitWildcard"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 850306 // WildcardTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6053122 "visitModifiers"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844418 // ModifiersTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6053250 "visitAnnotation"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842754 // AnnotationTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6053378 "visitAnnotatedType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842114 // AnnotatedTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6053506 "visitErroneous"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845570 // ErroneousTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6053634 "visitOther"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842370 // Tree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 854530 "TaskEvent"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides details about work that has been done by the JDK Java Compiler, javac.

@author Jonathan Gibbons
@since 1.6
"
      class 854658 "Kind"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	java_annotation "@jdk.Exported
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1328002 "PARSE"
	  public type class_ref 854658 // Kind
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "For events related to the parsing of a file.

"
	end

	attribute 1328130 "ENTER"
	  public type class_ref 854658 // Kind
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "For events relating to elements being entered.

"
	end

	attribute 1328258 "ANALYZE"
	  public type class_ref 854658 // Kind
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "For events relating to elements being analyzed for errors.

"
	end

	attribute 1328386 "GENERATE"
	  public type class_ref 854658 // Kind
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "For events relating to class files being generated.

"
	end

	attribute 1328514 "ANNOTATION_PROCESSING"
	  public type class_ref 854658 // Kind
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "For events relating to overall annotation processing.

"
	end

	attribute 1328642 "ANNOTATION_PROCESSING_ROUND"
	  public type class_ref 854658 // Kind
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "For events relating to an individual annotation processing round.
"
	end
      end

      operation 6053762 "TaskEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "kind" type class_ref 854658 // Kind
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6053890 "TaskEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "kind" type class_ref 854658 // Kind
	  param inout name "sourceFile" type class_ref 841858 // JavaFileObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054018 "TaskEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "kind" type class_ref 854658 // Kind
	  param inout name "unit" type class_ref 844546 // CompilationUnitTree
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054146 "TaskEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "kind" type class_ref 854658 // Kind
	  param inout name "unit" type class_ref 844546 // CompilationUnitTree
	  param inout name "clazz" type class_ref 848898 // TypeElement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054274 "TaskEvent"
	private explicit_return_type ""
	nparams 4
	  param inout name "kind" type class_ref 854658 // Kind
	  param inout name "file" type class_ref 841858 // JavaFileObject
	  param inout name "unit" type class_ref 844546 // CompilationUnitTree
	  param inout name "clazz" type class_ref 848898 // TypeElement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054402 "getKind"
	public return_type class_ref 854658 // Kind
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054530 "getSourceFile"
	public return_type class_ref 841858 // JavaFileObject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054658 "getCompilationUnit"
	public return_type class_ref 844546 // CompilationUnitTree
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054786 "getTypeElement"
	public return_type class_ref 848898 // TypeElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6054914 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2877442 // kind (<unidirectional association>)
	relation 2877442 --->
	  a role_name "kind" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2877442 // kind (<unidirectional association>)
	  b parent class_ref 854658 // Kind
      end

      classrelation 2877570 // file (<unidirectional association>)
	relation 2877570 --->
	  a role_name "file" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2877570 // file (<unidirectional association>)
	  b parent class_ref 841858 // JavaFileObject
      end

      classrelation 2877698 // unit (<unidirectional association>)
	relation 2877698 --->
	  a role_name "unit" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2877698 // unit (<unidirectional association>)
	  b parent class_ref 844546 // CompilationUnitTree
      end

      classrelation 2877826 // clazz (<unidirectional association>)
	relation 2877826 --->
	  a role_name "clazz" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2877826 // clazz (<unidirectional association>)
	  b parent class_ref 848898 // TypeElement
      end
    end

    class 854786 "TreePathScanner"
      visibility public 
      nformals 2
      formal name "R" type "" explicit_default_value ""
        explicit_extends ""
      formal name "P" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 854914 // TreeScanner
        rank 0 explicit_value ""
      actual class class_ref 854914 // TreeScanner
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A TreeVisitor that visits all the child tree nodes, and provides
support for maintaining a path for the parent nodes.
To visit nodes of a particular type, just override the
corresponding visitorXYZ method.
Inside your method, call super.visitXYZ to visit descendant
nodes.

@author Jonathan Gibbons
@since 1.6
"
      classrelation 2878594 // <realization>
	relation 2878594 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2878594 // <realization>
	  b parent class_ref 854914 // TreeScanner
      end

      operation 6063746 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "path" type class_ref 850818 // TreePath
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan a tree from a position identified by a TreePath.
"
      end

      operation 6063874 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "tree" type class_ref 842370 // Tree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Scan a single node.
The current path is updated for the duration of the scan.
"
      end

      operation 6064002 "getCurrentPath"
	cpp_inline public return_type class_ref 850818 // TreePath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current path for the node, as built up by the currently
active set of scan calls.
"
      end

      classrelation 2878722 // path (<unidirectional association>)
	relation 2878722 --->
	  a role_name "path" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2878722 // path (<unidirectional association>)
	  b parent class_ref 850818 // TreePath
      end
    end

    class 854914 "TreeScanner"
      visibility public 
      nformals 2
      formal name "R" type "" explicit_default_value ""
        explicit_extends ""
      formal name "P" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 842626 // TreeVisitor
        rank 0 explicit_value ""
      actual class class_ref 842626 // TreeVisitor
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A TreeVisitor that visits all the child tree nodes.
To visit nodes of a particular type, just override the
corresponding visitXYZ method.
Inside your method, call super.visitXYZ to visit descendant
nodes.

<p>The default implementation of the visitXYZ methods will determine
a result as follows:
<ul>
<li>If the node being visited has no children, the result will be null.
<li>If the node being visited has one child, the result will be the
result of calling {@code scan} on that child. The child may be a simple node
or itself a list of nodes.
<li> If the node being visited has more than one child, the result will
be determined by calling {@code scan} each child in turn, and then combining the
result of each scan after the first with the cumulative result
so far, as determined by the {@link #reduce} method. Each child may be either
a simple node of a list of nodes. The default behavior of the {@code reduce}
method is such that the result of the visitXYZ method will be the result of
the last child scanned.
</ul>

<p>Here is an example to count the number of identifier nodes in a tree:
<pre>
  class CountIdentifiers extends TreeScanner&lt;Integer,Void&gt; {
     {@literal @}Override
     public Integer visitIdentifier(IdentifierTree node, Void p) {
         return 1;
     }
     {@literal @}Override
     public Integer reduce(Integer r1, Integer r2) {
         return (r1 == null ? 0 : r1) + (r2 == null ? 0 : r2);
     }
  }
</pre>

@author Peter von der Ah&eacute;
@author Jonathan Gibbons
@since 1.6
"
      classrelation 2878466 // <realization>
	relation 2878466 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2878466 // <realization>
	  b parent class_ref 842626 // TreeVisitor
      end

      operation 6056322 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842370 // Tree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Scan a single node.
"
      end

      operation 6056450 "scanAndReduce"
	cpp_inline private explicit_return_type "R"
	nparams 3
	  param inout name "node" type class_ref 842370 // Tree
	  param inout name "p" explicit_type "P"
	  param inout name "r" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6056578 "scan"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "nodes" type class_ref 184322 // Iterable
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Tree> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Scan a list of nodes.
"
      end

      operation 6056706 "scanAndReduce"
	cpp_inline private explicit_return_type "R"
	nparams 3
	  param inout name "nodes" type class_ref 184322 // Iterable
	  param inout name "p" explicit_type "P"
	  param inout name "r" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Tree> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6056834 "reduce"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "r1" explicit_type "R"
	  param inout name "r2" explicit_type "R"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reduces two results into a combined result.
The default implementation is to return the first parameter.
The general contract of the method is that it may take any action whatsoever.
"
      end

      operation 6056962 "visitCompilationUnit"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844546 // CompilationUnitTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***************************************************************************
Visitor methods
**************************************************************************"
      end

      operation 6057090 "visitImport"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846210 // ImportTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6057218 "visitClass"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844290 // ClassTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6057346 "visitMethod"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847618 // MethodTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6057474 "visitVariable"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844162 // VariableTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6057602 "visitEmptyStatement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845314 // EmptyStatementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6057730 "visitBlock"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843650 // BlockTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6057858 "visitDoWhileLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845186 // DoWhileLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6057986 "visitWhileLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 850178 // WhileLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6058114 "visitForLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845826 // ForLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6058242 "visitEnhancedForLoop"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845442 // EnhancedForLoopTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6058370 "visitLabeledStatement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846594 // LabeledStatementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6058498 "visitSwitch"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849154 // SwitchTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6058626 "visitCase"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843906 // CaseTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6058754 "visitSynchronized"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849282 // SynchronizedTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6058882 "visitTry"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849538 // TryTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059010 "visitCatch"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844034 // CatchTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059138 "visitConditionalExpression"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844930 // ConditionalExpressionTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059266 "visitIf"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846082 // IfTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059394 "visitExpressionStatement"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845698 // ExpressionStatementTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059522 "visitBreak"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843778 // BreakTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059650 "visitContinue"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845058 // ContinueTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059778 "visitReturn"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848642 // ReturnTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6059906 "visitThrow"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849410 // ThrowTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060034 "visitAssert"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843138 // AssertTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060162 "visitMethodInvocation"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847490 // MethodInvocationTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060290 "visitNewClass"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848002 // NewClassTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060418 "visitNewArray"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847874 // NewArrayTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060546 "visitLambdaExpression"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846722 // LambdaExpressionTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060674 "visitParenthesized"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848258 // ParenthesizedTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060802 "visitAssignment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843394 // AssignmentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6060930 "visitCompoundAssignment"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844802 // CompoundAssignmentTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061058 "visitUnary"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 850050 // UnaryTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061186 "visitBinary"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843522 // BinaryTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061314 "visitTypeCast"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849794 // TypeCastTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061442 "visitInstanceOf"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846338 // InstanceOfTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061570 "visitArrayAccess"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842882 // ArrayAccessTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061698 "visitMemberSelect"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847362 // MemberSelectTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061826 "visitMemberReference"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 847106 // MemberReferenceTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6061954 "visitIdentifier"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845954 // IdentifierTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062082 "visitLiteral"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846978 // LiteralTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062210 "visitPrimitiveType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848386 // PrimitiveTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062338 "visitArrayType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 843010 // ArrayTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062466 "visitParameterizedType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 848130 // ParameterizedTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062594 "visitUnionType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849666 // UnionTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062722 "visitIntersectionType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 846466 // IntersectionTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062850 "visitTypeParameter"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 849922 // TypeParameterTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6062978 "visitWildcard"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 850306 // WildcardTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6063106 "visitModifiers"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 844418 // ModifiersTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6063234 "visitAnnotation"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842754 // AnnotationTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6063362 "visitAnnotatedType"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842114 // AnnotatedTypeTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6063490 "visitOther"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 842370 // Tree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6063618 "visitErroneous"
	cpp_inline public explicit_return_type "R"
	nparams 2
	  param inout name "node" type class_ref 845570 // ErroneousTree
	  param inout name "p" explicit_type "P"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 165506 "util"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 612610 "SourcePositions"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.tree.*;
${definition}"
      associated_elems
	class_ref 850562 // SourcePositions
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 612738 "DocSourcePositions"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.doctree.DocCommentTree;
import com.sun.source.doctree.DocTree;
import com.sun.source.tree.CompilationUnitTree;
${definition}"
      associated_elems
	class_ref 850434 // DocSourcePositions
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 612866 "DocTreePath"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.doctree.DocCommentTree;
import com.sun.source.doctree.DocTree;
import java.util.Iterator;
${definition}"
      associated_elems
	class_ref 850690 // DocTreePath
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 612994 "DocTreeScanner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.doctree.*;
${definition}"
      associated_elems
	class_ref 851074 // DocTreeScanner
      end
      comment "Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 613122 "DocTreePathScanner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.doctree.DocTree;
${definition}"
      associated_elems
	class_ref 850946 // DocTreePathScanner
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 613250 "Trees"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
import javax.annotation.processing.ProcessingEnvironment;
import javax.lang.model.element.AnnotationMirror;
import javax.lang.model.element.AnnotationValue;
import javax.lang.model.element.Element;
import javax.lang.model.element.ExecutableElement;
import javax.lang.model.element.TypeElement;
import javax.lang.model.type.DeclaredType;
import javax.lang.model.type.ErrorType;
import javax.lang.model.type.TypeMirror;
import javax.tools.Diagnostic;
import javax.tools.JavaCompiler.CompilationTask;
import com.sun.source.tree.CatchTree;
import com.sun.source.tree.ClassTree;
import com.sun.source.tree.CompilationUnitTree;
import com.sun.source.tree.MethodTree;
import com.sun.source.tree.Scope;
import com.sun.source.tree.Tree;
${definition}"
      associated_elems
	class_ref 851330 // Trees
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 613378 "DocTrees"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.annotation.processing.ProcessingEnvironment;
import javax.lang.model.element.Element;
import javax.tools.JavaCompiler.CompilationTask;
import com.sun.source.doctree.DocCommentTree;
import javax.tools.Diagnostic;
${definition}"
      associated_elems
	class_ref 851202 // DocTrees
      end
      comment "Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614018 "JavacTask"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.annotation.processing.ProcessingEnvironment;
import javax.lang.model.element.Element;
import javax.lang.model.type.TypeMirror;
import javax.lang.model.util.Elements;
import javax.lang.model.util.Types;
import javax.tools.JavaCompiler.CompilationTask;
import javax.tools.JavaFileObject;
import com.sun.source.tree.CompilationUnitTree;
import com.sun.source.tree.Tree;
import com.sun.tools.javac.api.BasicJavacTask;
import com.sun.tools.javac.processing.JavacProcessingEnvironment;
import com.sun.tools.javac.util.Context;
${definition}"
      associated_elems
	class_ref 852738 // JavacTask
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614146 "Plugin"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ServiceLoader;
import javax.tools.StandardLocation;
${definition}"
      associated_elems
	class_ref 854146 // Plugin
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614274 "SimpleDocTreeVisitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.doctree.*;
${definition}"
      associated_elems
	class_ref 854274 // SimpleDocTreeVisitor
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614402 "SimpleTreeVisitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.tree.*;
${definition}"
      associated_elems
	class_ref 854402 // SimpleTreeVisitor
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614530 "TaskEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.lang.model.element.TypeElement;
import javax.tools.JavaFileObject;
import com.sun.source.tree.CompilationUnitTree;
${definition}"
      associated_elems
	class_ref 854530 // TaskEvent
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614658 "TaskListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 853762 // TaskListener
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614786 "TreePath"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import com.sun.source.tree.*;
${definition}"
      associated_elems
	class_ref 850818 // TreePath
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 614914 "TreeScanner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.tree.*;
${definition}"
      associated_elems
	class_ref 854914 // TreeScanner
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 615042 "TreePathScanner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.source.tree.*;
${definition}"
      associated_elems
	class_ref 854786 // TreePathScanner
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
