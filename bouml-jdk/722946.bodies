class DatatypeFactoryImpl
!!!4912386.java!!!	newDuration(in lexicalRepresentation : String) : Duration

                return new DurationImpl(lexicalRepresentation);
!!!4912514.java!!!	newDuration(in durationInMilliseconds : long) : Duration

                return new DurationImpl(durationInMilliseconds);
!!!4912642.java!!!	newDuration(in isPositive : boolean, in years : BigInteger, in months : BigInteger, in days : BigInteger, in hours : BigInteger, in minutes : BigInteger, in seconds : BigDecimal) : Duration

                return new DurationImpl(
                                isPositive,
                                years,
                                months,
                                days,
                                hours,
                                minutes,
                                seconds
                        );
!!!4912770.java!!!	newDurationYearMonth(in isPositive : boolean, in year : BigInteger, in month : BigInteger) : Duration

                return new DurationYearMonthImpl(
                         isPositive,
                         year,
                         month
                 );

!!!4912898.java!!!	newDurationYearMonth(in isPositive : boolean, in year : int, in month : int) : Duration

                return new DurationYearMonthImpl(
                        isPositive,
                        year,
                        month);
!!!4913026.java!!!	newDurationYearMonth(in lexicalRepresentation : String) : Duration

                return new DurationYearMonthImpl(lexicalRepresentation);

!!!4913154.java!!!	newDurationYearMonth(in durationInMilliseconds : long) : Duration

        return new DurationYearMonthImpl(durationInMilliseconds);
!!!4913282.java!!!	newDurationDayTime(in lexicalRepresentation : String) : Duration
            // lexicalRepresentation must be non-null
            if (lexicalRepresentation == null) {
                throw new NullPointerException(
                    "Trying to create an xdt:dayTimeDuration with an invalid"
                    + " lexical representation of \"null\"");
            }

            return new DurationDayTimeImpl(lexicalRepresentation);
!!!4913410.java!!!	newDurationDayTime(in durationInMilliseconds : long) : Duration

                return new DurationDayTimeImpl(durationInMilliseconds);
!!!4913538.java!!!	newDurationDayTime(in isPositive : boolean, in day : BigInteger, in hour : BigInteger, in minute : BigInteger, in second : BigInteger) : Duration

                return new DurationDayTimeImpl(
                        isPositive,
                        day,
                        hour,
                        minute,
                        (second != null)? new BigDecimal(second):null
                );
!!!4913666.java!!!	newDurationDayTime(in isPositive : boolean, in day : int, in hour : int, in minute : int, in second : int) : Duration

                        return new DurationDayTimeImpl(
                                isPositive,
                                day,
                                hour,
                                minute,
                                second
                                );
!!!4913794.java!!!	newXMLGregorianCalendar() : XMLGregorianCalendar

                return new XMLGregorianCalendarImpl();
!!!4913922.java!!!	newXMLGregorianCalendar(in lexicalRepresentation : String) : XMLGregorianCalendar

                return new XMLGregorianCalendarImpl(lexicalRepresentation);
!!!4914050.java!!!	newXMLGregorianCalendar(in cal : GregorianCalendar) : XMLGregorianCalendar

                return new XMLGregorianCalendarImpl(cal);
!!!4914178.java!!!	newXMLGregorianCalendar(in year : BigInteger, in month : int, in day : int, in hour : int, in minute : int, in second : int, in fractionalSecond : BigDecimal, in timezone : int) : XMLGregorianCalendar

                return new XMLGregorianCalendarImpl(
                        year,
                        month,
                        day,
                        hour,
                        minute,
                        second,
                        fractionalSecond,
                        timezone
                );
